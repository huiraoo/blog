<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IDEA</title>
    <url>/blog/2019/11/29/idea/</url>
    <content><![CDATA[<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>Ctrl + Shift + F：按照关键字内容查找</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 框架 · Spring Boot</title>
    <url>/blog/2019/11/28/java-frame-spring-boot/</url>
    <content><![CDATA[<h2 id="Sping-Boot-入门"><a href="#Sping-Boot-入门" class="headerlink" title="Sping Boot 入门"></a>Sping Boot 入门</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>简化 Spring 应用开发的框架，对整个 Spring 技术栈的一个大整合，J2EE 一站式解决方案，思想约定大于配置。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-28-154500.jpeg" alt></p>
<h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p><a href="https://start.spring.io/" target="_blank" rel="noopener">Spring Initializr</a></p>
<h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 该插件可以将应用打包成一个可执行的jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[INFO] Building jar: /Users/raohui/Code/springboot-demo/target/springboot-demo-<span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>

<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ java -jar springboot-demo-<span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT.jar </span><br><span class="line"></span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /\\ / ___<span class="string">'_ __ _ _(_)_ __  __ _ \ \ \ \</span></span><br><span class="line"><span class="string">( ( )\___ | '</span>_ | <span class="string">'_| | '</span>_ \/ _` | \ \ \ \</span><br><span class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  <span class="string">'  |____| .__|_| |_|_| |_\__, | / / / /</span></span><br><span class="line"><span class="string"> =========|_|==============|___/=/_/_/_/</span></span><br><span class="line"><span class="string"> :: Spring Boot ::        (v2.2.1.RELEASE)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2019-11-28 16:19:15.628  INFO 79863 --- [           main] com.rao.springboot.demo.RunApplication   : Starting RunApplication v0.0.1-SNAPSHOT on raohuideMacBook-Pro.local with PID 79863 (/Users/raohui/Code/springboot-demo/target/springboot-demo-0.0.1-SNAPSHOT.jar started by raohui in /Users/raohui/Code/springboot-demo/target)</span></span><br><span class="line"><span class="string">2019-11-28 16:19:15.630  INFO 79863 --- [           main] com.rao.springboot.demo.RunApplication   : No active profile set, falling back to default profiles: default</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.292  INFO 79863 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.299  INFO 79863 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.300  INFO 79863 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.27]</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.343  INFO 79863 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.343  INFO 79863 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 682 ms</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.466  INFO 79863 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService '</span>applicationTaskExecutor<span class="string">'</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.579  INFO 79863 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path '</span><span class="string">'</span></span><br><span class="line"><span class="string">2019-11-28 16:19:16.582  INFO 79863 --- [           main] com.rao.springboot.demo.RunApplication   : Started RunApplication in 6.228 seconds (JVM running for 6.543)</span></span><br><span class="line"><span class="string">2019-11-28 16:19:34.770  INFO 79863 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet '</span>dispatcherServlet<span class="string">'</span></span><br><span class="line"><span class="string">2019-11-28 16:19:34.770  INFO 79863 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet '</span>dispatcherServlet<span class="string">'</span></span><br><span class="line"><span class="string">2019-11-28 16:19:34.774  INFO 79863 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>pom 父项目</strong>：真正管理 Spring Boot 应用里面的所有依赖版本</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>场景启动器</strong>：<a href="https://docs.spring.io/spring-boot/docs/2.1.10.RELEASE/reference/html/using-boot-build-systems.html#using-boot-starter" target="_blank" rel="noopener">Starter</a></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- web模块正常运行所依赖的组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Spring Boot进行单元测试的模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      SpringApplication.run(RunApplication.class, args);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>@<strong>SpringBootApplication</strong>：这个注解说明该类是 Spring Boot 应用的主配置类，Spring Boot 就应该运行这个类的 main 方法来启动应用。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(excludeFilters = &#123; <span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</span><br><span class="line">      <span class="meta">@Filter</span>(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootApplication &#123;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootConfiguration</span><br></pre></td></tr></table></figure>

<ul>
<li><p>@<strong>SpringBootConfiguration</strong>：Spring Boot 的配置类，@Configuration 配置类上来标注这个注解。</p>
</li>
<li><p>@<strong>EnableAutoConfiguration</strong>：注解 Spring Boot 开启自动配置功能，有了自动配置类，就免去了我们手动编写配置注入功能组件等工作。</p>
</li>
</ul>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>Spring Boot 在启动的时候从类路径下的 <code>META-INF/spring-factories</code> 获取 EnableAutoConfiguration 指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作，<strong>spring-boot-autoconfigure-2.2.1.RELEASE.jar</strong>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"api"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeptController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DeptService deptService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataScope dataScope;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ENTITY_NAME = <span class="string">"dept"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Log</span>(<span class="string">"查询部门"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/dept"</span>)</span><br><span class="line">    <span class="meta">@PreAuthorize</span>(<span class="string">"hasAnyRole('ADMIN','USER_ALL','USER_SELECT','DEPT_ALL','DEPT_SELECT')"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">getDepts</span><span class="params">(DeptQueryCriteria criteria)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 数据权限</span></span><br><span class="line">        criteria.setIds(dataScope.getDeptIds());</span><br><span class="line">        List&lt;DeptDTO&gt; deptDTOS = deptService.queryAll(criteria);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity(deptService.buildTree(deptDTOS),HttpStatus.OK);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>@<strong>RestController</strong>：这个类所有方法返回的数据直接写给浏览器，如果是对象转为 json 数据。</p>
<h2 id="Spring-Boot-配置"><a href="#Spring-Boot-配置" class="headerlink" title="Spring Boot 配置"></a>Spring Boot 配置</h2><p><strong>全局配置文件</strong></p>
<p>可以对一些默认配置值进行修改，配置文件存放在 <code>/src/main/resources</code> 目录或者类路径 <code>/config</code> 下。</p>
<ul>
<li>application.properties</li>
<li>application.yml</li>
</ul>
<p>Yaml：以数据为中心，比 json、xml 更适合做配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java · Maven</title>
    <url>/blog/2019/11/28/java-maven/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://maven.apache.org/" target="_blank" rel="noopener">Maven</a> 是当前最受欢迎的 Java 项目管理构建自动化综合工具，主要功能：</p>
<ul>
<li>统一开发规范与工具</li>
<li>统一管理 Jar 包</li>
</ul>
<h2 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h2><p>Maven 根据坐标寻找构件时，首先会查看本地仓库，若本地仓库存在此构件则直接使用；若本地仓库不存在此构件，就会去远程仓库查找，查找到下载到本地仓库再使用。</p>
<p><strong>分类</strong></p>
<ul>
<li><strong>本地仓库</strong>：默认位置 <code>${user.home}/.m2/repository</code>，可通过 <code>settings.xml</code> 自定义</li>
<li><strong>中央仓库</strong>：Maven 自带的远程仓库，<code>http://repo2.maven.org/maven2/</code> </li>
<li><strong>私服</strong>：一种特殊的远程仓库，为节省带宽和时间，应在局域网内架设一个私有仓库服务器，用其代理所有外部的远程仓库。</li>
</ul>
<p><strong>资源库</strong></p>
<ul>
<li>中央仓库资源：<a href="http://mvnrepository.com/" target="_blank" rel="noopener">http://mvnrepository.com/</a>   、  <a href="https://search.maven.org/" target="_blank" rel="noopener">https://search.maven.org/</a></li>
<li>阿里云资源：<a href="http://maven.aliyun.com/nexus/content/groups/public/" target="_blank" rel="noopener">http://maven.aliyun.com/nexus/content/groups/public/</a></li>
</ul>
<h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h3><p>groupId，artifactId，version 三个元素是项目的坐标，唯一的标识这个项目。</p>
<ul>
<li><strong>groupId</strong>：项目所在组，一般是组织或公司</li>
<li><strong>artifactId</strong>：是当前项目在组中的唯一 ID，一般是项目名称</li>
<li><strong>version</strong>：表示版本</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>co.yixiang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>yshop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><ul>
<li><strong>jar</strong>：默认打包方式，我们可以在其他工程的 pom 文件中去引用它</li>
<li><strong>war</strong>：这种打包方式是将工程都部署在服务器上，用户通过浏览器直接访问</li>
<li><strong>pom</strong>：用在父级工程或聚合工程中，用来做 jar 包的版本控制</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>yshop-common<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>yshop-logging<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>yshop-system<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>yshop-tools<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>yshop-generator<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>yshop-api<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>yshop-mp<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="概念模型"><a href="#概念模型" class="headerlink" title="概念模型"></a>概念模型</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-28-102200.png" alt></p>
<h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><ul>
<li><p><strong>Clean</strong>：目的是清理项目</p>
<ul>
<li>pre-clean</li>
<li>clean：删除前一个构建生成的所有文件</li>
<li>post-clean</li>
</ul>
</li>
<li><p><strong>Default</strong>：定义了真正构建时所需要执行的所有步骤</p>
<ul>
<li>compile：编译</li>
<li>test：测试</li>
<li>package：使用已编译的代码，并将其打包成可部署格式</li>
<li>verify：运行检查以验证包是否有效</li>
<li>install：将该包安装到本地仓库</li>
<li>deploy：将项目输出部署到远程仓库</li>
</ul>
</li>
<li><p><strong>Site</strong>：目的是建立和发布项目站点</p>
<ul>
<li>pre-site</li>
<li>site：生成项目的站点文档</li>
<li>post-site</li>
<li>site-deploy：将生成的站点文档部署到指定的 web 服务器</li>
</ul>
</li>
</ul>
<h2 id="标准项目结构"><a href="#标准项目结构" class="headerlink" title="标准项目结构"></a>标准项目结构</h2><p><strong>核心思想</strong>：约束优于配置</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">│   ├── main</span><br><span class="line">│   │   ├── java: 源代码目录</span><br><span class="line">│   │   └── resources: 资源目录</span><br><span class="line">│   └── test</span><br><span class="line">│       └── java: 测试代码目录</span><br><span class="line">├── target</span><br><span class="line">│   ├── classes: 主体输出目录</span><br><span class="line">│   ├── generated-sources</span><br><span class="line">│   ├── generated-test-sources</span><br><span class="line">│   └── test-classes: 测试输出目录</span><br><span class="line">└── yshop-system.iml</span><br></pre></td></tr></table></figure>

<p><strong>版本规范</strong></p>
<ul>
<li>SNAPSHOT：快照版本，开发测试阶段，不稳定版本</li>
<li>LATEST：某个特定构建的最新发布版本</li>
<li>RELEASE：正式发布版本，稳定版本</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 框架 · MyBatis-Plus</title>
    <url>/blog/2019/11/27/java-frame-mybatis-plus/</url>
    <content><![CDATA[<p><strong>官方网站</strong>：<a href="https://mybatis.plus/" target="_blank" rel="noopener">https://mybatis.plus/</a></p>
<p><strong>GitHub</strong>：<a href="https://github.com/baomidou/mybatis-plus" target="_blank" rel="noopener">https://github.com/baomidou/mybatis-plus</a></p>
<p><strong>功能：</strong></p>
<ul>
<li>强大的 CRUD 操作</li>
<li>主键自动生成</li>
<li>强大的代码生成器</li>
</ul>
<p><strong>引入</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 框架 · JPA</title>
    <url>/blog/2019/11/27/java-frame-jpa/</url>
    <content><![CDATA[<h2 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h2><p>简单说，ORM 就是通过实例对象的语法，完成关系型数据库的操作的技术，<strong>对象-关系映射（Object/Relational Mapping）</strong> 的缩写，ORM 的主要功能是把数据库映射成对象。</p>
<ul>
<li><p>数据库表（table）–&gt; 类（class）</p>
</li>
<li><p>记录（record，行数据）–&gt; 对象（object）</p>
</li>
<li><p>字段（field）–&gt; 对象的属性（attribute）</p>
</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-27-142500.png" alt></p>
<p><strong>示例</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据库写法</span></span><br><span class="line">SELECT id, first_name, last_name, phone, birth_date, sex FROM person WHERE id = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ORM写法</span></span><br><span class="line">p = Person.get(<span class="number">10</span>);</span><br><span class="line">name = p.first_name;</span><br><span class="line">phone = p.phone</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>现在 Dao 持久层的解决方案中，大部分是采用 Spring Data JPA 或 <a href="https://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">MyBatis</a> 解决方案，并且传统企业多用前者，互联网企业多用后者。Spring Data JPA 是 Spring Data 在 JPA 和 ORM 框架之间抽象封装层，它不直接代替 ORM 框架，默认低层使用的 ORM 框架是 <a href="http://hibernate.org/" target="_blank" rel="noopener">Hibernate</a>。</p>
<h2 id="JPA"><a href="#JPA" class="headerlink" title="JPA"></a>JPA</h2><p>Java Persistence API，可以通过注解或者 XML 描述<strong>对象-关系表</strong>之间的映射关系，并将实体对象持久化到数据库中，JPA 是一套 ORM 规范。</p>
<p><strong><a href="https://spring.io/projects/spring-data-jpa#learn" target="_blank" rel="noopener">Spring Data JPA</a></strong>：是 Spring 提供的一套简化 JPA 开发的框架，按照约定好的方法命名规则写 dao 层接口，就可以在不写接口实现的情况下，实现对数据库的访问和操作，可以理解为 JPA 规范的再次封装抽象，底层还是使用了 Hibernate 的 JPA 技术实现。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-27-143900.jpg" alt></p>
<p><strong>接口约定命名规则</strong></p>
<table>
<thead>
<tr>
<th align="left">Keyword</th>
<th align="left">Sample</th>
<th align="left">JPQL snippet</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>And</code></td>
<td align="left"><code>findByLastnameAndFirstname</code></td>
<td align="left"><code>… where x.lastname = ?1 and x.firstname = ?2</code></td>
</tr>
<tr>
<td align="left"><code>Or</code></td>
<td align="left"><code>findByLastnameOrFirstname</code></td>
<td align="left"><code>… where x.lastname = ?1 or x.firstname = ?2</code></td>
</tr>
<tr>
<td align="left"><code>Is</code>, <code>Equals</code></td>
<td align="left"><code>findByFirstname</code>,<code>findByFirstnameEquals</code></td>
<td align="left"><code>… where x.firstname = ?1</code></td>
</tr>
<tr>
<td align="left"><code>Between</code></td>
<td align="left"><code>findByStartDateBetween</code></td>
<td align="left"><code>… where x.startDate between ?1 and ?2</code></td>
</tr>
<tr>
<td align="left"><code>LessThan</code></td>
<td align="left"><code>findByAgeLessThan</code></td>
<td align="left"><code>… where x.age &lt; ?1</code></td>
</tr>
<tr>
<td align="left"><code>LessThanEqual</code></td>
<td align="left"><code>findByAgeLessThanEqual</code></td>
<td align="left"><code>… where x.age &lt;= ?1</code></td>
</tr>
<tr>
<td align="left"><code>GreaterThan</code></td>
<td align="left"><code>findByAgeGreaterThan</code></td>
<td align="left"><code>… where x.age &gt; ?1</code></td>
</tr>
<tr>
<td align="left"><code>GreaterThanEqual</code></td>
<td align="left"><code>findByAgeGreaterThanEqual</code></td>
<td align="left"><code>… where x.age &gt;= ?1</code></td>
</tr>
<tr>
<td align="left"><code>After</code></td>
<td align="left"><code>findByStartDateAfter</code></td>
<td align="left"><code>… where x.startDate &gt; ?1</code></td>
</tr>
<tr>
<td align="left"><code>Before</code></td>
<td align="left"><code>findByStartDateBefore</code></td>
<td align="left"><code>… where x.startDate &lt; ?1</code></td>
</tr>
<tr>
<td align="left"><code>IsNull</code>, <code>Null</code></td>
<td align="left"><code>findByAge(Is)Null</code></td>
<td align="left"><code>… where x.age is null</code></td>
</tr>
<tr>
<td align="left"><code>IsNotNull</code>, <code>NotNull</code></td>
<td align="left"><code>findByAge(Is)NotNull</code></td>
<td align="left"><code>… where x.age not null</code></td>
</tr>
<tr>
<td align="left"><code>Like</code></td>
<td align="left"><code>findByFirstnameLike</code></td>
<td align="left"><code>… where x.firstname like ?1</code></td>
</tr>
<tr>
<td align="left"><code>NotLike</code></td>
<td align="left"><code>findByFirstnameNotLike</code></td>
<td align="left"><code>… where x.firstname not like ?1</code></td>
</tr>
<tr>
<td align="left"><code>StartingWith</code></td>
<td align="left"><code>findByFirstnameStartingWith</code></td>
<td align="left"><code>… where x.firstname like ?%</code></td>
</tr>
<tr>
<td align="left"><code>EndingWith</code></td>
<td align="left"><code>findByFirstnameEndingWith</code></td>
<td align="left"><code>… where x.firstname like %?</code></td>
</tr>
<tr>
<td align="left"><code>Containing</code></td>
<td align="left"><code>findByFirstnameContaining</code></td>
<td align="left"><code>… where x.firstname like %?%</code></td>
</tr>
<tr>
<td align="left"><code>OrderBy</code></td>
<td align="left"><code>findByAgeOrderByLastnameDesc</code></td>
<td align="left"><code>… where x.age = ?1 order by x.lastname desc</code></td>
</tr>
<tr>
<td align="left"><code>Not</code></td>
<td align="left"><code>findByLastnameNot</code></td>
<td align="left"><code>… where x.lastname &lt;&gt; ?1</code></td>
</tr>
<tr>
<td align="left"><code>In</code></td>
<td align="left"><code>findByAgeIn(Collection ages)</code></td>
<td align="left"><code>… where x.age in ?1</code></td>
</tr>
<tr>
<td align="left"><code>NotIn</code></td>
<td align="left"><code>findByAgeNotIn(Collection ages)</code></td>
<td align="left"><code>… where x.age not in ?1</code></td>
</tr>
<tr>
<td align="left"><code>True</code></td>
<td align="left"><code>findByActiveTrue()</code></td>
<td align="left"><code>… where x.active = true</code></td>
</tr>
<tr>
<td align="left"><code>False</code></td>
<td align="left"><code>findByActiveFalse()</code></td>
<td align="left"><code>… where x.active = false</code></td>
</tr>
<tr>
<td align="left"><code>IgnoreCase</code></td>
<td align="left"><code>findByFirstnameIgnoreCase</code></td>
<td align="left"><code>… where UPPER(x.firstame) = UPPER(?1)</code></td>
</tr>
</tbody></table>
<p><strong>maven 坐标</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>yml 配置</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置数据源</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    druid:</span></span><br><span class="line"><span class="attr">      type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attr">      driverClassName:</span> <span class="string">net.sf.log4jdbc.sql.jdbcapi.DriverSpy</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">jdbc:log4jdbc:mysql://localhost:3306/yshop</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#配置 Jpa</span></span><br><span class="line"><span class="attr">  jpa:</span></span><br><span class="line"><span class="attr">    hibernate:</span></span><br><span class="line">      <span class="comment"># 生产环境设置成 none，避免程序运行时自动更新数据库结构</span></span><br><span class="line"><span class="attr">      ddl-auto:</span> <span class="string">update</span></span><br></pre></td></tr></table></figure>

<h2 id="JPA-vs-MyBatis"><a href="#JPA-vs-MyBatis" class="headerlink" title="JPA vs MyBatis"></a>JPA vs MyBatis</h2><h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><p><strong>优点</strong>：</p>
<ul>
<li>SQL 语句可以自由控制，更灵活，性能更高</li>
<li>SQL 与代码分离，易于阅读和维护</li>
<li>提供 XML 标签，支持动态 SQL 语句</li>
</ul>
<p><strong>缺点</strong>：</p>
<ul>
<li>简单 CRUD 操作还得写 SQL 语句</li>
<li>XML 中有大量的 SQL 需要维护</li>
<li>MyBatis 自身功能有限，但支持 Plugin</li>
</ul>
<h3 id="JPA-1"><a href="#JPA-1" class="headerlink" title="JPA"></a>JPA</h3><p><strong>优点：</strong></p>
<ul>
<li>移植性比较好</li>
<li>提供了很多 CRUD 方法，开发效率高</li>
<li>对象化程度高</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>框架比较重，学习成本较高</li>
<li>性能不好控制</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 项目学习 · yshop</title>
    <url>/blog/2019/11/26/java-project-yshop/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://gitee.com/guchengwuyue/yshopmall" target="_blank" rel="noopener"><strong>yshop</strong></a> 基于当前流行技术组合的前后端分离商城系统， 包含商城、拼团、砍价、 秒杀、优惠券、积分、分销等功能，适合企业或个人二次开发。</p>
<ul>
<li><strong>体验</strong>：<a href="https://yshop.dayouqiantu.cn/" target="_blank" rel="noopener">https://yshop.dayouqiantu.cn</a>  </li>
<li><strong>登录</strong>：admin/123456</li>
</ul>
<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><ul>
<li>yshop-api：公众号 API 模块（H5）</li>
<li>yshop-mp：微信相关模块</li>
<li>yshop-common：公共模块</li>
<li>yshop-system：商城系统模块</li>
<li>yshop-logging：日志模块</li>
<li>yshop-tools：第三方工具模块</li>
<li>yshop-generator：代码生成模块</li>
</ul>
<h3 id="后端技术"><a href="#后端技术" class="headerlink" title="后端技术"></a>后端技术</h3><ul>
<li><a href="https://spring.io/projects/spring-boot/" target="_blank" rel="noopener">Spring Boot</a></li>
<li><a href="https://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">MyBatis</a>、<a href="https://mp.baomidou.com/" target="_blank" rel="noopener">MyBatis-Plus</a></li>
<li><a href="https://spring.io/projects/spring-security" target="_blank" rel="noopener">Spring Security</a></li>
<li><a href="https://spring.io/projects/spring-data-jpa" target="_blank" rel="noopener">JPA</a></li>
<li><a href="https://github.com/alibaba/druid" target="_blank" rel="noopener">Druid</a></li>
<li><a href="https://github.com/qos-ch/slf4j" target="_blank" rel="noopener">Slf4j</a></li>
<li><a href="https://github.com/alibaba/fastjson" target="_blank" rel="noopener">fastjson</a></li>
<li><a href="https://github.com/lcobucci/jwt" target="_blank" rel="noopener">JWT</a></li>
<li><a href="https://redis.io/" target="_blank" rel="noopener">Redis</a></li>
<li><a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener">Quartz</a></li>
<li><a href="https://www.mysql.com/" target="_blank" rel="noopener">MySQL</a></li>
<li><a href="https://swagger.io/" target="_blank" rel="noopener">Swagger</a></li>
<li><a href="https://github.com/Wechat-Group/WxJava" target="_blank" rel="noopener">WxJava</a></li>
<li><a href="https://projectlombok.org/" target="_blank" rel="noopener">Lombok</a></li>
<li><a href="https://www.hutool.cn/" target="_blank" rel="noopener">Hutool</a></li>
<li><a href="https://mapstruct.org/" target="_blank" rel="noopener">Mapstruct</a></li>
</ul>
<h3 id="前端技术"><a href="#前端技术" class="headerlink" title="前端技术"></a>前端技术</h3><ul>
<li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Vue</a> </li>
<li><a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noopener">Element</a></li>
</ul>
<h3 id="商城功能"><a href="#商城功能" class="headerlink" title="商城功能"></a>商城功能</h3><ul>
<li>商品模块：商品添加、规格设置，商品上下架等</li>
<li>订单模块：下单、购物车、支付，发货、收货、评价、退款等</li>
<li>营销模块：积分、优惠券、分销、砍价、拼团、秒杀(、到店核销等</li>
<li>微信模块：自定义菜单、自动回复、微信授权、图文管理、模板消息推送</li>
<li>配置模块：各种配置</li>
<li>用户模块：登陆、注册、会员卡等</li>
<li>其他等</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>知识留存率</title>
    <url>/blog/2019/11/26/ilearning/</url>
    <content><![CDATA[<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-26-101100.jpeg" alt></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 框架 · Spring</title>
    <url>/blog/2019/11/25/java-frame-spring/</url>
    <content><![CDATA[<h2 id="Spring-IOC"><a href="#Spring-IOC" class="headerlink" title="Spring IOC"></a>Spring IOC</h2><p><strong>IOC</strong>：Inversion Of Control，即控制反转，是一种设计思想。在传统的 Java SE 程序设计中，我们直接在对象内部通过 new 的方式来创建对象，是程序主动创建依赖对象；而在 Spring 程序设计中，IOC 是有专门的容器去控制对象。</p>
<p><strong>控制</strong>：就是对象的创建、初始化、销毁。</p>
<p><strong>反转</strong>：其实是反转的控制权，前面提到是由 Spring 来控制对象的生命周期，那么对象的控制就完全脱离了我们的控制，控制权交给了 Spring 。</p>
<ul>
<li>创建对象：原来是 new 一个，现在是由 Spring 容器创建。</li>
<li>初始化对象：原来是对象自己通过构造器或者 setter 方法给依赖的对象赋值，现在是由 Spring 容器自动注入。</li>
<li>销毁对象：原来是直接给对象赋值 或做一些销毁操作，现在是 Spring 容器管理生命周期负责销毁对象。</li>
</ul>
<p><strong>总结</strong>：IOC 解决了繁琐的对象生命周期的操作，降低程序间的耦合（依赖关系）。</p>
<p><strong>DI</strong>：Dependency injection，即依赖注入，是一种实现，而 IOC 是一种设计思想。程序把依赖交给容器，容器帮你管理依赖，这就是依赖注入的核心。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx 笔记</title>
    <url>/blog/2019/11/25/ilearning-nginx/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="http://nginx.org/" target="_blank" rel="noopener"><strong>Nginx</strong></a>：是一款轻量级的 Web 服务器、反向代理服务器，由于它的内存占用少（一个 worker 进程只占用 10-12M 内存）、启动极快、高并发能力强，在互联网项目中广泛应用。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-25-104100.jpeg" alt></p>
<h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><p><strong>正向代理</strong></p>
<p>由于防火墙的原因，我们并不能直接访问谷歌，那么我们可以借助 VPN 来实现，这就是一个简单的正向代理的例子。这里你能够发现，<strong>正向代理“代理”的是客户端</strong>，客户端是知道目标的，而目标是不知道客户端是通过 VPN 访问的。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-25-104200.jpeg" alt></p>
<p><strong>反向代理</strong></p>
<p>当我们在外网访问百度的时候，其实会进行一个转发，代理到内网去，这就是所谓的反向代理，<strong>即反向代理“代理”的是服务器端</strong>，而且这一个过程对于客户端而言是透明的。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-25-104300.jpeg" alt></p>
<p><strong>web 服务器对比</strong></p>
<table>
<thead>
<tr>
<th><strong>对比项 \ 服务器</strong></th>
<th><strong>Apache</strong></th>
<th><strong>Nginx</strong></th>
<th><strong>Lighttpd</strong></th>
</tr>
</thead>
<tbody><tr>
<td>Proxy代理</td>
<td>非常好</td>
<td>非常好</td>
<td>一般</td>
</tr>
<tr>
<td>Rewriter</td>
<td>好</td>
<td>非常好</td>
<td>一般</td>
</tr>
<tr>
<td>Fcgi</td>
<td>不好</td>
<td>好</td>
<td>非常好</td>
</tr>
<tr>
<td>热部署</td>
<td>不支持</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>系统压力</td>
<td>很大</td>
<td>很小</td>
<td>比较小</td>
</tr>
<tr>
<td>稳定性</td>
<td>好</td>
<td>非常好</td>
<td>不好</td>
</tr>
<tr>
<td>安全性</td>
<td>好</td>
<td>一般</td>
<td>一般</td>
</tr>
<tr>
<td>静态文件处理</td>
<td>一般</td>
<td>非常好</td>
<td>好</td>
</tr>
<tr>
<td>反向代理</td>
<td>一般</td>
<td>非常好</td>
<td>一般</td>
</tr>
</tbody></table>
<h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>负载均衡作为流量转发服务，将来自客户端的请求通过负载均衡集群转发至后端服务器，后端服务器再将响应通过内网返回给负载均衡。基础架构是采用集群部署，提供四层（TCP 协议和 UDP 协议）和七层（HTTP 和 HTTPS 协议）的负载均衡，可实现会话同步，以消除服务器单点故障，提升冗余，保证服务的稳定性。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-25-112200.png" alt></p>
<ul>
<li><strong>硬件负载均衡</strong>：是直接在服务器和外部网络间安装负载均衡设备，这种设备通常是一个独立于系统的硬件，我们称之为负载均衡器，例如 F5。</li>
<li><strong>软件负载均衡</strong>：是指在一台或多台服务器相应的操作系统上安装一个或多个附加软件来实现负载均衡，例如 Nginx、LVS。</li>
<li><strong>四层负载均衡</strong>：是指基于<strong>IP + 端口</strong>的负载均衡，常见例子有：LVS，F5。</li>
<li><strong>七层负载均衡</strong>：是基于<strong>虚拟URL或主机IP</strong>的负载均衡，常见例子有： HAProxy，MySQL Proxy。</li>
</ul>
<h2 id="Nginx-进程"><a href="#Nginx-进程" class="headerlink" title="Nginx 进程"></a>Nginx 进程</h2><p>启动 Nginx 后，其实就是在 80 端口启动了 Socket 服务进行监听，Nginx 涉及 Master 进程和 Worker 进程。</p>
<ul>
<li><strong>Master 进程</strong>：读取并验证配置文件 <code>nginx.conf</code>，管理 worker 进程。</li>
<li><strong>Worker 进程</strong>：每一个 Worker 进程都维护一个线程（避免线程切换），处理连接和请求，Worker 进程的个数由配置文件决定，一般和 CPU 个数相关（有利于进程切换），配置几个就有几个 Worker 进程。</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-25-134000.jpeg" alt></p>
<p><strong>思考1：Nginx 如何做到热部署？</strong></p>
<p>所谓热部署，就是配置文件 <code>nginx.conf</code> 修改后，不需要 stop nginx，不需要中断请求，就能让配置文件生效！</p>
<p><strong>实现方案</strong>：修改配置文件 <code>nginx.conf</code> 后，重新生成新的 worker 进程，当然会以新的配置进行处理，而且新的请求都必须交给新的 worker 进程，至于老 worker 进程，等把那些以前的请求处理完毕，kill 掉即可。</p>
<p><strong>思考2：Nginx 如何做到高并发下的高效处理？</strong></p>
<p><strong>实现方案</strong>：Nginx 采用了 Linux 的 epoll 模型，epoll 模型基于事件驱动机制，它可以监控多个事件是否准备完毕，如果 OK，那么放入 epoll 队列中，这个过程是异步的，worker 只需要从 epoll 队列循环处理即可。</p>
<p><strong>思考3：Nginx 挂了怎么办？</strong></p>
<p><strong>实现方案</strong>：Keepalived + Nginx 实现高可用</p>
<ul>
<li>请求不要直接打到 Nginx 上，应该先通过 Keepalived（这就是所谓虚拟 IP，VIP），消除单点故障</li>
<li>Keepalived 应该能监控 Nginx 的生命状态（提供一个用户自定义的脚本，定期检查 Nginx 进程状态，进行权重变化，从而实现 Nginx 故障切换）</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-25-113000.jpeg" alt></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>安装</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">rpm -ivh http://nginx.org/packages/centos/<span class="number">7</span>/noarch/RPMS/nginx-release-centos-<span class="number">7</span>-<span class="number">0</span>.el7.ngx.noarch.rpm</span><br><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure>

<ul>
<li>路径</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ whereis nginx</span><br><span class="line">nginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.<span class="number">8</span>.gz</span><br><span class="line"></span><br><span class="line">- Nginx配置路径：/etc/nginx/nginx.conf</span><br><span class="line">- PID目录：/var/run/nginx.pid</span><br><span class="line">- 错误日志：/var/log/nginx/error.log</span><br><span class="line">- 访问日志：/var/log/nginx/access.log</span><br><span class="line">- 默认站点目录：/usr/share/nginx/html</span><br></pre></td></tr></table></figure>

<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  zentao.smocer.top;</span><br><span class="line"></span><br><span class="line">        access_log  /var/log/nginx/zentao.access.log;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">          try_files /_not_exists_ @backend;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location @backend &#123;</span><br><span class="line">           proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">           proxy_set_header Host            $http_host;</span><br><span class="line">           proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">           </span><br><span class="line">        proxy_pass http://10.133.0.53:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><blockquote>
<p>启动</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure>

<blockquote>
<p>检查配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure>

<blockquote>
<p>热加载</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查询进程</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure>

<blockquote>
<p>停服务</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 框架 · MyBatis</title>
    <url>/blog/2019/11/25/java-frame-mybatis/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">MyBatis</a> 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>MyBatis 的基本工作原理是：</p>
<ul>
<li>先封装 SQL</li>
<li>接着调用 JDBC 操作数据库</li>
<li>最后把数据库返回的表结果封装成 Java 类</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-25-103400.png" alt></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>如果使用 <a href="http://maven.apache.org/" target="_blank" rel="noopener">Maven</a> 来构建项目，则需将下面的 dependency 代码置于 <code>pom.xml</code> 文件中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>使用 MyBatis 实现数据库的增删改查：</p>
<ul>
<li>表 <code>user</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">CREATE TABLE `user` (</span><br><span class="line">  `id` int(<span class="number">11</span>) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(<span class="number">32</span>) NOT NULL COMMENT <span class="string">'用户名称'</span>,</span><br><span class="line">  `birthday` datetime DEFAULT NULL COMMENT <span class="string">'生日'</span>,</span><br><span class="line">  `sex` char(<span class="number">1</span>) NOT NULL COMMENT <span class="string">'性别'</span>,</span><br><span class="line">  `address` varchar(<span class="number">255</span>) DEFAULT NULL COMMENT <span class="string">'地址'</span>,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=<span class="number">5</span> DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from user;</span><br><span class="line">+----+----------+---------------------+-----+--------------------+</span><br><span class="line">| id | username | birthday            | sex | address            |</span><br><span class="line">+----+----------+---------------------+-----+--------------------+</span><br><span class="line">|  <span class="number">1</span> | rao      | <span class="number">1990</span>-<span class="number">08</span>-<span class="number">07</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> | 男  | 陕西省西安市         |</span><br><span class="line">|  <span class="number">2</span> | yu       | <span class="number">1990</span>-<span class="number">01</span>-<span class="number">02</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> | 女  | 山东省菏泽市         |</span><br><span class="line">|  <span class="number">3</span> | rao      | <span class="number">2019</span>-<span class="number">11</span>-<span class="number">24</span> <span class="number">04</span>:<span class="number">54</span>:<span class="number">31</span> | 女  | 山东省青岛市         |</span><br><span class="line">+----+----------+---------------------+-----+--------------------+</span><br></pre></td></tr></table></figure>

<ul>
<li>主配置文件 <code>SqlMapperConfig.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- MyBatis主配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置mysql环境 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置事务类型 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置数据源 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatisdb"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定映射配置文件的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- XML方式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/rao/dao/IUserMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注解方式 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mapper class="com.rao.dao.IUserDao"/--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>实体类 <code>User.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.rao.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user表实体类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Rao Hui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-11-24 15:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", username='"</span> + username + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", birthday="</span> + birthday +</span><br><span class="line">                <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", address='"</span> + address + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>Dao 接口 <code>IUserDao.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.rao.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rao.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户的持久层接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Rao Hui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-11-24 15:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//@Select("select * from user") // 注解方式</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">saveUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">deleteUser</span><span class="params">(Integer userId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>映射配置文件 <code>IUserMapper.xml</code></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.rao.dao.IUserDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 查询用户 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.rao.domain.User"</span>&gt;</span></span><br><span class="line">        select * from user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 插入用户 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"saveUser"</span> <span class="attr">parameterType</span>=<span class="string">"com.rao.domain.User"</span>&gt;</span></span><br><span class="line">        insert into user (username,sex,birthday,address) values (#&#123;username&#125;,#&#123;sex&#125;,#&#123;birthday&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 更新用户 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"com.rao.domain.User"</span>&gt;</span></span><br><span class="line">        update user set username=#&#123;username&#125;,sex=#&#123;sex&#125;,birthday=#&#123;birthday&#125;,address=#&#123;address&#125; where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 删除用户 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUser"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        delete from user where id=#&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>接口测试类 <code>MybatisTest.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.rao.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.rao.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> com.rao.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * mybatis入门测试</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Rao Hui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-11-24 15:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> InputStream in;</span><br><span class="line">    <span class="keyword">private</span> SqlSession session;</span><br><span class="line">    <span class="keyword">private</span> IUserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 1. 读取配置文件</span></span><br><span class="line">        in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 创建SqlSessionFactory工厂</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 使用工厂生产SqlSession对象</span></span><br><span class="line">        session = factory.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line">        userDao = session.getMapper(IUserDao.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        session.commit();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5. 使用代理对象执行方法</span></span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : users)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSaveUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"hui"</span>);</span><br><span class="line">        user.setSex(<span class="string">"男"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"山东省青岛市"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        userDao.saveUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">3</span>);</span><br><span class="line">        user.setUsername(<span class="string">"liu"</span>);</span><br><span class="line">        user.setSex(<span class="string">"女"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"山东省青岛市"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        userDao.updateUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDeleteUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        userDao.deleteUser(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.bilibili.com/video/av71389596" target="_blank" rel="noopener">来源</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 高级特性</title>
    <url>/blog/2019/11/20/java-object-and-class/</url>
    <content><![CDATA[<h2 id="反射-Reflection"><a href="#反射-Reflection" class="headerlink" title="反射 (Reflection)"></a>反射 (Reflection)</h2><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p><strong>反射机制</strong>：在运行状态中，可以动态访问 Java 对象的属性、方法、构造方法等。</p>
<p><strong>场景</strong>：很多框架都运用了反射原理，例如 MyBatis 的实体类，Spring 的 AOP 等都有反射的实现。</p>
<h3 id="相关类"><a href="#相关类" class="headerlink" title="相关类"></a>相关类</h3><ul>
<li>java.lang.Class：代表类的实体，在运行的 Java 应用程序中表示类和接口</li>
<li>java.lang.reflect.Method：代表类的方法</li>
<li>java.lang.reflect.Field：代表类的成员变量</li>
<li>java.lang.reflect.Constructor：代表类的构造方法</li>
</ul>
<h4 id="Class"><a href="#Class" class="headerlink" title="Class"></a>Class</h4><ul>
<li><strong>获取类相关方法</strong></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>asSubclass(Class<u> clazz)</u></td>
<td>把传递的类的对象转换成代表其子类的对象</td>
</tr>
<tr>
<td>Cast</td>
<td>把对象转换成代表类或是接口的对象</td>
</tr>
<tr>
<td>getClassLoader()</td>
<td>获得类的加载器</td>
</tr>
<tr>
<td>getClasses()</td>
<td>返回一个数组，数组中包含该类中所有公共类和接口类的对象</td>
</tr>
<tr>
<td>getDeclaredClasses()</td>
<td>返回一个数组，数组中包含该类中所有类和接口类的对象</td>
</tr>
<tr>
<td>forName(String className)</td>
<td>根据类名返回类的对象</td>
</tr>
<tr>
<td>getName()</td>
<td>获得类的完整路径名字</td>
</tr>
<tr>
<td>newInstance()</td>
<td>创建类的实例</td>
</tr>
<tr>
<td>getPackage()</td>
<td>获得类的包</td>
</tr>
<tr>
<td>getSimpleName()</td>
<td>获得类的名字</td>
</tr>
<tr>
<td>getSuperclass()</td>
<td>获得当前类继承的父类的名字</td>
</tr>
<tr>
<td>getInterfaces()</td>
<td>获得当前类实现的类或是接口</td>
</tr>
</tbody></table>
<ul>
<li><strong>获取类中属性相关的方法</strong></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>getField(String name)</td>
<td>获得某个公有的属性对象</td>
</tr>
<tr>
<td>getFields()</td>
<td>获得所有公有的属性对象</td>
</tr>
<tr>
<td>getDeclaredField(String name)</td>
<td>获得某个属性对象</td>
</tr>
<tr>
<td>getDeclaredFields()</td>
<td>获得所有属性对象</td>
</tr>
</tbody></table>
<ul>
<li><strong>获取类中构造器相关的方法</strong></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>getConstructor(Class…&lt;?&gt; parameterTypes)</td>
<td>获得该类中与参数类型匹配的公有构造方法</td>
</tr>
<tr>
<td>getConstructors()</td>
<td>获得该类的所有公有构造方法</td>
</tr>
<tr>
<td>getDeclaredConstructor(Class…&lt;?&gt; parameterTypes)</td>
<td>获得该类中与参数类型匹配的构造方法</td>
</tr>
<tr>
<td>getDeclaredConstructors()</td>
<td>获得该类所有构造方法</td>
</tr>
</tbody></table>
<ul>
<li><strong>获得类中方法相关的方法</strong></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>getMethod(String name, Class…&lt;?&gt; parameterTypes)</td>
<td>获得该类某个公有的方法</td>
</tr>
<tr>
<td>getMethods()</td>
<td>获得该类所有公有的方法</td>
</tr>
<tr>
<td>getDeclaredMethod(String name, Class…&lt;?&gt; parameterTypes)</td>
<td>获得该类某个方法</td>
</tr>
<tr>
<td>getDeclaredMethods()</td>
<td>获得该类所有方法</td>
</tr>
</tbody></table>
<ul>
<li><strong>获得类中注解相关的方法</strong></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>getAnnotation(Class<a> annotationClass)</a></td>
<td>返回该类中与参数类型匹配的公有注解对象</td>
</tr>
<tr>
<td>getAnnotations()</td>
<td>返回该类所有的公有注解对象</td>
</tr>
<tr>
<td>getDeclaredAnnotation(Class<a> annotationClass)</a></td>
<td>返回该类中与参数类型匹配的所有注解对象</td>
</tr>
<tr>
<td>getDeclaredAnnotations()</td>
<td>返回该类所有的注解对象</td>
</tr>
</tbody></table>
<h4 id="Field"><a href="#Field" class="headerlink" title="Field"></a>Field</h4><table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>equals(Object obj)</td>
<td>属性与obj相等则返回true</td>
</tr>
<tr>
<td>get(Object obj)</td>
<td>获得obj中对应的属性值</td>
</tr>
<tr>
<td>set(Object obj, Object value)</td>
<td>设置obj中对应属性值</td>
</tr>
</tbody></table>
<h4 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h4><table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>invoke(Object obj, Object… args)</td>
<td>传递object对象及参数调用该对象对应的方法</td>
</tr>
</tbody></table>
<h4 id="Constructor"><a href="#Constructor" class="headerlink" title="Constructor"></a>Constructor</h4><table>
<thead>
<tr>
<th>方法</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>newInstance(Object… initargs)</td>
<td>根据传递的参数创建类的对象</td>
</tr>
</tbody></table>
<h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><ul>
<li>实体类 <code>Book.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Book实体类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Rao Hui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-11-26 09:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String TAG = <span class="string">"BookTag"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Book&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", author='"</span> + author + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(String name, String author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.author = author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAuthor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAuthor</span><span class="params">(String author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.author = author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">declareMethod</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        String string = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (index)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                string = <span class="string">"I am declaredMethod 1 !"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                string = <span class="string">"I am declaredMethod 2 !"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                string = <span class="string">"I am declaredMethod 1 !"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> string;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>反射类 <code>ReflectBook.java</code></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Book实体类反射测试</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Rao Hui</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-11-26 09:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectBook</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 反射创建对象</span></span><br><span class="line">            reflectNewInstance();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 反射私有构造方法</span></span><br><span class="line">            reflectPrivateConstrcutor();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 反射私有方法</span></span><br><span class="line">            reflectPrivateMethod();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 反射私有属性</span></span><br><span class="line">            reflectPrivateField();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 反射创建对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reflectNewInstance</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Class&lt;?&gt; classBook = Class.forName(<span class="string">"Book"</span>);</span><br><span class="line">        Object objectBook = classBook.newInstance();</span><br><span class="line">        Book book = (Book)objectBook;</span><br><span class="line">        book.setName(<span class="string">"SRE运维解密"</span>);</span><br><span class="line">        book.setAuthor(<span class="string">"Google"</span>);</span><br><span class="line">        System.out.println(book.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 反射私有构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reflectPrivateConstrcutor</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Class&lt;?&gt; classBook = Class.forName(<span class="string">"Book"</span>);</span><br><span class="line">        Constructor&lt;?&gt; declaredConstructorBook = classBook.getDeclaredConstructor(String.class,String.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取消权限控制检查</span></span><br><span class="line">        declaredConstructorBook.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Book book = (Book)declaredConstructorBook.newInstance(<span class="string">"高性能 MySQL"</span>, <span class="string">"hui"</span>);</span><br><span class="line">        System.out.println(book.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 反射私有方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reflectPrivateMethod</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Class&lt;?&gt; classBook = Class.forName(<span class="string">"Book"</span>);</span><br><span class="line">        Method method = classBook.getDeclaredMethod(<span class="string">"declareMethod"</span>, <span class="keyword">int</span>.class);</span><br><span class="line">        method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 传递object对象及参数调用该对象对应的方法</span></span><br><span class="line">        String string = (String)method.invoke(classBook.newInstance(), <span class="number">0</span>);</span><br><span class="line">        System.out.println(string);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 反射私有属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reflectPrivateField</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Class&lt;?&gt; classBook = Class.forName(<span class="string">"Book"</span>);</span><br><span class="line">        Object objectBook = classBook.newInstance();</span><br><span class="line">        Field fieldTag = classBook.getDeclaredField(<span class="string">"TAG"</span>);</span><br><span class="line">        fieldTag.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        String tag = (String) fieldTag.get(objectBook);</span><br><span class="line">        System.out.println(tag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>权限申请</title>
    <url>/blog/2019/11/19/permission/</url>
    <content><![CDATA[<h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><ul>
<li><p>惠普即需即供：<a href="mailto:dts_jxjg@dxc.com" target="_blank" rel="noopener">dts_jxjg@dxc.com</a>，DXC 热线：68066686</p>
</li>
<li><p>东软大数据即需即供：<a href="mailto:dts.dsj@neusoft.com" target="_blank" rel="noopener">dts.dsj@neusoft.com</a>，DSJ 热线：15318710660</p>
</li>
<li><p>申请目标服务器：10.163.192.0/19，端口：3306</p>
</li>
</ul>
<h2 id="特权账号"><a href="#特权账号" class="headerlink" title="特权账号"></a>特权账号</h2><p>林兆磊 01460160，张加彬 a0021120</p>
<h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><p>李锦涛 18002036</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 基本程序设计</title>
    <url>/blog/2019/11/18/java-basic-programming-structure/</url>
    <content><![CDATA[<h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><ul>
<li><p><strong>包名</strong>：统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">正例：应用工具类包名为 com.alibaba.ai.util、类名为 MessageUtils</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>类名</strong>：使用 <code>UpperCamelCase</code> 风格，但以下情形例外：<code>DO / BO / DTO / VO / AO / PO / UID</code> 等。</p>
<ul>
<li><em>抽象类名</em>：使用 <code>Abstract</code> 或 <code>Base</code> 开头。</li>
<li><em>异常类名</em>：使用 <code>Exception</code> 结尾。</li>
<li><em>测试类名</em>：以它要测试的类的名称开始，以 <code>Test</code> 结尾。</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">正例：JavaServerlessPlatform / UserDO / XmlService / TcpUdpDeal / TaPromotion </span><br><span class="line">反例：javaserverlessplatform / UserDo / XMLService / TCPUDPDeal / TAPromotion</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>方法名、参数名、成员变量、局部变量</strong>：都统一使用 <code>lowerCamelCase</code> 风格，必须遵从驼峰形式。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">正例：localValue / getHttpMessage() / inputUserId</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>常量名</strong>：全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">正例：MAX_STOCK_COUNT / CACHE_EXPIRED_TIME </span><br><span class="line">反例：MAX_COUNT / EXPIRED_TIME</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>各层命名规范</strong></p>
<ul>
<li><code>Service/DAO</code> 层方法命名<ul>
<li>获取单个对象的方法用 <code>get</code> 做前缀</li>
<li>获取多个对象的方法用 <code>list</code> 做前缀，复数形式结尾如：<code>listObjects</code></li>
<li>获取统计值的方法用 <code>count</code> 做前缀</li>
<li>插入的方法用 <code>save/insert</code> 做前缀</li>
<li>删除的方法用 <code>remove/delete</code> 做前缀</li>
<li>修改的方法用 <code>update</code> 做前缀</li>
</ul>
</li>
<li>领域模型命名<ul>
<li>数据对象：<code>xxxDO</code>，xxx 即为数据表名</li>
<li>数据传输对象：<code>xxxDTO</code>，xxx 为业务领域相关的名称</li>
<li>展示对象：<code>xxxVO</code>，xxx 一般为网页名称</li>
<li><code>POJO</code> 是 <code>DO/DTO/BO/VO</code> 的统称，禁止命名成 <code>xxxPOJO</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="注释类型"><a href="#注释类型" class="headerlink" title="注释类型"></a>注释类型</h3><ul>
<li>单行注释：<code>//</code></li>
<li>多行注释：<code>/*..*/</code></li>
<li>文档注释：<code>/**..*/</code></li>
</ul>
<h3 id="注释规范"><a href="#注释规范" class="headerlink" title="注释规范"></a>注释规范</h3><ul>
<li>类、类属性、类方法的注释必须使用 <code>Javadoc</code> 规范，使用 <code>/**..*/</code> 格式。</li>
<li>抽象方法必须要用 <code>Javadoc</code> 注释、除了返回值、参数、 异常说明外，还必须指出该方法实现的功能。</li>
<li>所有的类都必须添加创建者和创建日期。</li>
<li>方法内部单行注释。</li>
<li>所有的枚举类型字段必须要有注释，说明每个数据项的用途。</li>
</ul>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>Java 中，一共有 8 种基本类型，其中有 4 种整型、2 种浮点类型、1 种字符类型、1 种布尔类型。</p>
<h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><table>
<thead>
<tr>
<th>类型</th>
<th>存储</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td><strong>int</strong></td>
<td>4 字节</td>
<td>-2147483648 ～ 2147483647（约20亿）</td>
</tr>
<tr>
<td>short</td>
<td>2 字节</td>
<td>-32768 ～ 32767</td>
</tr>
<tr>
<td>long</td>
<td>8 字节</td>
<td>-9223372036854775808 ～ 9223372036854775807</td>
</tr>
<tr>
<td>byte</td>
<td>1 字节</td>
<td>-128 ～ 127</td>
</tr>
</tbody></table>
<blockquote>
<p>提醒：Java 没有任何无符号类型（unsigned），且整型的范围与运行 Java 代码的机器无关。</p>
</blockquote>
<h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><table>
<thead>
<tr>
<th>类型</th>
<th>存储</th>
<th>取值范围</th>
</tr>
</thead>
<tbody><tr>
<td>float</td>
<td>4 字节</td>
<td>有效位数 6～7 位</td>
</tr>
<tr>
<td><strong>double</strong></td>
<td>8 字节</td>
<td>有效位数 15 位</td>
</tr>
</tbody></table>
<blockquote>
<p>警告：浮点数值不适用于禁止出现舍入误差的金融计算中。</p>
</blockquote>
<h3 id="char"><a href="#char" class="headerlink" title="char"></a>char</h3><p>char 类型用于表示单个字符，是一个单一的 16 位 Unicode 字符，最小值是 <code>\u0000</code>（即为 0），最大值是 <code>\uffff</code>（即为 65,535），建议不要在程序中使用 char 类型。</p>
<h3 id="boolean"><a href="#boolean" class="headerlink" title="boolean"></a>boolean</h3><p>布尔类型有两个值：false 和 true，用于判定逻辑条件，整型值和布尔值之间不能进行相互转换。</p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>在 Java 中，每一个变量属于一种类型（Type），在声明变量时，变量所属的类型位于变量名之前，声明变量之后，必须用赋值语句对变量进行显式初始化。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> salary = <span class="number">6500.0</span>;</span><br><span class="line"><span class="keyword">int</span> vacationDays = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">long</span> earthPopulation = xx;</span><br><span class="line"><span class="keyword">boolean</span> done = <span class="keyword">false</span>;</span><br><span class="line">Box box = <span class="keyword">new</span> Box();</span><br></pre></td></tr></table></figure>

<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>在 Java 中，利用关键字 final 指示常量，final 表示这个变量只能被赋值一次，一旦赋值后就不能改再修改了，习惯上常量名使用全大写。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">double</span> CM_PER_INCH = <span class="number">2.54</span>;</span><br></pre></td></tr></table></figure>

<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><table>
<thead>
<tr>
<th align="center"><strong>优先级</strong></th>
<th align="center"><strong>运算符</strong></th>
<th align="center"><strong>简介</strong></th>
<th align="center"><strong>结合性</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center"><code>[ ]</code>、<code>.</code>、<code>( )</code></td>
<td align="center">方法调用，属性获取</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">!、~、 ++、 –</td>
<td align="center">一元运算符</td>
<td align="center">从右向左</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">* 、/ 、%</td>
<td align="center">乘、除、取模（余数）</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">+ 、 -</td>
<td align="center">加减法</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">&lt;&lt;、 &gt;&gt;、 &gt;&gt;&gt;</td>
<td align="center">左右位移</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">&lt; 、&lt;= 、&gt;、 &gt;=、 instanceof</td>
<td align="center">对象是否属于同类型</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">== 、!=</td>
<td align="center">是否相等</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">&amp;</td>
<td align="center">按位与</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">^</td>
<td align="center">按位异或</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">|</td>
<td align="center">按位或</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">&amp;&amp;</td>
<td align="center">短路与</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">||</td>
<td align="center">短路或</td>
<td align="center">从左向右</td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">?:</td>
<td align="center">三元运算符</td>
<td align="center">从右向左</td>
</tr>
<tr>
<td align="center">14</td>
<td align="center">=、 += 、-= 、*= 、/=、 %=、 &amp;=、 |=、 ^=、 &lt;、&lt;= 、&gt;、&gt;= 、&gt;&gt;=</td>
<td align="center">混合赋值运算符</td>
<td align="center">从右向左</td>
</tr>
</tbody></table>
<blockquote>
<p>提醒：&amp;&amp; 和 || 是按照“短路”方式求值，如果第一个操作数已经能够确定表达式的值，第二个操作数就不必要计算了。&amp; 和 | 这两个运算符与前面非常相似，只是不按“短路”方式计算，即在得到计算结果之前，一定要计算两个操作数的值。</p>
</blockquote>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>从概念上讲，Java 字符串就是 Unicode 字符序列。Java 没有内置的字符串类型，而是在标准 Java 类库中提供了一个预定义类，叫做 String。Java 有自动垃圾回收机制，如果一块内存不再使用了，系统最终会将其回收。</p>
<ul>
<li><p><strong>检测字符串是否相等</strong>：使用 <code>equals</code> 方法，不区分大小写使用 <code>equalsIgnoreCase</code> 方法，不要使用 <code>==</code> 运算符。</p>
</li>
<li><p><strong>空串</strong>：空串 “” 是长度为 0 的字符串，用以下方式可以检查是否为空。</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (str.length() == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> (str.equals(<span class="string">""</span>))</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>Null 串</strong>：表示目前没有任何对象与该变量关联，检查一个字符串既不是 null 也不为空串。</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (str != <span class="keyword">null</span> &amp;&amp; str.length() != <span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>字符串 <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html" target="_blank" rel="noopener">API</a></strong>：<code>java.lang.string</code></li>
</ul>
<h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><p><strong>读取输入</strong>：使用 <code>java.util.Scanner</code> 类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This program demonstrates console input.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> v1.0 2019-11-20</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Rao Hui</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// get frist input</span></span><br><span class="line">        System.out.print(<span class="string">"What is your name? "</span>);</span><br><span class="line">        String name = in.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// get second input</span></span><br><span class="line">        System.out.print(<span class="string">"How old are you? "</span>);</span><br><span class="line">        <span class="keyword">int</span> age = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// dispaly output on console</span></span><br><span class="line">        System.out.println(<span class="string">"Hello, "</span> + name + <span class="string">". Next year, you'll be "</span> + (age + <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>格式化输出</strong>：使用 <code>System.out.printf()</code></p>
<ul>
<li>d：整数类型</li>
<li>c：Unicode 字符</li>
<li>b：Boolean 值</li>
<li>s：String</li>
<li>f：浮点数（十进制）</li>
<li>e：浮点数（科学计数）</li>
<li>x：整数</li>
<li>h：散列码（十六进制）</li>
<li>%：字符 “%”</li>
</ul>
<h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h2><ul>
<li><strong>条件语句</strong>：if (condition) statement</li>
<li><strong>循环</strong>：while (condition) statement、do statement while (condition)、for (int i = 1;  i &lt;= n;  i++)</li>
<li><strong>多重选择</strong>：switch…case…</li>
<li><strong>中断控制</strong>：break（跳出循环）、continue（跳转到下一次循环）</li>
</ul>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>数组是一种数据结构，用来存储同一类型值的集合。用于数组的增强 for 循环：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">      <span class="keyword">int</span>[] numbers = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> x : numbers )&#123;</span><br><span class="line">         System.out.print( x );</span><br><span class="line">         System.out.print(<span class="string">","</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">      String[] names =&#123;<span class="string">"James"</span>, <span class="string">"Larry"</span>, <span class="string">"Tom"</span>, <span class="string">"Lacy"</span>&#125;;</span><br><span class="line">      <span class="keyword">for</span>( String name : names ) &#123;</span><br><span class="line">         System.out.print( name );</span><br><span class="line">         System.out.print(<span class="string">","</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><table>
<thead>
<tr>
<th>类别</th>
<th>关键字</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>访问控制</td>
<td>private</td>
<td>私有的</td>
</tr>
<tr>
<td></td>
<td>protected</td>
<td>受保护的</td>
</tr>
<tr>
<td></td>
<td>public</td>
<td>公共的</td>
</tr>
<tr>
<td>类、方法和变量修饰符</td>
<td>abstract</td>
<td>声明抽象</td>
</tr>
<tr>
<td></td>
<td>class</td>
<td>类</td>
</tr>
<tr>
<td></td>
<td>extends</td>
<td>继承</td>
</tr>
<tr>
<td></td>
<td>final</td>
<td>不可改变的</td>
</tr>
<tr>
<td></td>
<td>implements</td>
<td>实现（接口）</td>
</tr>
<tr>
<td></td>
<td>interface</td>
<td>接口</td>
</tr>
<tr>
<td></td>
<td>native</td>
<td>本地</td>
</tr>
<tr>
<td></td>
<td>new</td>
<td>创建</td>
</tr>
<tr>
<td></td>
<td>static</td>
<td>静态</td>
</tr>
<tr>
<td></td>
<td>strictfp</td>
<td>严格</td>
</tr>
<tr>
<td></td>
<td>synchronized</td>
<td>线程同步</td>
</tr>
<tr>
<td></td>
<td>transient</td>
<td>短暂</td>
</tr>
<tr>
<td></td>
<td>volatile</td>
<td>易失</td>
</tr>
<tr>
<td>程序控制</td>
<td>break</td>
<td>跳出循环</td>
</tr>
<tr>
<td></td>
<td>continue</td>
<td>继续</td>
</tr>
<tr>
<td></td>
<td>switch</td>
<td>根据值选择执行</td>
</tr>
<tr>
<td></td>
<td>case</td>
<td>定义一个值以供 switch 选择</td>
</tr>
<tr>
<td></td>
<td>default</td>
<td>默认</td>
</tr>
<tr>
<td></td>
<td>do</td>
<td>运行</td>
</tr>
<tr>
<td></td>
<td>if</td>
<td>如果</td>
</tr>
<tr>
<td></td>
<td>else</td>
<td>否则</td>
</tr>
<tr>
<td></td>
<td>for</td>
<td>循环</td>
</tr>
<tr>
<td></td>
<td>instanceof</td>
<td>实例</td>
</tr>
<tr>
<td></td>
<td>return</td>
<td>返回</td>
</tr>
<tr>
<td></td>
<td>while</td>
<td>循环</td>
</tr>
<tr>
<td>错误处理</td>
<td>assert</td>
<td>断言表达式是否为真</td>
</tr>
<tr>
<td></td>
<td>catch</td>
<td>捕捉异常</td>
</tr>
<tr>
<td></td>
<td>finally</td>
<td>有没有异常都执行</td>
</tr>
<tr>
<td></td>
<td>throw</td>
<td>抛出一个异常对象</td>
</tr>
<tr>
<td></td>
<td>throws</td>
<td>声明一个异常可能被抛出</td>
</tr>
<tr>
<td></td>
<td>try</td>
<td>捕获异常</td>
</tr>
<tr>
<td>包</td>
<td>import</td>
<td>引入</td>
</tr>
<tr>
<td></td>
<td>package</td>
<td>包</td>
</tr>
<tr>
<td>数据基本类型</td>
<td>byte</td>
<td>字节型</td>
</tr>
<tr>
<td></td>
<td>short</td>
<td>短整型</td>
</tr>
<tr>
<td></td>
<td>int</td>
<td>整型</td>
</tr>
<tr>
<td></td>
<td>long</td>
<td>长整型</td>
</tr>
<tr>
<td></td>
<td>float</td>
<td>单精度浮点</td>
</tr>
<tr>
<td></td>
<td>double</td>
<td>双精度浮点</td>
</tr>
<tr>
<td></td>
<td>char</td>
<td>字符型</td>
</tr>
<tr>
<td></td>
<td>boolean</td>
<td>布尔型</td>
</tr>
<tr>
<td>变量应用</td>
<td>super</td>
<td>超类</td>
</tr>
<tr>
<td></td>
<td>this</td>
<td>本类</td>
</tr>
<tr>
<td></td>
<td>void</td>
<td>无返回值</td>
</tr>
<tr>
<td>保留关键字</td>
<td>goto</td>
<td>是关键字，但不能使用</td>
</tr>
<tr>
<td></td>
<td>const</td>
<td>是关键字，但不能使用</td>
</tr>
<tr>
<td></td>
<td>null</td>
<td>空</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Java · 开发环境</title>
    <url>/blog/2019/11/18/java-ide/</url>
    <content><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul>
<li><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">Java JDK</a></li>
<li><a href="http://www.jetbrains.com/" target="_blank" rel="noopener">IntelliJ IDEA</a></li>
</ul>
<h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><ul>
<li>安装</li>
<li>配置环境变量</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sudo vim /etc/profile</span></span><br><span class="line"></span><br><span class="line">JAVA_HOME=<span class="string">"/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Home"</span></span><br><span class="line">export JAVA_HOME</span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH:</span>.</span><br><span class="line">CLASS_PATH=<span class="string">"<span class="variable">$JAVA_HOME</span>/lib"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"></span><br><span class="line">➜  ~ java -version</span><br><span class="line">java version <span class="string">"13.0.1"</span> <span class="number">2019</span>-<span class="number">10</span>-<span class="number">15</span></span><br><span class="line">Java(TM) SE Runtime Environment (build <span class="number">13.0</span>.<span class="number">1</span>+<span class="number">9</span>)</span><br><span class="line">Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (build <span class="number">13.0</span>.<span class="number">1</span>+<span class="number">9</span>, mixed mode, sharing)</span><br><span class="line"></span><br><span class="line">~ root<span class="comment"># echo $PATH</span></span><br><span class="line">/Library/Java/JavaVirtualMachines/jdk-<span class="number">13.0</span>.<span class="number">1</span>.jdk/Contents/Home/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:.</span><br><span class="line">~ root<span class="comment"># echo $JAVA_HOME</span></span><br><span class="line">/Library/Java/JavaVirtualMachines/jdk-<span class="number">13.0</span>.<span class="number">1</span>.jdk/Contents/Home</span><br><span class="line">~ root<span class="comment"># echo $CLASS_PATH</span></span><br><span class="line">/Library/Java/JavaVirtualMachines/jdk-<span class="number">13.0</span>.<span class="number">1</span>.jdk/Contents/Home/lib</span><br></pre></td></tr></table></figure>

<ul>
<li>配置 IDE（<strong>File -&gt; Project Structure -&gt; SDKs -&gt; JDK home path</strong>）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure>

<h2 id="Java-术语"><a href="#Java-术语" class="headerlink" title="Java 术语"></a>Java 术语</h2><table>
<thead>
<tr>
<th>术语名</th>
<th>缩写</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>Java Development Kit</td>
<td>JDK</td>
<td>编写 Java 程序的程序员使用的软件，包含编译器</td>
</tr>
<tr>
<td>Java Runtime Environmen</td>
<td>JRE</td>
<td>运行 Java 程序的用户使用的软件，包含虚拟机</td>
</tr>
<tr>
<td>Standard Edition</td>
<td>SE</td>
<td>用于桌面或简单服务器应用的 Java 平台</td>
</tr>
<tr>
<td>Enterprise Edition</td>
<td>EE</td>
<td>用于复杂的服务器应用的 Java 平台</td>
</tr>
<tr>
<td>Micro Edition</td>
<td>ME</td>
<td>用于手机或其他小型设备的 Java 平台</td>
</tr>
<tr>
<td>Data Access Object</td>
<td>DAO</td>
<td>数据访问对象，主要是将数据库操作都封装起来，对外提供接口</td>
</tr>
<tr>
<td>Data Transfer Object</td>
<td>DTO</td>
<td>泛指用于表示层与服务层之间的数据传输对象</td>
</tr>
</tbody></table>
<h2 id="Java-命令行工具"><a href="#Java-命令行工具" class="headerlink" title="Java 命令行工具"></a>Java 命令行工具</h2><table>
<thead>
<tr>
<th>工具</th>
<th>说明</th>
<th>使用</th>
</tr>
</thead>
<tbody><tr>
<td>javac</td>
<td>Java 编译器，将 .java 编译成 .class 字节码文件</td>
<td>javac HelloWorld.java</td>
</tr>
<tr>
<td>java</td>
<td>Java 执行程序的命令，执行 .class 文件</td>
<td>java HelloWorld</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 运维实践 · 备份恢复</title>
    <url>/blog/2019/11/16/mysql-practice-recovery/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul>
<li><strong>项目</strong>：海尔模块商资源平台（HDY）</li>
<li><strong>数据库</strong>：MySQL 5.5.27</li>
<li><strong>数据量</strong>：</li>
</ul>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><ul>
<li>申请服务器 - 项目经理</li>
<li>申请特权账号（DBA、DTS 备份）- 项目经理</li>
<li>搭建数据库 - DBA</li>
<li>安装恢复软件，并进行相关参数配置 - DTS</li>
<li>启动恢复</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据恢复</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">26</span>K Nov <span class="number">15</span> <span class="number">11</span>:<span class="number">36</span> mysql-bin.<span class="number">000001</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">919</span>K Nov <span class="number">15</span> <span class="number">11</span>:<span class="number">36</span> mysql-bin.<span class="number">000002</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">126</span> Nov <span class="number">15</span> <span class="number">11</span>:<span class="number">38</span> mysql-bin.<span class="number">000003</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">126</span> Nov <span class="number">15</span> <span class="number">11</span>:<span class="number">38</span> mysql-bin.<span class="number">000004</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">126</span> Nov <span class="number">15</span> <span class="number">11</span>:<span class="number">39</span> mysql-bin.<span class="number">000005</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">126</span> Nov <span class="number">15</span> <span class="number">11</span>:<span class="number">45</span> mysql-bin.<span class="number">000006</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">126</span> Nov <span class="number">15</span> <span class="number">11</span>:<span class="number">46</span> mysql-bin.<span class="number">000007</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">1.1</span>G Nov <span class="number">15</span> <span class="number">16</span>:<span class="number">18</span> mysql-bin.<span class="number">000008</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">1.1</span>G Nov <span class="number">15</span> <span class="number">16</span>:<span class="number">21</span> mysql-bin.<span class="number">000009</span></span><br><span class="line">...</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1073790463</span> Nov <span class="number">16</span> <span class="number">08</span>:<span class="number">27</span> mysql-bin.<span class="number">000325</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">681747155</span> Nov <span class="number">16</span> <span class="number">08</span>:<span class="number">31</span> mysql-bin.<span class="number">000326</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql       <span class="number">6194</span> Nov <span class="number">16</span> <span class="number">08</span>:<span class="number">27</span> mysql-bin.index</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚日志</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>低空掠过，精确制导</title>
    <url>/blog/2019/11/15/think-direction/</url>
    <content><![CDATA[<p><a href="https://baike.baidu.com/item/%E8%92%8B%E5%87%A1/21973556?fr=aladdin" target="_blank" rel="noopener">蒋凡 </a>谈职场进化历程，总结的八字经验：低空掠过，精确制导</p>
<p><strong>低空掠过</strong>：对于和目标关联不大，客观上却必须做的事情，一定要以最小的代价和精力耗费量完成，不需要优秀。</p>
<p><strong>精确制导</strong>：对于既定目标，就要精确锁定，排除干扰全力以赴，直到目标达成。比如编程，要钻研的很深，这是成长的敲门砖！</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 6 与 CentOS 7 启停服务</title>
    <url>/blog/2019/11/15/liunx-service/</url>
    <content><![CDATA[<h2 id="CentOS-6"><a href="#CentOS-6" class="headerlink" title="CentOS 6"></a>CentOS 6</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置服务自启动</span></span><br><span class="line">chkconfig --add mysqld          <span class="comment"># 添加服务</span></span><br><span class="line">chkconfig mysqld on             <span class="comment"># 开机自启服务</span></span><br><span class="line">chkconfig mysqld off            <span class="comment"># 关闭开机自启</span></span><br><span class="line">chkconfig --list | grep mysqld  <span class="comment"># 查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态、启动、停止、重启</span></span><br><span class="line">service mysqld status/start/stop/restart</span><br></pre></td></tr></table></figure>

<h2 id="CentOS-7"><a href="#CentOS-7" class="headerlink" title="CentOS 7"></a>CentOS 7</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl enable mysqld.service  <span class="comment"># 开机自启服务</span></span><br><span class="line">systemctl disable mysqld.service <span class="comment"># 关闭开机自启</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态、启动、停止、重启</span></span><br><span class="line">systemctl status/start/stop/restart mysqld.service</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 实时会话解析</title>
    <url>/blog/2019/11/15/mysql-live-session/</url>
    <content><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><ul>
<li><code>show processlist</code>，查看正在运行的线程，列出前 100 条</li>
<li><code>show full processlist</code>，列出所有正在运行的线程</li>
</ul>
<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show processlist;</span><br><span class="line">+--------+---------+--------------------+--------------------+---------+------+----------+------------------+</span><br><span class="line">| Id     | User    | Host               | db                 | Command | Time | State    | Info             |</span><br><span class="line">+--------+---------+--------------------+--------------------+---------+------+----------+------------------+</span><br><span class="line">| <span class="number">106125</span> | tdmsdev | <span class="number">10.153</span>.<span class="number">96.89</span>:<span class="number">56808</span> | tdm                | Sleep   |  <span class="number">597</span> |          | NULL             |</span><br><span class="line">| <span class="number">106134</span> | tdmsdev | <span class="number">10.153</span>.<span class="number">96.89</span>:<span class="number">56827</span> | tdm                | Sleep   |  <span class="number">596</span> |          | NULL             |</span><br><span class="line">| <span class="number">106178</span> | hdm     | <span class="number">10.133</span>.<span class="number">0.53</span>:<span class="number">60606</span>  | information_schema | Sleep   |    <span class="number">4</span> |          | NULL             |</span><br><span class="line">| <span class="number">106179</span> | sre     | localhost          | NULL               | Query   |    <span class="number">0</span> | starting | show processlist |</span><br><span class="line">+--------+---------+--------------------+--------------------+---------+------+----------+------------------+</span><br><span class="line"><span class="number">4</span> rows <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>Id</strong>：线程标识，<code>kill</code> 某线程时使用</li>
<li><strong>User</strong>：显示当前用户，也就是执行 <code>SQL</code> 语句的用户</li>
<li><strong>Host</strong>：显示执行 <code>SQL</code> 的 <code>IP</code> 和端口，可以用来追踪问题的来源</li>
<li><strong>db</strong>：显示该线程连接的是哪个数据库</li>
<li><strong>Command</strong>：显示当前执行的命令，一般：<code>Sleep</code> 休眠，<code>Query</code> 查询，<code>Connect</code> 连接，<code>Binlog Dump</code> 复制</li>
<li><strong>Time</strong>：会话持续时间，单位（秒）</li>
<li><strong>State</strong>：显示使用当前连接的状态，很重要列。请注意，<code>State</code> 只是语句执行中的某一个状态，以查询为例，需要经过 <code>copying to tmp table，sorting result，sending data</code> 等状态才算完成。</li>
<li><strong>Info</strong>：显示执行的 <code>SQL</code> 语句，判断问题的重要依据。</li>
</ul>
<h2 id="State"><a href="#State" class="headerlink" title="State"></a>State</h2><ul>
<li><strong>Sleeping</strong>：已处理完，正在等待客户端发送新请求。</li>
<li><strong>Sending data</strong>：线程正在处理 <code>select</code> 语句，并将数据发送到客户端。由于在此状态期间发生的操作往往会执行大量磁盘访问（读取），因此它通常是给定查询生命周期中运行时间最长的状态，属于慢查询。</li>
<li><strong>Creating tmp table</strong>：正在创建临时表以存放部分查询结果。</li>
<li><strong>Copying to tmp table on disk</strong>：由于临时结果集大于 <code>tmp_table_size</code>，正在将临时表从内存存储转为磁盘存储以此节省内存，可以通过变量 <code>tmp_table_size</code> 和 <code>max_heap_table_size</code> 来控制内存表大小上限。</li>
<li><strong>Waiting for table flush</strong>：线程正在执行 <code>flush tables</code> 并且正在等待所有线程关闭它们的表。但是，要重新打开表，它必须等到所有其他线程关闭了相关表。</li>
<li><strong>Writing to net</strong>：服务器正在将数据包写入网络。</li>
<li><strong>Killed</strong>：通常发送了一个 kill 请求给某线程，某些情况下，线程可能仍然需要很短的时间才能死掉，如果线程被某个其他线程锁定，则一旦另一个线程释放其锁定，kill 就会马上生效。</li>
<li><strong>System lock</strong>：正在等待取得一个外部的系统锁。如果当前没有运行多个 <code>mysqld</code> 服务同时请求同一个表，那么可以通过增加 <code>--skip-external-locking</code> 参数来禁止外部系统锁。</li>
</ul>
<blockquote>
<p><a href="https://dev.mysql.com/doc/refman/5.7/en/general-thread-states.html" target="_blank" rel="noopener">官方参考</a></p>
</blockquote>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 健康检查</title>
    <url>/blog/2019/11/15/mysql-health-check/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MySQL 运行状况健康检查，提供技术评估和建议优化数据库，通过监控告警，从而优化模式、服务器配置、查询和复制，显著提高性能、可扩展性、可用性和安全性。</p>
<h2 id="检查项"><a href="#检查项" class="headerlink" title="检查项"></a>检查项</h2><ul>
<li><strong>架构：</strong>评估并推荐数据库架构和设计优化</li>
<li><strong>配置：</strong>评估 MySQL 配置并根据您的特定应用提出更改建议</li>
<li><strong>性能：</strong>监视查询并提出 SQL 代码更改建议，以提高性能</li>
<li><strong>性能：</strong>监视内存使用（缓存、命中率等）并提出更改建议</li>
<li><strong>备份：</strong>评估备份配置并提出更改建议，以提高备份/还原性能</li>
<li><strong>安全性：</strong>发现安全漏洞并推荐更严格的安全配置</li>
</ul>
<p><strong>对象</strong></p>
<ul>
<li>MySQL 应用开发</li>
<li>项目经理</li>
<li>MySQL DBA</li>
</ul>
<p><strong>主题</strong></p>
<ul>
<li><strong>MySQL 性能调优：</strong>基础知识或高级提示和技巧</li>
<li><strong>MySQL 企业版：</strong>MySQL Enterprise Monitor、顾问程序、Query Analyzer、备份和分区</li>
<li><strong>MySQL Workbench：</strong>通过设计提高数据库性能</li>
<li><strong>MySQL 分区：</strong>改善高负载情况下的性能</li>
<li><strong>MySQL 企业级备份：</strong>快速、一致的联机“热”备份</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例分析 · Waiting for table flush</title>
    <url>/blog/2019/11/14/mysql-case-waiting-for-table-flush/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>MES 工厂反馈业务查询慢，登录数据库手工执行 <code>SQL</code> 操作也没有响应，怀疑是 <code>02:00</code> 执行的备份任务导致。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ul>
<li>登录数据库，执行 <code>show processlist</code> 查看当前会话，发现大量线程状态为 <code>Waiting for tables flush</code>。</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show processlist;</span><br><span class="line">+---------+-----------------+----------------------+--------------------+-------------+-------+---------------------------------------------------------------+------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Id      | User            | Host                 | db                 | Command     | Time  | State                                                         | Info                                                                                                 |</span><br><span class="line">+---------+-----------------+----------------------+--------------------+-------------+-------+---------------------------------------------------------------+------------------------------------------------------------------------------------------------------+</span><br><span class="line">| <span class="number">3074726</span> | cosmo_dsj       | <span class="number">10.138</span>.<span class="number">225.194</span>:<span class="number">41311</span> | NULL               | Binlog Dump | <span class="number">31808</span> | Master has sent all binlog to slave; waiting <span class="keyword">for</span> more updates | NULL                                                                                                 |</span><br><span class="line">| <span class="number">3080884</span> | cosmo_t         | %                    | cosmo_im_1021      | Connect     | <span class="number">12515</span> | Sending <span class="keyword">data</span>                                                  | CALL  procedure_imp_table                                                                            |</span><br><span class="line">| <span class="number">3082179</span> | cosmo_t         | <span class="number">10.138</span>.<span class="number">228.42</span>:<span class="number">36560</span>  | cosmo_im_1021      | Sleep       |    <span class="number">19</span> |                                                               | NULL                                                                                                 |</span><br><span class="line">| <span class="number">3082727</span> | root            | localhost            | NULL               | Query       |  <span class="number">6180</span> | Waiting <span class="keyword">for</span> table flush                                       | FLUSH NO_WRITE_TO_BINLOG TABLES                                                                      |</span><br><span class="line">| <span class="number">3082888</span> | cosmo_r         | <span class="number">10.180</span>.<span class="number">221.43</span>:<span class="number">52153</span>  | cosmo_im_1021      | Sleep       |     <span class="number">5</span> |                                                               | NULL                                                                                                 |</span><br><span class="line">| <span class="number">3082892</span> | cosmo_r         | <span class="number">10.180</span>.<span class="number">221.43</span>:<span class="number">52155</span>  | cosmo_im_1021      | Sleep       |     <span class="number">1</span> |                                                               | NULL                                                                                                 |</span><br><span class="line">| <span class="number">3082919</span> | cosmo_t         | %                    | cosmo_im_1021      | Connect     |  <span class="number">6125</span> | Waiting <span class="keyword">for</span> table flush                                       | CALL procedure_assembly_work                                                                         |</span><br><span class="line">| <span class="number">3082940</span> | cosmo_t         | %                    | cosmo_im_1021      | Connect     |  <span class="number">6104</span> | Waiting <span class="keyword">for</span> table flush                                       | UPDATE board_datas bo inner join (</span><br><span class="line">            SELECT times,</span><br><span class="line">                   cNum                 |</span><br><span class="line">| <span class="number">3083094</span> | cosmo_t         | <span class="number">10.180</span>.<span class="number">221.45</span>:<span class="number">59111</span>  | cosmo_im_1021      | Query       |     <span class="number">6</span> | Waiting <span class="keyword">for</span> table flush                                       | SELECT a.*,TIMESTAMPDIFF(MINUTE,a.CallTime,NOW()) as Tdiff from</span><br><span class="line">(SELECT DISTINCT pmcall.Call_ID ,ca |</span><br><span class="line">| <span class="number">3083127</span> | cosmo_t         | %                    | cosmo_im_1021      | Connect     |  <span class="number">5924</span> | Waiting <span class="keyword">for</span> table flush                                       | UPDATE board_datas bo inner join (</span><br><span class="line">            SELECT times,</span><br><span class="line">                   cNum                 |</span><br><span class="line">| <span class="number">3083260</span> | cosmo_t         | %                    | cosmo_im_1021      | Connect     |  <span class="number">5744</span> | Waiting <span class="keyword">for</span> table flush                                       | UPDATE board_datas bo inner join (</span><br><span class="line">            SELECT times,</span><br><span class="line">                   cNum                 |</span><br></pre></td></tr></table></figure>

<ul>
<li><p>找到首次出现此状态执行的操作 <code>FLUSH NO_WRITE_TO_BINLOG TABLES</code>，执行时间 <code>6125s</code>，线程ID <code>3082727</code>，这是 <code>XtraBackup</code> 执行全量备份的一个线程，主要作用是关闭所有打开的表，强制关闭所有正在使用的表，并刷新查询缓存和预准备语句缓存。</p>
</li>
<li><p>备份正常执行这个操作是不会锁表的，但是如果在此期间存在慢查询 <code>CALL procedure_imp_table</code>，执行时间 <code>12515s</code>，线程ID <code>3080884</code>，就会占用全局只读锁，阻止关闭打开的表。</p>
</li>
<li><p><strong>结论</strong>：使用 <code>mysqldump、XtraBackup</code> 备份期间出现了慢查询并且慢查询长时间阻塞，就会出现  <code>Waiting for tables flush</code>。</p>
</li>
</ul>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ul>
<li>找出超时的慢查询，执行 <code>kill 3080884</code> ，问题解决</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; kill 3080884;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show processlist;</span><br><span class="line">+<span class="comment">---------+-----------------+----------------------+--------------------+-------------+-------+---------------------------------------------------------------+------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Id      | User            | Host                 | db                 | Command     | Time  | State                                                         | Info                                                                                                 |</span><br><span class="line">+<span class="comment">---------+-----------------+----------------------+--------------------+-------------+-------+---------------------------------------------------------------+------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">|       1 | event_scheduler | localhost            | NULL               | Daemon      |     4 | Waiting for next activation                                   | NULL                                                                                                 |</span><br><span class="line">| 3061488 | cosmo_t         | 10.180.199.156:49161 | cosmo_im_1021      | Sleep       |    34 |                                                               | NULL                                                                                                 |</span><br><span class="line">| 3074726 | cosmo_dsj       | 10.138.225.194:41311 | NULL               | Binlog Dump | 31920 | Master has sent all binlog to slave; waiting for more updates | NULL                                                                                                 |</span><br><span class="line">| 3080883 | cosmo_t         | 10.138.42.106:42146  | cosmo_im_1021      | Sleep       |   144 |                                                               | NULL                                                                                                 |</span><br><span class="line">| 3081434 | cosmo_t         | 10.138.42.106:44741  | cosmo_im_1021      | Sleep       |   144 |                                                               | NULL                                                                                                 |</span><br><span class="line">| 3082179 | cosmo_t         | 10.138.228.42:36560  | cosmo_im_1021      | Sleep       |   131 |                                                               | NULL                                                                                                 |</span><br><span class="line">| 3082888 | cosmo_r         | 10.180.221.43:52153  | cosmo_im_1021      | Sleep       |     1 |                                                               | NULL                                                                                                 |</span><br><span class="line">| 3082892 | cosmo_r         | 10.180.221.43:52155  | cosmo_im_1021      | Sleep       |     4 |                                                               | NULL                                                                                                 |</span><br><span class="line">| 3083094 | cosmo_t         | 10.180.221.45:59111  | cosmo_im_1021      | Sleep       |    27 |                                                               | NULL                                                                                                 |</span><br><span class="line">| 3083531 | cosmo_r         | 10.180.207.197:61769 | cosmo_im_1021      | Sleep       |     3 |                                                               | NULL</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>VPN</title>
    <url>/blog/2019/11/13/vpn/</url>
    <content><![CDATA[<p><a href="http://vpn.haier.net/" target="_blank" rel="noopener">Haier VPN 系统使用指南</a></p>
<h4 id="青岛"><a href="#青岛" class="headerlink" title="青岛"></a>青岛</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cu.vpn.haier.net:<span class="number">10445</span>  <span class="comment"># 联通</span></span><br><span class="line">ct.vpn.haier.net:<span class="number">10445</span>  <span class="comment"># 电信</span></span><br></pre></td></tr></table></figure>

<h4 id="北京"><a href="#北京" class="headerlink" title="北京"></a>北京</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">123.103</span>.<span class="number">113.249</span>:<span class="number">8443</span></span><br></pre></td></tr></table></figure>

<h4 id="mac-访问内网"><a href="#mac-访问内网" class="headerlink" title="mac 访问内网"></a>mac 访问内网</h4><ul>
<li>连无线 <code>Haier-Corp</code></li>
<li>使用工号登录 <code>1.1.1.3</code></li>
<li>打开网络偏好设置，修改 <code>DNS</code> 为：<code>10.138.40.212、10.138.40.213</code></li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 6 与 CentOS 7 防火墙设置及开放端口</title>
    <url>/blog/2019/11/13/linux-firewall/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://www.centos.org/" target="_blank" rel="noopener">CentOS</a> 升级到 7 之后，内置的防火墙已经从 <code>iptables</code> 变成了 <code>firewalld</code>，不同操作系统设置的方式不同。</p>
<h2 id="CentOS-6"><a href="#CentOS-6" class="headerlink" title="CentOS 6"></a>CentOS 6</h2><ul>
<li>打开/关闭/重启防火墙</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">chkconfig iptables on       <span class="comment"># 开启防火墙</span></span><br><span class="line">chkconfig iptables off      <span class="comment"># 关闭防火墙</span></span><br><span class="line">service iptables start      <span class="comment"># 开启防火墙</span></span><br><span class="line">service iptables stop       <span class="comment"># 关闭防火墙</span></span><br><span class="line">service iptables restarted  <span class="comment"># 重启防火墙</span></span><br><span class="line">iptables -F                 <span class="comment"># 清除防火墙规则</span></span><br></pre></td></tr></table></figure>

<ul>
<li>打开端口</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/sbin/iptables -I INPUT -p tcp --dport <span class="number">22</span> -j ACCEPT   <span class="comment"># 打开22端口</span></span><br><span class="line">/sbin/iptables -I INPUT -p tcp --dport <span class="number">3306</span> -j ACCEPT <span class="comment"># 打开3306端口</span></span><br><span class="line">/etc/rc.d/init.d/iptables save   <span class="comment"># 保存防火墙</span></span><br><span class="line">/etc/init.d/iptables restart     <span class="comment"># 重启防火墙</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查看打开的端口</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/etc/init.d/iptables status</span><br></pre></td></tr></table></figure>

<h2 id="CentOS-7"><a href="#CentOS-7" class="headerlink" title="CentOS 7"></a>CentOS 7</h2><ul>
<li>打开/关闭/重启防火墙</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">systemctl start firewalld  <span class="comment"># 启用防火墙</span></span><br><span class="line">systemctl stop firewalld   <span class="comment"># 停止防火墙</span></span><br><span class="line">systemctl status firewalld <span class="comment"># 查看状态</span></span><br></pre></td></tr></table></figure>

<ul>
<li>打开端口</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=<span class="number">80</span>/tcp <span class="comment"># 永久生效再加上--permanent</span></span><br><span class="line">firewall-cmd --reload                        <span class="comment"># 更新防火墙规则</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查看打开的端口</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>PostgreSQL</title>
    <url>/blog/2019/11/13/postgresql/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul>
<li><strong>描述</strong>：人力题库数据库即将下线，需要保存数据副本到本地数据库。</li>
<li><strong>源库</strong>：<code>PostgreSQL 9.2.8</code></li>
<li><strong>目标库</strong>：<code>10.133.0.52</code> / <code>PostgreSQL 11.5</code></li>
</ul>
<table>
<thead>
<tr>
<th>迁移表</th>
<th>说明</th>
<th>数据量</th>
<th>状态</th>
</tr>
</thead>
<tbody><tr>
<td>t_ems_base</td>
<td>题库</td>
<td>3139</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_base_category</td>
<td>题库类别</td>
<td>164</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_item</td>
<td>试题</td>
<td>500378</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_item_option</td>
<td>试题选项</td>
<td>1250290</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_paper</td>
<td>试卷</td>
<td>3262</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_paper_item_rel</td>
<td>试卷试题</td>
<td>1920540</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_info</td>
<td>考试</td>
<td>36229</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_result</td>
<td>考试成绩</td>
<td>1052490</td>
<td><strong>OK</strong></td>
</tr>
<tr>
<td>t_ems_result_detail</td>
<td>考试答题详情</td>
<td>69602800</td>
<td><strong>？</strong></td>
</tr>
</tbody></table>
<h2 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>操作系统：CentOS Linux release 7.4.1708 (Core)</li>
<li>安装版本：<a href="https://www.postgresql.org/" target="_blank" rel="noopener">PostgreSQL</a> 11</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载rpm包</span></span><br><span class="line">yum install https://download.postgresql.org/pub/repos/yum/<span class="number">11</span>/redhat/rhel-<span class="number">7</span>-x86_64/pgdg-redhat11-<span class="number">11</span>-<span class="number">2</span>.noarch.rpm -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y install postgresql11 postgresql11-server postgresql11-libs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化数据库</span></span><br><span class="line">/usr/pgsql-<span class="number">11</span>/bin/postgresql-<span class="number">11</span>-setup initdb <span class="comment"># /usr/pgsql-11/bin/initdb -D /data/postgresql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动PostgreSQL和启动服务</span></span><br><span class="line">systemctl enable postgresql-<span class="number">11</span></span><br><span class="line">systemctl start postgresql-<span class="number">11</span></span><br><span class="line">systemctl status postgresql-<span class="number">11</span></span><br><span class="line"></span><br><span class="line">● postgresql-<span class="number">11</span>.service - PostgreSQL <span class="number">11</span> database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/postgresql-<span class="number">11</span>.service; enabled; vendor preset: disablesd)</span><br><span class="line">   Active: active (running) since 三 <span class="number">2019</span>-<span class="number">11</span>-<span class="number">13</span> <span class="number">10</span>:<span class="number">11</span>:<span class="number">05</span> CST; <span class="number">6</span>s ago</span><br><span class="line">     Docs: https://www.postgresql.org/docs/<span class="number">11</span>/static/</span><br><span class="line">  <span class="keyword">Process</span>: <span class="number">84380</span> ExecStartPre=/usr/pgsql-<span class="number">11</span>/bin/postgresql-<span class="number">11</span>-check-db-dir $&#123;PGDATA&#125; (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line"> Main PID: <span class="number">84386</span> (postmaster)</span><br><span class="line">   CGroup: /system.slice/postgresql-<span class="number">11</span>.service</span><br><span class="line">           ├─<span class="number">84386</span> /usr/pgsql-<span class="number">11</span>/bin/postmaster -D /var/lib/pgsql/<span class="number">11</span>/<span class="keyword">data</span>/</span><br><span class="line">           ├─<span class="number">84388</span> postgres: logger   </span><br><span class="line">           ├─<span class="number">84390</span> postgres: checkpointer   </span><br><span class="line">           ├─<span class="number">84391</span> postgres: background writer   </span><br><span class="line">           ├─<span class="number">84392</span> postgres: walwriter   </span><br><span class="line">           ├─<span class="number">84393</span> postgres: autovacuum launcher   </span><br><span class="line">           ├─<span class="number">84394</span> postgres: stats collector   </span><br><span class="line">           ├─<span class="number">84395</span> postgres: logical replication launcher   </span><br><span class="line">           └─<span class="number">84417</span> /usr/pgsql-<span class="number">11</span>/bin/postmaster -D /var/lib/pgsql/<span class="number">11</span>/<span class="keyword">data</span>/</span><br><span class="line">           </span><br><span class="line"><span class="comment"># 修改数据存储目录</span></span><br><span class="line">systemctl stop postgresql-<span class="number">11</span></span><br><span class="line">mkdir /<span class="keyword">data</span>/postgresql</span><br><span class="line">chown -R postgres:postgres postgresql</span><br><span class="line">chmod <span class="number">700</span> /<span class="keyword">data</span>/postgresql</span><br><span class="line">vi /<span class="keyword">data</span>/postgresql/postgresql.conf  <span class="comment"># data_directory = '/data/postgresql'</span></span><br><span class="line">vi /usr/lib/systemd/system/postgresql-<span class="number">11</span>.service <span class="comment"># Environment=PGDATA=/data/postgresql</span></span><br><span class="line">systemctl restart postgresql-<span class="number">11</span></span><br><span class="line"></span><br><span class="line">$ su - postgres</span><br><span class="line">-bash-<span class="number">4.2</span>$ psql</span><br><span class="line">postgres=<span class="comment"># show data_directory;</span></span><br><span class="line">  data_directory  </span><br><span class="line">------------------</span><br><span class="line"> /<span class="keyword">data</span>/postgresql</span><br></pre></td></tr></table></figure>

<h3 id="后台登录"><a href="#后台登录" class="headerlink" title="后台登录"></a>后台登录</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ su - postgres</span><br><span class="line">-bash-<span class="number">4.2</span>$ psql</span><br><span class="line">psql (<span class="number">11.5</span>)</span><br><span class="line">postgres=<span class="comment"># select version();</span></span><br><span class="line">                                                 version                                                 </span><br><span class="line">---------------------------------------------------------------------------------------------------------</span><br><span class="line"> PostgreSQL <span class="number">11.5</span> on x86_64-pc-linux-gnu, compiled by gcc (GCC) <span class="number">4.8</span>.<span class="number">5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span>.<span class="number">5</span>-<span class="number">36</span>), <span class="number">64</span>-bit</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 配置Navicate可登录 &lt;postgres/Haier@123&gt;</span></span><br><span class="line">vi /<span class="keyword">data</span>/postgresql/postgresql.conf  <span class="comment"># listen_addresses = '*'</span></span><br><span class="line">vi /<span class="keyword">data</span>/postgresql/pg_hba.conf  <span class="comment"># 文件末尾添加 host  all  all  0.0.0.0/0  trust</span></span><br></pre></td></tr></table></figure>

<h3 id="客户端登录"><a href="#客户端登录" class="headerlink" title="客户端登录"></a>客户端登录</h3><ul>
<li>安装 <a href="https://www.navicat.com.cn/products/navicat-premium" target="_blank" rel="noopener">Navicate</a></li>
<li>登录数据库<ul>
<li>主机：10.133.0.52</li>
<li>端口：5432</li>
<li>数据库：postgres</li>
<li>用户名：postgres</li>
<li>密码：Haier@123</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>PostgreSQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · binlog 日志</title>
    <url>/blog/2019/11/07/mysql-binlog/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>Binlog</strong>：也称二进制日志，是 MySQL 最重要的日志，记录所有数据库表结构变更（如 <code>CREATE</code>、<code>ALTER TABLE</code>）以及表数据修改（如 <code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code>），不会记录 <code>SELECT</code> 和 <code>SHOW</code> 这类操作，主要作用：<strong>复制</strong>（主从同步）、<strong>恢复</strong>和<strong>审计</strong>。</p>
<table>
<thead>
<tr>
<th>日志格式</th>
<th>记录说明</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody><tr>
<td><code>STATEMENT</code></td>
<td>记录的是修改 <code>SQL</code> 语句</td>
<td>日志文件小，节约 <code>IO</code></td>
<td>准确性差，一些系统函数不能准确复制</td>
</tr>
<tr>
<td><code>ROW</code></td>
<td>记录的是每行实际数据的变更</td>
<td>准确性强，能准确复制数据的变更</td>
<td>文件日志大，较大的磁盘和网络 <code>IO</code></td>
</tr>
<tr>
<td><code>MIXED</code></td>
<td>以上两种模式的混合</td>
<td>准确性强，文件大小适中</td>
<td>有可能发生主从不一致问题</td>
</tr>
</tbody></table>
<h2 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">binlog_format    = mixed</span><br><span class="line">log_bin          = /<span class="keyword">data</span>/mysql/mysql-bin.log</span><br><span class="line">expire_logs_days = <span class="number">7</span></span><br><span class="line">max_binlog_size  = <span class="number">1</span>G</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>log_bin = { on | off | base_name }</td>
<td>指定是否启用二进制日志或者指定一个日志路径</td>
</tr>
<tr>
<td>binlog_format = { mixed | row | statement }</td>
<td>指定二进制日志格式</td>
</tr>
<tr>
<td>expire_logs_days</td>
<td>指定二进制日志过期时间</td>
</tr>
<tr>
<td>sql_log_bin = { on | off }</td>
<td>指定是否启用记录二进制日志</td>
</tr>
<tr>
<td>log_bin_index</td>
<td>指定 <code>mysql-bin.index</code> 文件路径</td>
</tr>
<tr>
<td>max_binlog_size</td>
<td>指定二进制日志文件最大值</td>
</tr>
<tr>
<td>binlog_cache_size</td>
<td>指定事务日志缓存区大小</td>
</tr>
<tr>
<td>max_binlog_cache_size</td>
<td>指定二进制日志缓存最大值</td>
</tr>
<tr>
<td>sync_binlog = { 0 | n }</td>
<td>指定写缓冲多少次，刷一次盘</td>
</tr>
</tbody></table>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ul>
<li><strong>查看 binlog</strong>：<a href="https://huiraoo.github.io/blog/2019/11/07/mysql-tool-mysqlbinlog/">mysqlbinlog</a></li>
<li><strong>删除 binlog</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 手工删除</span></span><br><span class="line">purge master logs to <span class="string">"mysql-bin.xx"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动清理</span></span><br><span class="line">set global expire_logs_days=N;</span><br><span class="line">flush logs;</span><br></pre></td></tr></table></figure>

<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul>
<li><a href="https://huiraoo.github.io/blog/2019/11/07/mysql-case-binlog-overflow/">MySQL · 案例分析 · 大事务导致 binlog 暴增</a></li>
<li>MySQL · 案例分析 · 未设置过期时间导致 binlog 堆积</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例分析 · 大事务导致 binlog 暴增</title>
    <url>/blog/2019/11/07/mysql-case-binlog-overflow/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[root@cosmoim-db04 data]<span class="comment"># ll -h</span></span><br><span class="line">total <span class="number">819</span>G</span><br><span class="line">....</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">53</span> relay-log.<span class="number">001998</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">54</span> relay-log.<span class="number">001999</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">54</span> relay-log.<span class="number">002000</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">54</span> relay-log.<span class="number">002001</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">55</span> relay-log.<span class="number">002002</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">55</span> relay-log.<span class="number">002003</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">55</span> relay-log.<span class="number">002004</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">55</span> relay-log.<span class="number">002005</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">55</span> relay-log.<span class="number">002006</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">55</span> relay-log.<span class="number">002007</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">56</span> relay-log.<span class="number">002008</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">56</span> relay-log.<span class="number">002009</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">56</span> relay-log.<span class="number">002010</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">56</span> relay-log.<span class="number">002011</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">56</span> relay-log.<span class="number">002012</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">56</span> relay-log.<span class="number">002013</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">57</span> relay-log.<span class="number">002014</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">57</span> relay-log.<span class="number">002015</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">57</span> relay-log.<span class="number">002016</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">58</span> relay-log.<span class="number">002017</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">58</span> relay-log.<span class="number">002018</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">58</span> relay-log.<span class="number">002019</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">58</span> relay-log.<span class="number">002020</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">58</span> relay-log.<span class="number">002021</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">58</span> relay-log.<span class="number">002022</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">59</span> relay-log.<span class="number">002023</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">59</span> relay-log.<span class="number">002024</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">21</span>:<span class="number">59</span> relay-log.<span class="number">002025</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">22</span>:<span class="number">00</span> relay-log.<span class="number">002026</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">29</span>M Nov  <span class="number">6</span> <span class="number">22</span>:<span class="number">00</span> relay-log.<span class="number">002027</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">22</span>:<span class="number">00</span> relay-log.<span class="number">002028</span></span><br><span class="line">....</span><br></pre></td></tr></table></figure>

<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>解析 <code>relaylog</code> 日志，发现执行的是一个 <code>update</code> 大事务</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysqlbinlog --base64-output=decode-rows --verbose relay-log.<span class="number">001999</span></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 342 CRC32 0x50ae56cd 	Table_map: `cosmo-aps`.`bns_aps_versiontolineinfo` mapped to number 417</span></span><br><span class="line"><span class="comment"># at 505</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 8504 CRC32 0xc3c33b83 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 8667</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 16666 CRC32 0xc7ccd23c 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 16829</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 24828 CRC32 0x870a1ba0 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 24991</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 32990 CRC32 0x310a7ba8 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 33153</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 41152 CRC32 0x84202102 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 41315</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 49314 CRC32 0xaaf45c6e 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 49477</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 57476 CRC32 0x3e307bcb 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 57639</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 65638 CRC32 0x4832b399 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 65801</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 73800 CRC32 0x941f87fe 	Update_rows: table id 417</span></span><br><span class="line"><span class="comment"># at 73963</span></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 81962 CRC32 0xbacbfa92 	Update_rows: table id 417</span></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment">#191106 21:53:01 server id 13823283  end_log_pos 38061530 CRC32 0x15876ee5 	Update_rows: table id 417 flags: STMT_END_F</span></span><br><span class="line"><span class="comment">### UPDATE `cosmo-aps`.`bns_aps_versiontolineinfo`</span></span><br><span class="line"><span class="comment">### WHERE</span></span><br><span class="line"><span class="comment">###   @1='be2080a3-3815-48ee-b73e-2f18cbe3b4a8'</span></span><br><span class="line"><span class="comment">###   @2=NULL</span></span><br><span class="line"><span class="comment">###   @3='9790'</span></span><br><span class="line"><span class="comment">###   @4=''</span></span><br><span class="line"><span class="comment">###   @5='CE0EQ8000'</span></span><br><span class="line"><span class="comment">###   @6='XQG52-Q718(灰)'</span></span><br><span class="line"><span class="comment">###   @7=''</span></span><br><span class="line"><span class="comment">###   @8=NULL</span></span><br><span class="line"><span class="comment">###   @9='N500'</span></span><br><span class="line"><span class="comment">###   @10='30'</span></span><br><span class="line"><span class="comment">###   @11='T6'</span></span><br><span class="line"><span class="comment">###   @12=''</span></span><br><span class="line"><span class="comment">###   @13=1</span></span><br><span class="line"><span class="comment">###   @14=''</span></span><br><span class="line"><span class="comment">###   @15='在产'</span></span><br><span class="line"><span class="comment">###   @16=''</span></span><br><span class="line"><span class="comment">###   @17=''</span></span><br><span class="line"><span class="comment">###   @18=''</span></span><br><span class="line"><span class="comment">###   @19='管理员'</span></span><br><span class="line"><span class="comment">###   @20='2018-08-31 18:03:59'</span></span><br><span class="line"><span class="comment">###   @21='管理员'</span></span><br><span class="line"><span class="comment">###   @22='2019-11-06 21:53:00'</span></span><br><span class="line"><span class="comment">###   @23=0</span></span><br><span class="line"><span class="comment">###   @24=0</span></span><br><span class="line"><span class="comment">###   @25='1'</span></span><br><span class="line"><span class="comment">###   @26='00'</span></span><br><span class="line"><span class="comment">### SET</span></span><br><span class="line"><span class="comment">###   @1='be2080a3-3815-48ee-b73e-2f18cbe3b4a8'</span></span><br><span class="line"><span class="comment">###   @2=NULL</span></span><br><span class="line"><span class="comment">###   @3='9790'</span></span><br><span class="line"><span class="comment">###   @4=''</span></span><br><span class="line"><span class="comment">###   @5='CE0EQ8000'</span></span><br><span class="line"><span class="comment">###   @6='XQG52-Q718(灰)'</span></span><br><span class="line"><span class="comment">###   @7=''</span></span><br><span class="line"><span class="comment">###   @8=NULL</span></span><br><span class="line"><span class="comment">###   @9='N500'</span></span><br><span class="line"><span class="comment">###   @10='30'</span></span><br><span class="line"><span class="comment">###   @11='T6'</span></span><br><span class="line"><span class="comment">###   @12=''</span></span><br><span class="line"><span class="comment">###   @13=1</span></span><br><span class="line"><span class="comment">###   @14=''</span></span><br><span class="line"><span class="comment">###   @15='在产'</span></span><br><span class="line"><span class="comment">###   @16=''</span></span><br><span class="line"><span class="comment">###   @17=''</span></span><br><span class="line"><span class="comment">###   @18=''</span></span><br><span class="line"><span class="comment">###   @19='管理员'</span></span><br><span class="line"><span class="comment">###   @20='2018-08-31 18:03:59'</span></span><br><span class="line"><span class="comment">###   @21='管理员'</span></span><br><span class="line"><span class="comment">###   @22='2019-11-06 21:53:01'</span></span><br><span class="line"><span class="comment">###   @23=0</span></span><br><span class="line"><span class="comment">###   @24=0</span></span><br><span class="line"><span class="comment">###   @25='1'</span></span><br><span class="line"><span class="comment">###   @26='00'</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 工具 · mysqlbinlog</title>
    <url>/blog/2019/11/07/mysql-tool-mysqlbinlog/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://dev.mysql.com/doc/refman/8.0/en/mysqlbinlog.html?spm=a2c4g.11186623.2.15.42ff3393kYTtDN" target="_blank" rel="noopener">mysqlbinlog</a></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysqlbinlog -vv --base64-output=decode-rows mysql-bin.xxx | head -<span class="number">1000</span> | more</span><br><span class="line"></span><br><span class="line">--vv                          <span class="comment"># 将二进制转换为可阅读文本</span></span><br><span class="line">--base64-output=decode-rows   <span class="comment"># 解析binlog为sql</span></span><br><span class="line">--start-position              <span class="comment"># 起始位置</span></span><br><span class="line">--stop-position               <span class="comment"># 结束位置</span></span><br><span class="line">--start-datetime              <span class="comment"># 起始时间</span></span><br><span class="line">--stop-datetime               <span class="comment"># 结束时间</span></span><br><span class="line">--no-defaults                 <span class="comment"># 解决报错：unknown variable 'default-character-set=utf8'</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例分析 · 连接状态 init</title>
    <url>/blog/2019/11/07/mysql-case-state-init/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p><strong>HDM 监控告警</strong></p>
<blockquote>
<p>您的自建DB实例</p>
<p>cosmo-aps|cosmo-aps-t@10.138.232.84:3306 ( 别名: COSMOAPS_S, 集群: 智能制造 )</p>
<p>MySQL活跃会话数达到551</p>
</blockquote>
<p>查看当前会话情况，发现出现大量的 State is init.</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">+--------+-------------+---------------------+--------------------+---------+---------+----------------------------------------+------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Id     | User        | Host                | db                 | Command | Time    | State                                  | Info                                                                                                 |</span><br><span class="line">+--------+-------------+---------------------+--------------------+---------+---------+----------------------------------------+------------------------------------------------------------------------------------------------------+</span><br><span class="line">|     <span class="number">34</span> | system user |                     | NULL               | Connect | <span class="number">4814602</span> | Queueing master event to the relay log | NULL                                                                                                 |</span><br><span class="line">| <span class="number">312112</span> | sre         | <span class="number">10.138</span>.<span class="number">232.84</span>:<span class="number">39700</span> | information_schema | Query   |   <span class="number">36129</span> | checking query cache <span class="keyword">for</span> query         | /* rds internal mark */ /* hdm internal mark */ /* rds internal mark */ /* hdm internal mark */ SHOW |</span><br><span class="line">| <span class="number">312113</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43690</span>     | NULL               | Query   |   <span class="number">36131</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312117</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43698</span>     | NULL               | Query   |   <span class="number">36071</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312120</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43704</span>     | NULL               | Query   |   <span class="number">36011</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312123</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43710</span>     | NULL               | Query   |   <span class="number">35951</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312126</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43716</span>     | NULL               | Query   |   <span class="number">35891</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312128</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43720</span>     | NULL               | Query   |   <span class="number">35831</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312131</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43726</span>     | NULL               | Query   |   <span class="number">35771</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312135</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43734</span>     | NULL               | Query   |   <span class="number">35711</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312138</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43740</span>     | NULL               | Query   |   <span class="number">35651</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312141</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43746</span>     | NULL               | Query   |   <span class="number">35591</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312143</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43750</span>     | NULL               | Query   |   <span class="number">35531</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312146</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43756</span>     | NULL               | Query   |   <span class="number">35471</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312149</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43762</span>     | NULL               | Query   |   <span class="number">35411</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312152</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43768</span>     | NULL               | Query   |   <span class="number">35351</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312155</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43774</span>     | NULL               | Query   |   <span class="number">35291</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312157</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43778</span>     | NULL               | Query   |   <span class="number">35231</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312160</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43784</span>     | NULL               | Query   |   <span class="number">35171</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312164</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43792</span>     | NULL               | Query   |   <span class="number">35111</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312167</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43798</span>     | NULL               | Query   |   <span class="number">35051</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312170</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43804</span>     | NULL               | Query   |   <span class="number">34991</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312172</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43808</span>     | NULL               | Query   |   <span class="number">34931</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312175</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43814</span>     | NULL               | Query   |   <span class="number">34871</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312178</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43820</span>     | NULL               | Query   |   <span class="number">34811</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312181</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43826</span>     | NULL               | Query   |   <span class="number">34751</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312184</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43832</span>     | NULL               | Query   |   <span class="number">34691</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312186</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43836</span>     | NULL               | Query   |   <span class="number">34631</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312189</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43842</span>     | NULL               | Query   |   <span class="number">34571</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312193</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43850</span>     | NULL               | Query   |   <span class="number">34511</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312196</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43856</span>     | NULL               | Query   |   <span class="number">34451</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312199</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43862</span>     | NULL               | Query   |   <span class="number">34391</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312201</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43866</span>     | NULL               | Query   |   <span class="number">34331</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312204</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43872</span>     | NULL               | Query   |   <span class="number">34271</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312207</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43878</span>     | NULL               | Query   |   <span class="number">34211</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312210</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43884</span>     | NULL               | Query   |   <span class="number">34151</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312213</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43890</span>     | NULL               | Query   |   <span class="number">34091</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312215</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43894</span>     | NULL               | Query   |   <span class="number">34031</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312218</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43900</span>     | NULL               | Query   |   <span class="number">33971</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312222</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43908</span>     | NULL               | Query   |   <span class="number">33911</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312225</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43914</span>     | NULL               | Query   |   <span class="number">33851</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312228</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43920</span>     | NULL               | Query   |   <span class="number">33791</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312230</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43924</span>     | NULL               | Query   |   <span class="number">33731</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312233</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43930</span>     | NULL               | Query   |   <span class="number">33671</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312236</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43936</span>     | NULL               | Query   |   <span class="number">33611</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312238</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43940</span>     | NULL               | Query   |   <span class="number">33551</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312241</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43946</span>     | NULL               | Query   |   <span class="number">33491</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">312244</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">43952</span>     | NULL               | Query   |   <span class="number">33431</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">313865</span> | prom        | <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">47194</span>     | NULL               | Query   |      <span class="number">11</span> | init                                   | SHOW SLAVE STATUS                                                                                    |</span><br><span class="line">| <span class="number">313866</span> | sre         | localhost           | NULL               | Query   |       <span class="number">0</span> | init                                   | show processlist                                                                                     </span><br><span class="line">+--------+-------------+---------------------+--------------------+---------+---------+----------------------------------------+------------------------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>

<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>从错误日志发现，<code>2019-11-06 22:53:40</code> 开始提醒磁盘空间不足</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">11</span>-<span class="number">06</span> <span class="number">22</span>:<span class="number">53</span>:<span class="number">40</span> <span class="number">5752</span> [Warning] Disk is full writing <span class="string">'./relay-log.002275'</span> (Errcode: <span class="number">28</span> - No space left on device). Waiting <span class="keyword">for</span> someone to free space...</span><br><span class="line"><span class="number">2019</span>-<span class="number">11</span>-<span class="number">06</span> <span class="number">22</span>:<span class="number">53</span>:<span class="number">40</span> <span class="number">5752</span> [Warning] Retry <span class="keyword">in</span> <span class="number">60</span> secs. Message reprinted <span class="keyword">in</span> <span class="number">600</span> secs</span><br><span class="line"><span class="number">2019</span>-<span class="number">11</span>-<span class="number">06</span> <span class="number">22</span>:<span class="number">53</span>:<span class="number">42</span> <span class="number">5752</span> [ERROR] Slave SQL: Could not execute Update_rows event on table cosmo-aps.bns_aps_versiontolineinfo; Error writing file <span class="string">'/data/mysql/tmp/MLpTCcJu'</span> (Errcode: <span class="number">28</span> - No space left on device), Error_code: <span class="number">3</span>; Error writing file <span class="string">'mysql-bin'</span> (errno: <span class="number">28</span> - No space left on device), Error_code: <span class="number">1026</span>; handler error HA_ERR_RBR_LOGGING_FAILED; the event<span class="string">'s master log mysql-bin.000528, end_log_pos 674303230, Error_code: 3</span></span><br><span class="line"><span class="string">2019-11-06 22:53:42 5752 [Warning] Slave: Error writing file '</span>/<span class="keyword">data</span>/mysql/tmp/MLpTCcJu<span class="string">' (Errcode: 28 - No space left on device) Error_code: 3</span></span><br><span class="line"><span class="string">2019-11-06 22:53:42 5752 [Warning] Slave: Error writing file '</span>mysql-bin<span class="string">' (errno: 28 - No space left on device) Error_code: 1026</span></span><br><span class="line"><span class="string">2019-11-06 22:53:42 5752 [ERROR] Error running query, slave SQL thread aborted. Fix the problem, and restart the slave SQL thread with "SLAVE START". We stopped at log '</span>mysql-bin.<span class="number">000528</span><span class="string">' position 661219322</span></span><br><span class="line"><span class="string">2019-11-06 22:54:40 5752 [Warning] Disk is full writing '</span>./relay-log.<span class="number">002275</span><span class="string">' (Errcode: 28 - No space left on device). Waiting for someone to free space...</span></span><br></pre></td></tr></table></figure>

<p>检查磁盘空间使用情况，发现 <code>/data</code> 目录已占满</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[root@cosmoim-db04 log]<span class="comment"># df -h</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos-root  <span class="number">100</span>G  <span class="number">7.1</span>G   <span class="number">93</span>G   <span class="number">8</span>% /</span><br><span class="line">devtmpfs                  <span class="number">63</span>G     <span class="number">0</span>   <span class="number">63</span>G   <span class="number">0</span>% /dev</span><br><span class="line">tmpfs                     <span class="number">63</span>G     <span class="number">0</span>   <span class="number">63</span>G   <span class="number">0</span>% /dev/shm</span><br><span class="line">tmpfs                     <span class="number">63</span>G  <span class="number">826</span>M   <span class="number">63</span>G   <span class="number">2</span>% /run</span><br><span class="line">tmpfs                     <span class="number">63</span>G     <span class="number">0</span>   <span class="number">63</span>G   <span class="number">0</span>% /sys/fs/cgroup</span><br><span class="line">/dev/sda1                <span class="number">497</span>M  <span class="number">172</span>M  <span class="number">326</span>M  <span class="number">35</span>% /boot</span><br><span class="line">/dev/mapper/centos-data  <span class="number">888</span>G  <span class="number">888</span>G   <span class="number">20</span>K <span class="number">100</span>% /<span class="keyword">data</span></span><br><span class="line">tmpfs                     <span class="number">13</span>G   <span class="number">12</span>K   <span class="number">13</span>G   <span class="number">1</span>% /run/user/<span class="number">42</span></span><br><span class="line">tmpfs                     <span class="number">13</span>G     <span class="number">0</span>   <span class="number">13</span>G   <span class="number">0</span>% /run/user/<span class="number">1002</span></span><br><span class="line">tmpfs                     <span class="number">13</span>G     <span class="number">0</span>   <span class="number">13</span>G   <span class="number">0</span>% /run/user/<span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><code>/data</code> 目录下磁盘占满的主要原因 <code>Nov  6 14:44</code> 出现主从复制中断导致 <code>relay-log</code> 疯狂增长</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[root@cosmoim-db04 data]<span class="comment"># ll -h</span></span><br><span class="line">total <span class="number">798</span>G</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql    <span class="number">56</span> Sep <span class="number">12</span> <span class="number">15</span>:<span class="number">27</span> auto.cnf</span><br><span class="line">drwxr-x--- <span class="number">2</span> mysql mysql  <span class="number">8.0</span>K Oct <span class="number">31</span> <span class="number">18</span>:<span class="number">48</span> cosmo@<span class="number">002</span>daps</span><br><span class="line">drwxr-x--- <span class="number">2</span> mysql mysql  <span class="number">8.0</span>K Oct <span class="number">21</span> <span class="number">20</span>:<span class="number">27</span> cosmo@<span class="number">002</span>daps@<span class="number">002</span>dt</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql   <span class="number">10</span>G Nov  <span class="number">6</span> <span class="number">22</span>:<span class="number">53</span> ibdata1</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql   <span class="number">10</span>G Sep <span class="number">12</span> <span class="number">14</span>:<span class="number">13</span> ibdata2</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql  <span class="number">512</span>M Nov  <span class="number">6</span> <span class="number">22</span>:<span class="number">53</span> ib_logfile0</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql  <span class="number">512</span>M Oct <span class="number">28</span> <span class="number">15</span>:<span class="number">47</span> ib_logfile1</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql  <span class="number">512</span>M Nov  <span class="number">6</span> <span class="number">22</span>:<span class="number">53</span> ib_logfile2</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql   <span class="number">12</span>M Sep <span class="number">12</span> <span class="number">14</span>:<span class="number">13</span> ibtmp1</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">139</span> Nov  <span class="number">7</span> <span class="number">09</span>:<span class="number">23</span> master.info</span><br><span class="line">drwxr-x--- <span class="number">2</span> mysql mysql  <span class="number">4.0</span>K Sep <span class="number">12</span> <span class="number">14</span>:<span class="number">13</span> mysql</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">1.1</span>G Oct <span class="number">28</span> <span class="number">14</span>:<span class="number">44</span> mysql-bin.<span class="number">000002</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">895</span>M Nov  <span class="number">6</span> <span class="number">22</span>:<span class="number">27</span> mysql-bin.<span class="number">000003</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql    <span class="number">38</span> Oct <span class="number">28</span> <span class="number">14</span>:<span class="number">44</span> mysql-bin.index</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql     <span class="number">5</span> Sep <span class="number">12</span> <span class="number">15</span>:<span class="number">27</span> mysql.pid</span><br><span class="line">drwxr-x--- <span class="number">2</span> mysql mysql  <span class="number">4.0</span>K Sep <span class="number">12</span> <span class="number">14</span>:<span class="number">13</span> performance_schema</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">214</span> Oct <span class="number">28</span> <span class="number">15</span>:<span class="number">23</span> relay-log.<span class="number">000009</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">44</span> relay-log.<span class="number">000010</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">4.4</span>M Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">44</span> relay-log.<span class="number">000011</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">44</span> relay-log.<span class="number">000012</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">45</span> relay-log.<span class="number">000013</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">17</span>M Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">45</span> relay-log.<span class="number">000014</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">45</span> relay-log.<span class="number">000015</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">45</span> relay-log.<span class="number">000016</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">17</span>M Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">45</span> relay-log.<span class="number">000017</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">45</span> relay-log.<span class="number">000018</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">46</span> relay-log.<span class="number">000019</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">17</span>M Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">46</span> relay-log.<span class="number">000020</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">214</span> Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">46</span> relay-log.<span class="number">000021</span></span><br><span class="line">....</span><br></pre></td></tr></table></figure>

<p>释放部分磁盘空间后，连接会话恢复正常</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show processlist;</span><br><span class="line">+--------+-------------+---------------------+--------------------+---------+---------+----------------------------------+------------------+</span><br><span class="line">| Id     | User        | Host                | db                 | Command | Time    | State                            | Info             |</span><br><span class="line">+--------+-------------+---------------------+--------------------+---------+---------+----------------------------------+------------------+</span><br><span class="line">|     <span class="number">34</span> | system user |                     | NULL               | Connect | <span class="number">4816502</span> | Waiting <span class="keyword">for</span> master to send event | NULL             |</span><br><span class="line">| <span class="number">313974</span> | sre         | <span class="number">10.138</span>.<span class="number">232.84</span>:<span class="number">43874</span> | information_schema | Sleep   |       <span class="number">7</span> |                                  | NULL             |</span><br><span class="line">| <span class="number">313976</span> | sre         | localhost           | NULL               | Query   |       <span class="number">0</span> | init                             | show processlist |</span><br><span class="line">+--------+-------------+---------------------+--------------------+---------+---------+----------------------------------+------------------+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>工具</title>
    <url>/blog/2019/11/06/tools/</url>
    <content><![CDATA[<h2 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h2><p><strong>简介</strong>：<a href="https://www.runoob.com/linux/linux-comm-top.html" target="_blank" rel="noopener"><strong>top</strong></a> 是 <code>Linux</code> 下常用的监控程序，<a href="https://github.com/hishamhm/htop" target="_blank" rel="noopener"><strong>htop</strong></a> 相当于其加强版，颜色显示不同参数，且支持鼠标操作，更加简单和人性化。</p>
<p><strong>安装</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ git clone https://github.com/hishamhm/htop.git</span><br><span class="line">$ ./autogen.sh &amp;&amp; ./configure &amp;&amp; make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure>

<p><strong>使用</strong>：</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-065843.png" alt></p>
<h2 id="mycli"><a href="#mycli" class="headerlink" title="mycli"></a>mycli</h2><p><strong>简介</strong>：<a href="https://www.mycli.net/" target="_blank" rel="noopener"><strong>mycli</strong></a> 是用于 <code>MySQL</code>、<code>MariaDB</code> 和 <code>Percona</code> 的命令行界面，具有<strong>自动补全</strong>和<strong>语法高亮</strong>功能。</p>
<p><strong>安装</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum install python-pip</span><br><span class="line">$ pip install mycli</span><br></pre></td></tr></table></figure>

<p><strong>使用</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mycli --help</span><br><span class="line">Usage: mycli [OPTIONS] [DATABASE]</span><br><span class="line"></span><br><span class="line">  A MySQL terminal client with auto-completion and syntax highlighting.</span><br><span class="line"></span><br><span class="line">  Examples:</span><br><span class="line">    - mycli my_database</span><br><span class="line">    - mycli -u my_user -h my_host.com my_database</span><br><span class="line">    - mycli mysql://my_user@my_host.com:<span class="number">3306</span>/my_database</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, --host TEXT               Host address of the database.</span><br><span class="line">  -P, --port INTEGER            Port number to use <span class="keyword">for</span> connection. Honors</span><br><span class="line">                                <span class="variable">$MYSQL_TCP_PORT</span>.</span><br><span class="line">  -u, --user TEXT               User name to connect to the database.</span><br><span class="line">  -S, --socket TEXT             The socket file to use <span class="keyword">for</span> connection.</span><br><span class="line">  -p, --password TEXT           Password to connect to the database.</span><br><span class="line">  --pass TEXT                   Password to connect to the database.</span><br><span class="line">  --ssl-ca PATH                 CA file <span class="keyword">in</span> PEM format.</span><br><span class="line">  --ssl-capath TEXT             CA directory.</span><br><span class="line">  --ssl-cert PATH               X509 cert <span class="keyword">in</span> PEM format.</span><br><span class="line">  --ssl-key PATH                X509 key <span class="keyword">in</span> PEM format.</span><br><span class="line">  --ssl-cipher TEXT             SSL cipher to use.</span><br><span class="line">  --ssl-verify-server-cert      Verify server<span class="string">'s "Common Name" in its cert</span></span><br><span class="line"><span class="string">                                against hostname used when connecting. This</span></span><br><span class="line"><span class="string">                                option is disabled by default.</span></span><br><span class="line"><span class="string">  -V, --version                 Output mycli'</span>s version.</span><br><span class="line">  -v, --verbose                 Verbose output.</span><br><span class="line">  -D, --database TEXT           Database to use.</span><br><span class="line">  -d, --dsn TEXT                Use DSN configured into the [alias_dsn]</span><br><span class="line">                                section of myclirc file.</span><br><span class="line">  --list-dsn                    list of DSN configured into the [alias_dsn]</span><br><span class="line">                                section of myclirc file.</span><br><span class="line">  -R, --prompt TEXT             Prompt format (Default: <span class="string">"\t \u@\h:\d&gt; "</span>).</span><br><span class="line">  -l, --logfile FILENAME        Log every query and its results to a file.</span><br><span class="line">  --defaults-group-suffix TEXT  Read MySQL config groups with the specified</span><br><span class="line">                                suffix.</span><br><span class="line">  --defaults-file PATH          Only read MySQL options from the given file.</span><br><span class="line">  --myclirc PATH                Location of myclirc file.</span><br><span class="line">  --auto-vertical-output        Automatically <span class="keyword">switch</span> to vertical output mode</span><br><span class="line">                                <span class="keyword">if</span> the result is wider than the terminal</span><br><span class="line">                                width.</span><br><span class="line">  -t, --table                   Display batch output <span class="keyword">in</span> table format.</span><br><span class="line">  --csv                         Display batch output <span class="keyword">in</span> CSV format.</span><br><span class="line">  --warn / --no-warn            Warn before running a destructive query.</span><br><span class="line">  --local-infile BOOLEAN        Enable/disable LOAD <span class="keyword">DATA</span> LOCAL INFILE.</span><br><span class="line">  --login-path TEXT             Read this path from the login file.</span><br><span class="line">  -e, --execute TEXT            Execute command and quit.</span><br><span class="line">  --help                        Show this message and exit.</span><br></pre></td></tr></table></figure>

<h2 id="shortcut"><a href="#shortcut" class="headerlink" title="shortcut"></a>shortcut</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 快捷键</span></span><br><span class="line">向下翻页：Ctrl + f</span><br><span class="line">向上翻页：Ctrl + b</span><br><span class="line">磁盘文件排序：du -h * | sort -n</span><br><span class="line">删除单行：dd</span><br></pre></td></tr></table></figure>

<h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><p><strong>简介</strong>：用来定期执行程序的命令。</p>
<p><strong>使用</strong>：<a href="https://tool.lu/crontab/" target="_blank" rel="noopener">在线工具</a></p>
<h2 id="typora"><a href="#typora" class="headerlink" title="typora"></a>typora</h2><p><strong>简介</strong>：<code>Markdown</code> 是一种轻量级标记语言，人们使用易读易写的纯文本格式编写文档，然后转换成有效的 <code>html</code> 文档，<code>Typora</code> 对 <code>Markdown</code> 的完美支持、丰富的主题、高效的快捷键操作，无一不令人爱不释手。</p>
<p><strong>安装</strong>：<a href="https://www.typora.io/#download" target="_blank" rel="noopener">下载</a></p>
<p><strong>使用</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">加粗： Ctrl/Cmd + B</span><br><span class="line">标题： Ctrl/Cmd + H</span><br><span class="line">插入链接： Ctrl/Cmd + K</span><br><span class="line">插入代码： Ctrl/Cmd + Shift + C</span><br><span class="line">行内代码： Ctrl/Cmd + Shift + K</span><br><span class="line">插入图片： Ctrl/Cmd + Shift + I</span><br><span class="line">无序列表： Ctrl/Cmd + Shift + L</span><br><span class="line">撤销： Ctrl/Cmd + Z</span><br><span class="line">一级标题：Crtl + <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="zentao"><a href="#zentao" class="headerlink" title="zentao"></a>zentao</h2><p><strong>简介</strong>：<a href="https://www.zentao.net/" target="_blank" rel="noopener">禅道</a>，国产的开源项目管理软件，专注研发项目管理，内置需求管理、任务管理、<code>bug</code> 管理、缺陷管理、用例管理、计划发布等功能，实现了软件的完整生命周期管理。</p>
<p><strong>使用</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ wget http://dl.cnezsoft.com/zentao/<span class="number">11.5</span>.<span class="number">1</span>/ZenTaoPMS.<span class="number">11.5</span>.<span class="number">1</span>.zbox_64.tar.gz</span><br><span class="line">$ tar -zxvf ZenTaoPMS.<span class="number">11.5</span>.<span class="number">1</span>.zbox_64.tar.gz -C /opt</span><br><span class="line">$ /opt/zbox/zbox start</span><br><span class="line">$ /opt/zbox/zbox -ap <span class="number">8080</span> -mp <span class="number">3307</span> （-ap：修改Apache端口，-mp：修改MySQL端口）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启停httpd</span></span><br><span class="line">./httpd -k start</span><br><span class="line">./httpd -k stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 地址</span></span><br><span class="line">http://<span class="number">10.133</span>.<span class="number">0.53</span>:<span class="number">8080</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 账号</span></span><br><span class="line">admin/Haier@<span class="number">123</span></span><br></pre></td></tr></table></figure>

<h2 id="mindoc"><a href="#mindoc" class="headerlink" title="mindoc"></a>mindoc</h2><p><a href="https://www.iminho.me/" target="_blank" rel="noopener">官方网站</a> | <a href="https://github.com/lifei6671/mindoc" target="_blank" rel="noopener">项目地址</a> | <a href="https://www.xiaoz.me/archives/10007" target="_blank" rel="noopener">安装参考</a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 连接与连接数</title>
    <url>/blog/2019/11/06/mysql-connection/</url>
    <content><![CDATA[<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul>
<li><strong>TCP/IP 方式</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用场景：mysql客户端在一台服务器上，mysql实例在另外一台服务器上</span></span><br><span class="line">mysql [options] [database]</span><br><span class="line">$ mysql -h IP -u username -p password -P port</span><br><span class="line"></span><br><span class="line">[options]</span><br><span class="line">-u, --user=name          <span class="comment"># 指定用户名</span></span><br><span class="line">-p, --password[=name]    <span class="comment"># 指定密码  </span></span><br><span class="line">-h, --host=name          <span class="comment"># 指定服务器IP  </span></span><br><span class="line">-P, --port=<span class="comment">#             # 指定连接端口</span></span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">user=<span class="string">'xx'</span></span><br><span class="line">password=<span class="string">'xx'</span></span><br><span class="line">port = <span class="number">3306</span></span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8mb4</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>Socket 方式</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用场景：mysql客户端和实例在同一台服务器上</span></span><br><span class="line">$ mysql -S /<span class="keyword">data</span>/mysql/mysql.sock -u username -p password</span><br></pre></td></tr></table></figure>

<p><strong>Windows 客户端工具</strong>：<a href="https://www.navicat.com.cn/products/navicat-for-mysql" target="_blank" rel="noopener">Navicate</a>、<a href="https://www.webyog.com/product/sqlyog" target="_blank" rel="noopener">SQLyog</a>、<a href="https://www.heidisql.com/" target="_blank" rel="noopener">HeidiSQL</a>、<a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener">phpMyAdmin</a>、<a href="https://dev.mysql.com/downloads/workbench/" target="_blank" rel="noopener">MySQL Workbench</a> 等。</p>
<p><strong>Mac 客户端工具</strong>：<a href="http://www.sequelpro.com" target="_blank" rel="noopener">Selquel Pro</a>、<a href="https://dev.mysql.com/downloads/workbench/" target="_blank" rel="noopener">MySQL Workbench</a> 等。</p>
<h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据库最大连接数</span></span><br><span class="line">mysql&gt; show variables like ‘%max_connections%’;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已使用最大连接数</span></span><br><span class="line">mysql&gt; show global status like ‘Max_used_connections’;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前连接线程数</span></span><br><span class="line">mysql&gt; show status like ‘Threads%’;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前连接详细信息</span></span><br><span class="line">mysql&gt; show full processlist;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 最佳实践 · 快速杀掉大量会话连接</title>
    <url>/blog/2019/11/06/mysql-kill-processlist/</url>
    <content><![CDATA[<h2 id="kill-sh"><a href="#kill-sh" class="headerlink" title="kill.sh"></a>kill.sh</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#############################################################################</span></span><br><span class="line"><span class="comment"># Kill all processlist According to status.</span></span><br><span class="line"><span class="comment"># -h: 主机IP</span></span><br><span class="line"><span class="comment"># -u: 用户名</span></span><br><span class="line"><span class="comment"># -p: 密码</span></span><br><span class="line"><span class="comment">#############################################################################</span></span><br><span class="line"></span><br><span class="line">host = <span class="string">''</span></span><br><span class="line">user = <span class="string">''</span></span><br><span class="line">pwd  = <span class="string">''</span></span><br><span class="line">status = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  n=`mysqladmin processlist -h<span class="variable">$host</span> -u<span class="variable">$user</span> -p<span class="variable">$pwd</span> | grep -i <span class="variable">$status</span> | wc -l`</span><br><span class="line">  date=`date +%Y%m%d\[%H:%M:%S]`</span><br><span class="line">  echo <span class="variable">$n</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">"<span class="variable">$n</span>"</span> <span class="nomarkup">-gt</span> <span class="number">10</span> ]</span><br><span class="line">  then</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> `mysqladmin processlist -h<span class="variable">$host</span> -u<span class="variable">$user</span> -p<span class="variable">$pwd</span> | grep -i <span class="variable">$status</span> | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  	mysqladmin processlist -h<span class="variable">$host</span> -u<span class="variable">$user</span> -p<span class="variable">$pwd</span> kill <span class="variable">$i</span></span><br><span class="line">  done</span><br><span class="line"></span><br><span class="line">  echo <span class="string">"<span class="variable">$status</span> is too many need killed it "</span> &gt;&gt; /tmp/kill.log</span><br><span class="line">  echo <span class="string">"<span class="variable">$date</span> : <span class="variable">$n</span>"</span> &gt;&gt; /tmp/kill.log</span><br><span class="line">  fi</span><br><span class="line">  sleep <span class="number">1</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例分析 · 大量连接状态 Writing to net</title>
    <url>/blog/2019/11/05/mysql-case-writing-to-net/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p><strong>HDM 告警</strong></p>
<blockquote>
<p>您的自建DB实例</p>
<p><a href="mailto:dbvipcenter@10.159.36.193" target="_blank" rel="noopener">dbvipcenter@10.159.36.193</a>:3307 ( 别名: HMCENTER_M, 集群: 互联互通 )</p>
<p>MySQL活跃会话数达到131</p>
</blockquote>
<p><code>Show processlist</code> 检查实时会话状态，发现出现大量的 <code>&quot;Writing to net&quot;</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">| <span class="number">41106</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">36737</span> | NULL | Binlog Dump | <span class="number">14240</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41146</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">44157</span> | NULL | Binlog Dump | <span class="number">14163</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41453</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">43588</span> | NULL | Binlog Dump | <span class="number">13536</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41570</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">35880</span> | NULL | Binlog Dump | <span class="number">13345</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41608</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">39624</span> | NULL | Binlog Dump | <span class="number">13300</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41615</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">39629</span> | NULL | Binlog Dump | <span class="number">13281</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41618</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">39632</span> | NULL | Binlog Dump | <span class="number">13281</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41650</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">43390</span> | NULL | Binlog Dump | <span class="number">13227</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41854</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">47054</span> | NULL | Binlog Dump | <span class="number">12859</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">41883</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">50815</span> | NULL | Binlog Dump | <span class="number">12814</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">42305</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">42869</span> | NULL | Binlog Dump | <span class="number">12040</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">42420</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">35098</span> | NULL | Binlog Dump | <span class="number">11862</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br><span class="line">| <span class="number">42446</span> | canal  | <span class="number">10.138</span>.<span class="number">225.187</span>:<span class="number">38964</span> | NULL | Binlog Dump | <span class="number">11818</span> | Writing to net              | NULL |    <span class="number">0.000</span> |</span><br></pre></td></tr></table></figure>

<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>Writing to net：The server is writing a packet to the network.</p>
<p>SQL 语句查询流程：</p>
<ul>
<li>扫描一行写到 <code>net_buffer</code>，这里 <code>net_buffer</code> 是按照 <a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_buffer_length" target="_blank" rel="noopener">net_buffer_length</a> 初始化，但可以动态增长到 <a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_allowed_packet" target="_blank" rel="noopener">max_allowed_packet</a> 配置值</li>
<li>继续获取满足条件的行，直到写满 <code>net_buffer</code>，然后调用网络接口发送出去</li>
<li>客户端接收网络包完成，清空 <code>net_buffer</code></li>
<li>重复上面 1 到 3 的步骤</li>
<li>如果发送未完成，表示 <code>socket send buffer</code> 写满，这时会进入等待状态，显示 <code>Writing to net</code>，直到 <code>socket send buffer</code> 重新可写，再继续发送</li>
</ul>
<p>由于 MySQL 是边扫描边发送数据的，当客户端接收慢时，就会阻塞整个查询进程，导致执行变慢。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show variables like 'net_buffer_length';</span><br><span class="line">+<span class="comment">-------------------+-------+</span></span><br><span class="line">| Variable_name     | Value |</span><br><span class="line">+<span class="comment">-------------------+-------+</span></span><br><span class="line">| net_buffer_length | 16384 |</span><br><span class="line">+<span class="comment">-------------------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]&gt; <span class="keyword">select</span> @@max_allowed_packet/<span class="number">1024</span>/<span class="number">1024</span>;</span><br><span class="line">+<span class="comment">--------------------------------+</span></span><br><span class="line">| @@max_allowed_packet/1024/1024 |</span><br><span class="line">+<span class="comment">--------------------------------+</span></span><br><span class="line">| 20.00000000                    |</span><br><span class="line">+<span class="comment">--------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.08</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul>
<li>调整 <a href="https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_allowed_packet" target="_blank" rel="noopener">max_allowed_packet</a> 参数</li>
<li>排查客户端异常情况</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; set global max_allowed_packet=67108864;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show global variables like "max_allowed_packet";</span><br><span class="line">+<span class="comment">--------------------+----------+</span></span><br><span class="line">| Variable_name      | Value    |</span><br><span class="line">+<span class="comment">--------------------+----------+</span></span><br><span class="line">| max_allowed_packet | 67108864 |</span><br><span class="line">+<span class="comment">--------------------+----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云 · HDR</title>
    <url>/blog/2019/11/04/aliyun-hdr/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>备份媒介的损坏、火灾、自然灾害等情况可能导致数据的永久丢失，造成难以承受的损失。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>混合云容灾服务（Hybrid Disaster Recovery， 简称 HDR）是一个高性能业务持续性解决方案，为企业关键业务提供低至秒级 <code>RPO</code>，分钟级 <code>RTO</code> 的容灾服务，极大缩短业务宕机时间，减少数据丢失。</p>
<p><strong>核心问题</strong>：</p>
<ul>
<li><strong>应用级容灾</strong>：在数据中心故障或长时间系统维护作业时，在云上快速恢复应用运行，缩短业务停机时间，极大减少损失，保障业务连续性。</li>
<li><strong>数据级容灾</strong>：在数据中心备份数据库、虚拟机、物理机整机，备份数据存储在本地并自动上云，可在自建数据中心发生重大灾害时保障数据安全，同时提供高效的本地和云上的双重恢复。</li>
</ul>
<p><strong>业务类型</strong>：</p>
<ul>
<li><strong>CDR</strong>：Continuous Data Replication，连续复制型容灾，解决企业关键应用的高标准容灾方案，提供<strong>秒-分级</strong>的 <code>RPO</code> 和 <code>RTO</code> 容灾。</li>
<li><strong>SDR</strong>：Snapshot Data Replication，快照型容灾，解决企业核心应用的数据级容灾，可以对数据库、虚机、文件等实现多版本本地备份和自动备份上云，还可以实现应用服务器的<strong>小时级别</strong> <code>RPO</code>、<code>RTO</code> 的整机容灾。</li>
</ul>
<p><strong>优点</strong>：</p>
<ul>
<li>高性能：秒级 <code>RPO</code>，数据实时复制，分钟级 <code>RTO</code>，云上快速整机拉起</li>
<li>低成本：免机房建设，云上只需要极少计算资源，主要消耗云盘</li>
<li>可验证：一键演练，<code>10分钟</code> 完成验证</li>
<li>易运维：全链路监控、故障自动告警</li>
</ul>
<p><strong>名词概念</strong>：</p>
<table>
<thead>
<tr>
<th align="left">概念</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">故障转移</td>
<td align="left">即容灾恢复，指您的 IDC 应用出现故障时，在阿里云上恢复应用的过程</td>
</tr>
<tr>
<td align="left">故障恢复</td>
<td align="left">当您的 IDC 内的环境恢复以后，将应用数据迁回自有 IDC 恢复应用运行的过程</td>
</tr>
<tr>
<td align="left">RPO</td>
<td align="left">Recovery Point Objective（数据恢复点目标），指应用发生故障时预期的数据丢失量</td>
</tr>
<tr>
<td align="left">RTO</td>
<td align="left">Recovery Time Objective（恢复时间目标），指故障发生时将应用恢复运行所需要的时间</td>
</tr>
<tr>
<td align="left">混合云灾备一体机</td>
<td align="left">阿里云推出具有容灾备份功能的一体机，适用于快照型容灾（SDR）与连续复制型容灾（CDR）</td>
</tr>
<tr>
<td align="left">容灾恢复网关</td>
<td align="left">适用于快照型容灾，是在阿里云上按需部署的容灾恢复服务器，它可以根据云上容灾存储中的备份数据，在 <code>ECS</code> 上恢复您的云下服务器整机、文件和应用数据。</td>
</tr>
</tbody></table>
<p><a href="http://www.djbh.net/webdev/file/webFiles/File/cpzg/20122616046.pdf?spm=a2c4g.11186623.2.11.6e15f679iwwn7e&file=20122616046.pdf" target="_blank" rel="noopener">GB/T 20988-2007标准</a>：是中国国家标准化管理委员会制定的信息系统灾难恢复规范参考</p>
<p><img src="http://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/64142/156775175432398_zh-CN.png" alt="img"></p>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><p>数据保护和业务连续性对数据中心的意义重大，关键应用的故障或数据丢失会对您的业务造成重大损失。混合云容灾服务提供了三个层次的能力来保护数据，并确保业务连续性。</p>
<ul>
<li><p><strong>本地备份</strong></p>
<p>混合云灾备一体机可以按照预设策略将服务器整机镜像和文件备份至本地，并在需要时恢复至虚拟化平台和物理平台，物理平台仅支持文件级恢复。</p>
</li>
<li><p><strong>异地备份</strong></p>
<p>服务器镜像和数据备份后会直接上传至阿里云灾备库，实现高可靠的云上异地备份。稳定的异地备份确保关键数据在本地数据中心发生火灾等极端情况下不丢失，在本地设施修复后恢复至本地。</p>
</li>
<li><p><strong>云上容灾</strong></p>
<p>为减少因应用故障导致的业务损失，当数据中心出现严重故障无法快速恢复时，混合云容灾服务可以高效地在 ECS 上快速恢复您的应用。</p>
</li>
</ul>
<h3 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h3><p><img src="https://img.alicdn.com/tfs/TB1H.Kvg29TBuNjy1zbXXXpepXa-1530-1140.png" alt="img"></p>
<h4 id="CDR"><a href="#CDR" class="headerlink" title="CDR"></a>CDR</h4><p><strong>原理</strong>：基于磁盘级实时数据复制技术，可以提供秒级-分钟级的 <code>RPO/RTO</code>。</p>
<p><strong>方案</strong>：</p>
<p><img src="http://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/6645052751/p33361.jpg" alt="img"></p>
<p><strong>类型</strong>：</p>
<table>
<thead>
<tr>
<th align="left">型号</th>
<th align="left">支持服务器数量</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Apsara DR100</td>
<td align="left">&lt; 20</td>
</tr>
<tr>
<td align="left">Apsara DR200</td>
<td align="left">&lt; 50</td>
</tr>
</tbody></table>
<h4 id="SDR"><a href="#SDR" class="headerlink" title="SDR"></a>SDR</h4><p><strong>原理</strong>：基于数据定时备份能力，提供了小时级-天级的 <code>RPO/RTO</code>，并且可以与业务网络流量错峰。</p>
<table>
<thead>
<tr>
<th align="left">型号</th>
<th align="left">支持服务器数量</th>
<th align="left">支持的源数据量</th>
<th align="left">备份恢复吞吐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">HDR1000</td>
<td align="left">&lt; 20</td>
<td align="left">&lt; 10 TB</td>
<td align="left">0.5 TB/小时</td>
</tr>
<tr>
<td align="left">HDR2000</td>
<td align="left">20~100</td>
<td align="left">20 TB~100 TB</td>
<td align="left">1 TB/小时</td>
</tr>
</tbody></table>
<p>对比：</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">CDR</th>
<th align="left">SDR</th>
</tr>
</thead>
<tbody><tr>
<td align="left">RPO</td>
<td align="left">秒 - 分钟级</td>
<td align="left">小时 - 天级</td>
</tr>
<tr>
<td align="left">RTO</td>
<td align="left">分钟级</td>
<td align="left">小时级</td>
</tr>
<tr>
<td align="left">多恢复点时限</td>
<td align="left">30天</td>
<td align="left">不限时长</td>
</tr>
<tr>
<td align="left">网络要求</td>
<td align="left">较高</td>
<td align="left">较低</td>
</tr>
<tr>
<td align="left">灾备一体机硬件</td>
<td align="left">可选</td>
<td align="left">必选</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="left">场景</th>
<th align="left">案例</th>
<th align="left">CDR</th>
<th align="left">SDR</th>
</tr>
</thead>
<tbody><tr>
<td align="left">关键应用秒级 - 分钟级 RPO、RTO 容灾</td>
<td align="left">企业关键业务允许 5 分钟 RPO，宕机后要求 15 分钟内在云上拉起，恢复业务运行。</td>
<td align="left">√</td>
<td align="left">×</td>
</tr>
<tr>
<td align="left">重要应用小时级 RPO、 RTO 云容灾</td>
<td align="left">企业内重要应用需要实现 24 小时 RPO、6 小时 RTO 的应用级容灾。</td>
<td align="left">×</td>
<td align="left">√</td>
</tr>
<tr>
<td align="left">关键应用数据级容灾 （本地+云双备份）</td>
<td align="left">本地 Oracle、SQL Server 数据库，以及一系列重要文件需要实现多版本的本地备份，同时备份数据上云，实现数据级容灾。</td>
<td align="left">×</td>
<td align="left">√</td>
</tr>
<tr>
<td align="left">跨地域容灾</td>
<td align="left">容灾系统部署在阿里云的两个地域中，当主系统发生故障时，业务系统切换到容灾系统。主系统和容灾系统部署在不同的地域，可靠性更高，有效避免了地域性灾害导致的系统故障。</td>
<td align="left">√</td>
<td align="left">×</td>
</tr>
<tr>
<td align="left">跨可用区容灾</td>
<td align="left">支持业务的跨可用区（Zone）容灾能力，对整体的应用做容灾备份来应对单地区的故障，满足业务的 RTO/RPO 核心指标。</td>
<td align="left">√</td>
<td align="left">×</td>
</tr>
</tbody></table>
<h3 id="网络环境"><a href="#网络环境" class="headerlink" title="网络环境"></a>网络环境</h3><ul>
<li>数据中心到阿里云之间的网络：专线 / VPN / 公网</li>
<li>混合云灾备一体机到被保护服务器之间的网络：备份一体机提供了双千兆、双万兆网卡供选择，可以根据备份恢复吞吐要求按需配置。</li>
</ul>
<h3 id="权限要求"><a href="#权限要求" class="headerlink" title="权限要求"></a>权限要求</h3><ul>
<li>OSS 权限</li>
<li>云盘权限</li>
<li>VPC 权限</li>
</ul>
<blockquote>
<p>说明：如果用户已直接授予 <code>AliyunHDRFullAccess</code> 权限，则不需要再单独开通 <code>OSS</code>、 <code>ECS</code>、 <code>VPC</code> 等权限。</p>
</blockquote>
]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 事件</title>
    <url>/blog/2019/10/31/mysql-event/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MySQL 使用 <a href="https://dev.mysql.com/doc/refman/5.7/en/events-table.html" target="_blank" rel="noopener">EVENTS</a> 来处理计划任务，类似于 Linux 上的 <a href="http://cron.qqe2.com/" target="_blank" rel="noopener">cron</a>，默认情况下，事件未启用。</p>
<p><strong>权限</strong>：<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_event" target="_blank" rel="noopener"><code>EVENT</code></a></p>
<p><strong>语法</strong>：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span></span><br><span class="line">    [DEFINER = <span class="keyword">user</span>]</span><br><span class="line">    <span class="keyword">EVENT</span></span><br><span class="line">    [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>]</span><br><span class="line">    event_name</span><br><span class="line">    <span class="keyword">ON</span> SCHEDULE schedule</span><br><span class="line">    [<span class="keyword">ON</span> COMPLETION [<span class="keyword">NOT</span>] <span class="keyword">PRESERVE</span>]</span><br><span class="line">    [<span class="keyword">ENABLE</span> | <span class="keyword">DISABLE</span> | <span class="keyword">DISABLE</span> <span class="keyword">ON</span> <span class="keyword">SLAVE</span>]</span><br><span class="line">    [<span class="keyword">COMMENT</span> <span class="string">'string'</span>]</span><br><span class="line">    <span class="keyword">DO</span> event_body;</span><br><span class="line"></span><br><span class="line">schedule:</span><br><span class="line">    AT timestamp [+ INTERVAL interval] ...</span><br><span class="line">  | EVERY interval</span><br><span class="line">    [STARTS timestamp [+ INTERVAL interval] ...]</span><br><span class="line">    [ENDS timestamp [+ INTERVAL interval] ...]</span><br><span class="line"></span><br><span class="line">interval:</span><br><span class="line">    quantity &#123;YEAR | QUARTER | MONTH | DAY | HOUR | MINUTE |</span><br><span class="line">              WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE |</span><br><span class="line">              DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Command-Line Format</strong></td>
<td><code>--event-scheduler[=value]</code></td>
</tr>
<tr>
<td><strong>System Variable</strong></td>
<td><code>event_scheduler</code></td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>Global</td>
</tr>
<tr>
<td><strong>Dynamic</strong></td>
<td>Yes</td>
</tr>
<tr>
<td><strong>Type</strong></td>
<td>Enumeration</td>
</tr>
<tr>
<td><strong>Default Value</strong></td>
<td><code>OFF</code></td>
</tr>
<tr>
<td><strong>Valid Values</strong></td>
<td><code>ON、OFF、DISABLED</code></td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 参数 event_scheduler</span></span><br><span class="line">mysql&gt; set global event_scheduler = on;</span><br><span class="line">mysql&gt; show variables like 'event_scheduler';</span><br><span class="line">+<span class="comment">-----------------+-------+</span></span><br><span class="line">| Variable_name   | Value |</span><br><span class="line">+<span class="comment">-----------------+-------+</span></span><br><span class="line">| event_scheduler | ON    |</span><br><span class="line">+<span class="comment">-----------------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建事件</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">EVENT</span> Event_Archive_Daily</span><br><span class="line"><span class="keyword">ON</span> SCHEDULE EVERY <span class="number">1</span> <span class="keyword">DAY</span> STARTS <span class="string">'2019-11-01 02:00:00'</span></span><br><span class="line"><span class="keyword">ON</span> COMPLETION <span class="keyword">PRESERVE</span></span><br><span class="line"><span class="keyword">ENABLE</span></span><br><span class="line"><span class="keyword">DO</span> <span class="keyword">call</span> sp_archive();</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询事件</span></span><br><span class="line">mysql&gt; show create event Event_Archive_Daily\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Event: Event_Archive_Daily</span><br><span class="line">            sql_mode: STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER</span><br><span class="line">           time_zone: SYSTEM</span><br><span class="line">        <span class="keyword">Create</span> <span class="keyword">Event</span>: <span class="keyword">CREATE</span> DEFINER=<span class="string">`root`</span>@<span class="string">`localhost`</span> <span class="keyword">EVENT</span> <span class="string">`Event_Archive_Daily`</span> <span class="keyword">ON</span> SCHEDULE EVERY <span class="number">1</span> <span class="keyword">DAY</span> STARTS <span class="string">'2019-11-01 02:00:00'</span> <span class="keyword">ON</span> COMPLETION <span class="keyword">PRESERVE</span> <span class="keyword">ENABLE</span> <span class="keyword">DO</span> <span class="keyword">call</span> sp_archive()</span><br><span class="line">character_set_client: utf8</span><br><span class="line">collation_connection: utf8_general_ci</span><br><span class="line">  <span class="keyword">Database</span> <span class="keyword">Collation</span>: utf8_general_ci</span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 调优案例 · MES</title>
    <url>/blog/2019/10/31/mysql-tuning-mes/</url>
    <content><![CDATA[<h2 id="数据归档"><a href="#数据归档" class="headerlink" title="数据归档"></a>数据归档</h2><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><table>
<thead>
<tr>
<th>工厂号</th>
<th>工厂名</th>
<th>月结结束时间</th>
<th>数据库地址</th>
<th>端口</th>
</tr>
</thead>
<tbody><tr>
<td>1026</td>
<td>合肥波轮</td>
<td>2019/10/31 11:00</td>
<td>192.168.175.11</td>
<td>3306</td>
</tr>
<tr>
<td>1022</td>
<td>合肥空调</td>
<td>2019/10/31 12:00</td>
<td>10.142.201.254</td>
<td>3306</td>
</tr>
</tbody></table>
<h3 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h3><p>订单日期是 3 个月以前，且订单状态是已完成</p>
<table>
<thead>
<tr>
<th>表</th>
<th>说明</th>
<th>关联字段</th>
<th>总数据量</th>
<th>归档数据量</th>
</tr>
</thead>
<tbody><tr>
<td>base_production_order_t</td>
<td>订单表</td>
<td>Code</td>
<td>17627</td>
<td>5174</td>
</tr>
<tr>
<td>bns_pm_operation</td>
<td>条码表</td>
<td>WorkUser_MOrderCode</td>
<td>2656496</td>
<td>1530802</td>
</tr>
<tr>
<td>bns_pm_scanhistory_month</td>
<td>扫描记录表</td>
<td>Code</td>
<td>7392827</td>
<td>4370623</td>
</tr>
<tr>
<td>bns_qm_processtest</td>
<td>过程检验表</td>
<td>Code</td>
<td>7562577</td>
<td>4508488</td>
</tr>
<tr>
<td>bns_pm_prodprocess</td>
<td>工位过站记录表</td>
<td>Order_Code</td>
<td>….</td>
<td>….</td>
</tr>
<tr>
<td>bns_pm_barcodecode</td>
<td>物料绑定表</td>
<td>….</td>
<td>6614117</td>
<td>3967682</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> base_production_order_t <span class="keyword">where</span> EST &lt; <span class="keyword">now</span>()-<span class="built_in">interval</span> <span class="number">3</span> <span class="keyword">month</span> <span class="keyword">and</span> OrderStatus = <span class="string">'2'</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> bns_pm_barcodecode <span class="keyword">where</span> scan_time &lt; <span class="keyword">now</span>()-<span class="built_in">interval</span> <span class="number">3</span> <span class="keyword">month</span>;</span><br></pre></td></tr></table></figure>

<h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul>
<li><a href="https://huiraoo.github.io/blog/2019/07/05/mysql-toolkit/">安装 Percona Toolkit</a></li>
<li>创建归档表</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 归档表的表结构与原表一致，命名统一采用原表名_archive的格式</span></span><br><span class="line">bns_pm_operation_archive</span><br><span class="line">bns_pm_scanhistory_month_archive</span><br><span class="line">bns_qm_processtest_archive</span><br><span class="line">bns_pm_prodprocess_archive</span><br><span class="line">bns_pm_barcodecode_archive</span><br></pre></td></tr></table></figure>

<ul>
<li>开始归档</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 归档命令</span></span><br><span class="line">nohup pt-archiver --source h=xx,P=<span class="number">3306</span>,u=sre,p=<span class="string">'xx'</span>,D=<span class="string">'xx'</span>,t=bns_pm_barcodecode --charset=utf8 --dest  h=xx,P=<span class="number">3306</span>,u=sre,p=<span class="string">'xx'</span>,D=<span class="string">'xx'</span>,t=bns_pm_barcodecode_archive --where <span class="string">"scan_time &lt; now()-interval 3 month"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check &gt; myout.file <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure>

<ul>
<li>实时查看进度</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> information_schema;</span><br><span class="line"><span class="keyword">select</span> table_name,table_rows <span class="keyword">from</span> <span class="keyword">tables</span> <span class="keyword">where</span> TABLE_SCHEMA = <span class="string">'xx'</span> <span class="keyword">and</span> table_name=<span class="string">'xx'</span>;</span><br></pre></td></tr></table></figure>

<h4 id="bns-pm-barcodecode"><a href="#bns-pm-barcodecode" class="headerlink" title="bns_pm_barcodecode"></a>bns_pm_barcodecode</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开始归档</span></span><br><span class="line">nohup pt-archiver --source h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_barcodecode --charset=utf8 --dest  h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_barcodecode_archive --where <span class="string">"scan_time &lt; now()-interval 3 month"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check &gt; myout.file <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看归档进度</span></span><br><span class="line">use information_schema;</span><br><span class="line">select table_name,table_rows from tables where TABLE_SCHEMA = <span class="string">'cosmo_im_1026'</span> and table_name=<span class="string">'bns_pm_barcodecode_archive'</span>;</span><br></pre></td></tr></table></figure>

<h4 id="bns-pm-operation"><a href="#bns-pm-operation" class="headerlink" title="bns_pm_operation"></a>bns_pm_operation</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开始归档</span></span><br><span class="line">nohup pt-archiver --source h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_operation --charset=utf8 --dest  h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_operation_archive --where <span class="string">"WorkUser_MOrderCode IN (select Code from base_production_order_t where EST &lt; now()-interval 3 month and OrderStatus = '2')"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check &gt; myout1.file <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看归档进度</span></span><br><span class="line">use information_schema;</span><br><span class="line">select table_name,table_rows from tables where TABLE_SCHEMA = <span class="string">'cosmo_im_1026'</span> and table_name=<span class="string">'bns_pm_operation_archive'</span>;</span><br></pre></td></tr></table></figure>

<h4 id="bns-pm-scanhistory-month"><a href="#bns-pm-scanhistory-month" class="headerlink" title="bns_pm_scanhistory_month"></a>bns_pm_scanhistory_month</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开始归档</span></span><br><span class="line">nohup pt-archiver --source h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_scanhistory_month --charset=utf8 --dest  h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_scanhistory_month_archive --where <span class="string">"Code IN (select Code from base_production_order_t where EST &lt; now()-interval 3 month and OrderStatus = '2')"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check &gt; myout2.file <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看归档进度</span></span><br><span class="line">use information_schema;</span><br><span class="line">select table_name,table_rows from tables where TABLE_SCHEMA = <span class="string">'cosmo_im_1026'</span> and table_name=<span class="string">'bns_pm_scanhistory_month_archive'</span>;</span><br></pre></td></tr></table></figure>

<h4 id="bns-qm-processtest"><a href="#bns-qm-processtest" class="headerlink" title="bns_qm_processtest"></a>bns_qm_processtest</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开始归档</span></span><br><span class="line">nohup pt-archiver --source h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_qm_processtest --charset=utf8 --dest  h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_qm_processtest_archive --where <span class="string">"Code IN (select Code from base_production_order_t where EST &lt; now()-interval 3 month and OrderStatus = '2')"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check &gt; myout3.file <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看归档进度</span></span><br><span class="line">use information_schema;</span><br><span class="line">select table_name,table_rows from tables where TABLE_SCHEMA = <span class="string">'cosmo_im_1026'</span> and table_name=<span class="string">'bns_qm_processtest_archive'</span>;</span><br></pre></td></tr></table></figure>

<h4 id="bns-pm-prodprocess"><a href="#bns-pm-prodprocess" class="headerlink" title="bns_pm_prodprocess"></a>bns_pm_prodprocess</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开始归档</span></span><br><span class="line">nohup pt-archiver --source h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_prodprocess --charset=utf8 --dest  h=<span class="number">192.168</span>.<span class="number">175.11</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'sre@@p$i'</span>,D=<span class="string">'cosmo_im_1026'</span>,t=bns_pm_prodprocess_archive --where <span class="string">"Order_Code IN (select Code from base_production_order_t where EST &lt; now()-interval 3 month and OrderStatus = '2')"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check &gt; myout4.file <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看归档进度</span></span><br><span class="line">use information_schema;</span><br><span class="line">select table_name,table_rows from tables where TABLE_SCHEMA = <span class="string">'cosmo_im_1026'</span> and table_name=<span class="string">'bns_pm_prodprocess_archive'</span>;</span><br></pre></td></tr></table></figure>

<h3 id="设置自动归档"><a href="#设置自动归档" class="headerlink" title="设置自动归档"></a>设置自动归档</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 存储过程</span></span><br><span class="line">DELIMITER $$ </span><br><span class="line"></span><br><span class="line">DROP PROCEDURE <span class="keyword">IF</span> EXISTS sp_archive$$ </span><br><span class="line">CREATE PROCEDURE sp_archive()</span><br><span class="line"><span class="keyword">BEGIN</span> 	</span><br><span class="line">	INSERT INTO bns_pm_barcodecode_archive SELECT * FROM bns_pm_barcodecode WHERE </span><br><span class="line">	scan_time &lt; now() - interval <span class="number">3</span> month;</span><br><span class="line">	DELETE FROM bns_pm_barcodecode WHERE scan_time &lt; now() - interval <span class="number">3</span> month;</span><br><span class="line"><span class="keyword">END</span> $$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 事件</span></span><br><span class="line">CREATE EVENT Event_Archive_Daily</span><br><span class="line">ON SCHEDULE EVERY <span class="number">1</span> DAY STARTS <span class="string">'2019-11-01 02:00:00'</span></span><br><span class="line">ON COMPLETION PRESERVE</span><br><span class="line">ENABLE</span><br><span class="line"><span class="keyword">DO</span> call sp_archive();</span><br></pre></td></tr></table></figure>

<h2 id="慢-SQL-优化"><a href="#慢-SQL-优化" class="headerlink" title="慢 SQL 优化"></a>慢 SQL 优化</h2><p><strong>工厂</strong>：黄岛滚筒</p>
<p><strong>数据库</strong>：10.180.129.24:3306</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 慢SQL1</span></span><br><span class="line"><span class="keyword">UPDATE</span> bns_pm_operation a</span><br><span class="line"><span class="keyword">SET</span> a.T_WMS_1 = <span class="string">'1'</span></span><br><span class="line"><span class="keyword">WHERE</span> a.Create_Date &lt; <span class="string">'2019-04-01'</span></span><br><span class="line"><span class="keyword">AND</span> a.T_WMS_1 = <span class="string">'0'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢SQL2</span></span><br><span class="line"><span class="keyword">SELECT</span> ZYH</span><br><span class="line"><span class="keyword">FROM</span> t_mes_scan</span><br><span class="line"><span class="keyword">WHERE</span> PPLACE = <span class="string">'一线总装箱体上线'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> REALDATE <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 视图</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">	t.ID <span class="keyword">AS</span> N_ID,</span><br><span class="line">	<span class="keyword">ifnull</span>( t.WorkUser_RandomBarCode, t.WorkUser_BarCode ) <span class="keyword">AS</span> SERN,</span><br><span class="line">	t.WorkUser_MOrderCode <span class="keyword">AS</span> ORDER_ID,</span><br><span class="line">	t.Work_OperationOutMainItemCode <span class="keyword">AS</span> ZYH,</span><br><span class="line">	t.WorkUser_RightMostItemName <span class="keyword">AS</span> XH_ID,</span><br><span class="line">	t.WorkUser_LineName <span class="keyword">AS</span> LINENAME,</span><br><span class="line">	t3.Work_Cell_Desc <span class="keyword">AS</span> PPLACE,</span><br><span class="line">	t2.ScanTime <span class="keyword">AS</span> REALDATE,</span><br><span class="line">	t2.User_Code <span class="keyword">AS</span> YG_ID,</span><br><span class="line">	t2.Create_Date <span class="keyword">AS</span> CREATEDATE,</span><br><span class="line">	t4.Team_Code <span class="keyword">AS</span> Team_Code,</span><br><span class="line">	t4.Team_Desc <span class="keyword">AS</span> Team_Desc,</span><br><span class="line">	t5.Shift_Code <span class="keyword">AS</span> Shift_Code,</span><br><span class="line">	t5.Shift_Desc <span class="keyword">AS</span> Shift_Desc </span><br><span class="line"><span class="keyword">FROM</span> bns_pm_operation t </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> bns_pm_scanhistory_month t2 <span class="keyword">ON</span> t.WorkUser_BarCode = t2.WorkUser_BarCode</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> pm_work_cells_t t3 <span class="keyword">ON</span> t2.Work_Cell_Code = t3.Work_Cell_Code </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> base_team_t t4 <span class="keyword">ON</span> t2.Team_Code = t4.Team_Code</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> base_shifts_t t5 <span class="keyword">ON</span> t2.Shift_Code = t5.Shift_Code </span><br><span class="line"><span class="keyword">WHERE</span> t2.Type = <span class="number">0</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> t2.ScanTime</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 存储过程</title>
    <url>/blog/2019/10/31/mysql-procedure/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/stored-routines.html" target="_blank" rel="noopener">存储过程</a>处理的是一组 SQL 语句，且没有返回值。</p>
<p><strong>优点</strong></p>
<ul>
<li>简单：把单条 SQL 封装起来，简化复杂的操作。</li>
<li>安全</li>
<li>高性能</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>移植困难，不同数据库的语法差别很大</li>
<li>不易扩展，把过多业务逻辑写在存储过程不好维护，不利于分层管理，容易混乱</li>
</ul>
<p><strong>语法</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建</span></span><br><span class="line"><span class="keyword">CREATE</span></span><br><span class="line">    [DEFINER = <span class="keyword">user</span>]</span><br><span class="line">    <span class="keyword">PROCEDURE</span> sp_name ([proc_parameter[,...]])</span><br><span class="line">    [characteristic ...] routine_body</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span></span><br><span class="line">    [DEFINER = <span class="keyword">user</span>]</span><br><span class="line">    <span class="keyword">FUNCTION</span> sp_name ([func_parameter[,...]])</span><br><span class="line">    <span class="keyword">RETURNS</span> <span class="keyword">type</span></span><br><span class="line">    [characteristic ...] routine_body</span><br><span class="line"></span><br><span class="line">proc_parameter:</span><br><span class="line">    [ <span class="keyword">IN</span> | <span class="keyword">OUT</span> | INOUT ] param_name <span class="keyword">type</span></span><br><span class="line"></span><br><span class="line">func_parameter:</span><br><span class="line">    param_name <span class="keyword">type</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span>:</span><br><span class="line">    <span class="keyword">Any</span> valid MySQL <span class="keyword">data</span> <span class="keyword">type</span></span><br><span class="line"></span><br><span class="line">characteristic:</span><br><span class="line">    <span class="keyword">COMMENT</span> <span class="string">'string'</span></span><br><span class="line">  | <span class="keyword">LANGUAGE</span> <span class="keyword">SQL</span></span><br><span class="line">  | [<span class="keyword">NOT</span>] <span class="keyword">DETERMINISTIC</span></span><br><span class="line">  | &#123; CONTAINS <span class="keyword">SQL</span> | <span class="keyword">NO</span> <span class="keyword">SQL</span> | <span class="keyword">READS</span> <span class="keyword">SQL</span> <span class="keyword">DATA</span> | MODIFIES <span class="keyword">SQL</span> <span class="keyword">DATA</span> &#125;</span><br><span class="line">  | <span class="keyword">SQL</span> <span class="keyword">SECURITY</span> &#123; DEFINER | INVOKER &#125;</span><br><span class="line"></span><br><span class="line">routine_body:</span><br><span class="line">    Valid <span class="keyword">SQL</span> routine <span class="keyword">statement</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> proc_name [characteristic ...]</span><br><span class="line"></span><br><span class="line">characteristic:</span><br><span class="line">    <span class="keyword">COMMENT</span> <span class="string">'string'</span></span><br><span class="line">  | <span class="keyword">LANGUAGE</span> <span class="keyword">SQL</span></span><br><span class="line">  | &#123; CONTAINS <span class="keyword">SQL</span> | <span class="keyword">NO</span> <span class="keyword">SQL</span> | <span class="keyword">READS</span> <span class="keyword">SQL</span> <span class="keyword">DATA</span> | MODIFIES <span class="keyword">SQL</span> <span class="keyword">DATA</span> &#125;</span><br><span class="line">  | <span class="keyword">SQL</span> <span class="keyword">SECURITY</span> &#123; DEFINER | INVOKER &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line"><span class="keyword">DROP</span> &#123;<span class="keyword">PROCEDURE</span> | <span class="keyword">FUNCTION</span>&#125; [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] sp_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line"><span class="keyword">CALL</span> sp_name([parameter[,...]])</span><br><span class="line"><span class="keyword">CALL</span> sp_name[()]</span><br></pre></td></tr></table></figure>

<p><strong>权限</strong>：<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-routine" target="_blank" rel="noopener"><code>CREATE ROUTINE</code></a> 、<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_alter-routine" target="_blank" rel="noopener"><code>ALTER ROUTINE</code></a> 、<a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_execute" target="_blank" rel="noopener"><code>EXECUTE</code></a></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; delimiter //</span><br><span class="line"></span><br><span class="line">mysql&gt; CREATE PROCEDURE simpleproc (OUT <span class="keyword">param</span>1 INT)</span><br><span class="line">    -&gt; <span class="keyword">BEGIN</span></span><br><span class="line">    -&gt;   SELECT COUNT(*) INTO <span class="keyword">param</span>1 FROM t;</span><br><span class="line">    -&gt; <span class="keyword">END</span>//</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; delimiter ;</span><br><span class="line"></span><br><span class="line">mysql&gt; CALL simpleproc(@a);</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT @a;</span><br><span class="line">+------+</span><br><span class="line">| @a   |</span><br><span class="line">+------+</span><br><span class="line">| <span class="number">3</span>    |</span><br><span class="line">+------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 视图</title>
    <url>/blog/2019/10/30/mysql-view/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>视图</strong>是虚拟的表，与包含数据的表不一样，视图只包含使用时动态检索数据的查询 <code>SQL</code>。一般情况下，应该将视图用于检索（<code>SELETE</code>），而不用于更新（<code>INSRTE</code>、<code>UPDATE</code>、<code>DELETE</code>）。</p>
<p><strong>优点</strong></p>
<ul>
<li>简化，隐藏复杂的 <code>SQL</code> ，简化复杂 <code>SQL</code> 的数据处理，还可以重新格式化数据</li>
<li>安全，保护数据，可以给用户授予表的特定部分的访问权限而不是整个表的访问权限</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>性能相对较差</li>
</ul>
<blockquote>
<p>性能问题：因为视图不包含数据，所以每次使用视图时，都必须处理查询执行时所需的任何一个检索。如果你用多个联结和过滤创建了复杂的视图或者嵌套了视图，就会发现性能下降得很厉害，主要原因是<strong>不能建立索引</strong>。</p>
</blockquote>
<h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><ul>
<li><code>CREATE VIEW</code>：创建视图</li>
<li><code>SHOW VIEW</code>：查看视图</li>
</ul>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [ALGORITHM = &#123;<span class="keyword">MERGE</span> | TEMPTABLE | UNDEFINED&#125;]</span><br><span class="line"><span class="keyword">VIEW</span> [database_name].[view_name] </span><br><span class="line"><span class="keyword">AS</span> [<span class="keyword">SELECT</span> <span class="keyword">statement</span>]</span><br></pre></td></tr></table></figure>

<p>MySQL 有三种视图策略, 分别是 <code>MERGE</code>， <code>TEMPTABLE</code>， <code>UNDEFINED</code></p>
<ul>
<li><code>MERGE</code>，先将输入的查询语句和视图的声明语句进行合并，然后执行合并后的语句并返回。</li>
<li><code>TEMPTABLE</code>，先基于视图的声明创建一张 <code>temporary table</code>，当输入查询语句时会直接查询这张 <code>temporary table</code>，<code>TEMPTABLE</code> 的效率要比 <code>MERGE</code> 低。</li>
<li><code>UNDEFINED</code>，如果创建视图的时候不指定策略，默认使用此策略。<code>UNDEFINED</code> 会自动选择使用上述两种策略中的一个，优先选择 <code>MERGE</code> 策略，无法使用则转为 <code>TEMPTABLE</code> 策略。</li>
</ul>
<h3 id="显示视图"><a href="#显示视图" class="headerlink" title="显示视图"></a>显示视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询单个视图</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">view</span> view_name;</span><br><span class="line"></span><br><span class="line">mysql&gt; show create view cosmo_zzwk_2048.yangjisaomiao_view\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                View: yangjisaomiao_view</span><br><span class="line">         <span class="keyword">Create</span> <span class="keyword">View</span>: <span class="keyword">CREATE</span> ALGORITHM=UNDEFINED DEFINER=<span class="string">`wms`</span>@<span class="string">`%`</span> <span class="keyword">SQL</span> <span class="keyword">SECURITY</span> DEFINER <span class="keyword">VIEW</span> <span class="string">`cosmo_zzwk_2048`</span>.<span class="string">`yangjisaomiao_view`</span> <span class="keyword">AS</span> <span class="keyword">select</span> <span class="keyword">distinct</span> <span class="string">`a`</span>.<span class="string">`ORDER_NO`</span> <span class="keyword">AS</span> <span class="string">`order_id`</span>,<span class="string">`a`</span>.<span class="string">`OUT_CODE`</span> <span class="keyword">AS</span> <span class="string">`sm_id`</span>,<span class="string">`a`</span>.<span class="string">`BARCODE`</span> <span class="keyword">AS</span> <span class="string">`sern`</span>,<span class="string">`a`</span>.<span class="string">`SCAN_TIME`</span> <span class="keyword">AS</span> <span class="string">`scandate`</span>,<span class="string">`a`</span>.<span class="string">`SCANED_BY`</span> <span class="keyword">AS</span> <span class="string">`scanuser`</span>,<span class="string">'10.138.228.165'</span> <span class="keyword">AS</span> <span class="string">`database_ip`</span>,<span class="string">'90J0'</span> <span class="keyword">AS</span> <span class="string">`SAP_Plant`</span>,<span class="string">'黄岛智慧厨电'</span> <span class="keyword">AS</span> <span class="string">`sap_description`</span> <span class="keyword">from</span> <span class="string">`cosmo_zzwk_2048`</span>.<span class="string">`ods_pro_yj_sn`</span> <span class="string">`a`</span> <span class="keyword">where</span> (<span class="string">`a`</span>.<span class="string">`SCAN_TIME`</span> &gt;= (<span class="keyword">curdate</span>() - <span class="built_in">interval</span> <span class="number">30</span> <span class="keyword">day</span>))</span><br><span class="line">character_set_client: utf8</span><br><span class="line">collation_connection: utf8_general_ci</span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询所有视图</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> information_schema.views;</span><br></pre></td></tr></table></figure>

<h3 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> view_name;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 调优案例 · WMS</title>
    <url>/blog/2019/10/30/mysql-tuning-wms/</url>
    <content><![CDATA[<h2 id="实例信息"><a href="#实例信息" class="headerlink" title="实例信息"></a>实例信息</h2><table>
<thead>
<tr>
<th>实例</th>
<th>角色</th>
<th>版本</th>
<th>业务库</th>
<th>数据量</th>
</tr>
</thead>
<tbody><tr>
<td>10.138.98.20:3306</td>
<td>Master</td>
<td>5.7.23</td>
<td>cosmo_base  (5)</td>
<td>82.68G</td>
</tr>
<tr>
<td>10.138.98.21:3306</td>
<td>Slave</td>
<td>5.7.23</td>
<td>….</td>
<td>….</td>
</tr>
<tr>
<td><strong>10.138.228.40:3306</strong></td>
<td>Master</td>
<td>5.6.39</td>
<td>cosmo_wms_xx  (23)</td>
<td>139.5G</td>
</tr>
<tr>
<td>10.138.228.41:3306</td>
<td>Slave</td>
<td>5.6.39</td>
<td>….</td>
<td>….</td>
</tr>
<tr>
<td>10.138.228.43:3306</td>
<td>Master</td>
<td>5.6.39</td>
<td>cosmo_wms_xx  (23)</td>
<td>….</td>
</tr>
<tr>
<td>10.138.42.94:3306</td>
<td>Master</td>
<td>10.1.21</td>
<td>cosmo_wms_xx  (9)</td>
<td>….</td>
</tr>
<tr>
<td><strong>10.138.232.165:3306</strong></td>
<td>Master</td>
<td>5.6.39</td>
<td>cosmo_xx_xx  (30)</td>
<td>155.9G</td>
</tr>
<tr>
<td>10.138.232.164:3306</td>
<td>Slave</td>
<td>5.6.39</td>
<td>….</td>
<td>….</td>
</tr>
<tr>
<td>10.138.232.166:3306</td>
<td>Slave</td>
<td>5.6.39</td>
<td>….</td>
<td>….</td>
</tr>
<tr>
<td><strong>10.133.7.31:3306</strong></td>
<td>Master</td>
<td>5.7.23</td>
<td>epg_xx  (19)</td>
<td>66.6G</td>
</tr>
</tbody></table>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 10.138.98.20:3306按库大小排序</span></span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| table_schema       | data_size | index_size |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| cosmo_base         | <span class="number">45.28</span>GB   | <span class="number">37.38</span>GB    |</span><br><span class="line">| cosmo_wms          | <span class="number">0.17</span>GB    | <span class="number">0.03</span>GB     |</span><br><span class="line">| xwsy               | <span class="number">0.09</span>GB    | <span class="number">0.03</span>GB     |</span><br><span class="line">| cosmo_epg_5001     | <span class="number">0.02</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| xwsytest           | <span class="number">0.01</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line"><span class="number">9</span> rows <span class="keyword">in</span> set, <span class="number">28</span> warnings (<span class="number">0.30</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.138.228.40:3306按库大小排序</span></span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| table_schema       | data_size | index_size |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| cosmo_wms_1006     | <span class="number">17.48</span>GB   | <span class="number">4.73</span>GB     |</span><br><span class="line">| cosmo_wms_1011     | <span class="number">17.00</span>GB   | <span class="number">6.16</span>GB     |</span><br><span class="line">| cosmo_wms_1007     | <span class="number">11.75</span>GB   | <span class="number">7.36</span>GB     |</span><br><span class="line">| cosmo_wms_1013     | <span class="number">9.78</span>GB    | <span class="number">4.60</span>GB     |</span><br><span class="line">| cosmo_wms_1009     | <span class="number">7.82</span>GB    | <span class="number">4.17</span>GB     |</span><br><span class="line">| cosmo_wms_1010     | <span class="number">6.52</span>GB    | <span class="number">3.48</span>GB     |</span><br><span class="line">| cosmo_wms_1012     | <span class="number">5.24</span>GB    | <span class="number">4.32</span>GB     |</span><br><span class="line">| cosmo_wms_1018     | <span class="number">3.39</span>GB    | <span class="number">0.88</span>GB     |</span><br><span class="line">| cosmo_wms_1019     | <span class="number">3.31</span>GB    | <span class="number">0.66</span>GB     |</span><br><span class="line">| cosmo_wms_2012     | <span class="number">2.77</span>GB    | <span class="number">0.61</span>GB     |</span><br><span class="line">| cosmo_wms_2015     | <span class="number">2.45</span>GB    | <span class="number">0.46</span>GB     |</span><br><span class="line">| cosmo_wms_1008     | <span class="number">1.68</span>GB    | <span class="number">1.46</span>GB     |</span><br><span class="line">| cosmo_wms_1015     | <span class="number">1.48</span>GB    | <span class="number">0.68</span>GB     |</span><br><span class="line">| cosmo_wms_2008     | <span class="number">1.31</span>GB    | <span class="number">0.29</span>GB     |</span><br><span class="line">| cosmo_wms_2009     | <span class="number">1.23</span>GB    | <span class="number">0.21</span>GB     |</span><br><span class="line">| cosmo_wms_2005     | <span class="number">1.12</span>GB    | <span class="number">0.23</span>GB     |</span><br><span class="line">| cosmo_wms_2007     | <span class="number">1.04</span>GB    | <span class="number">0.22</span>GB     |</span><br><span class="line">| cosmo_wms_2010     | <span class="number">0.87</span>GB    | <span class="number">0.18</span>GB     |</span><br><span class="line">| cosmo_wms_2065     | <span class="number">0.76</span>GB    | <span class="number">0.30</span>GB     |</span><br><span class="line">| SPC_COM            | <span class="number">0.48</span>GB    | <span class="number">0.29</span>GB     |</span><br><span class="line">| cosmo_wms_2006     | <span class="number">0.27</span>GB    | <span class="number">0.05</span>GB     |</span><br><span class="line">| cosmo_wms_2066     | <span class="number">0.04</span>GB    | <span class="number">0.05</span>GB     |</span><br><span class="line">| cosmo_wms_3001     | <span class="number">0.02</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line"><span class="number">27</span> rows <span class="keyword">in</span> set (<span class="number">3.19</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.138.228.43:3306按库大小排序</span></span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| table_schema       | data_size | index_size |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| cosmo_wms_1031     | <span class="number">13.06</span>GB   | <span class="number">4.44</span>GB     |</span><br><span class="line">| cosmo_wms_1026     | <span class="number">9.78</span>GB    | <span class="number">4.22</span>GB     |</span><br><span class="line">| cosmo_wms_1022     | <span class="number">5.39</span>GB    | <span class="number">3.57</span>GB     |</span><br><span class="line">| cosmo_wms_2019     | <span class="number">5.34</span>GB    | <span class="number">1.68</span>GB     |</span><br><span class="line">| cosmo_wms_1028     | <span class="number">4.92</span>GB    | <span class="number">2.38</span>GB     |</span><br><span class="line">| cosmo_wms_1029     | <span class="number">4.20</span>GB    | <span class="number">2.09</span>GB     |</span><br><span class="line">| cosmo_wms_1025     | <span class="number">3.83</span>GB    | <span class="number">2.95</span>GB     |</span><br><span class="line">| cosmo_wms_1032     | <span class="number">3.67</span>GB    | <span class="number">1.95</span>GB     |</span><br><span class="line">| cosmo_wms_1030     | <span class="number">2.96</span>GB    | <span class="number">2.00</span>GB     |</span><br><span class="line">| cosmo_wms_2025     | <span class="number">2.79</span>GB    | <span class="number">0.49</span>GB     |</span><br><span class="line">| cosmo_wms_2026     | <span class="number">2.52</span>GB    | <span class="number">0.36</span>GB     |</span><br><span class="line">| cosmo_wms_1027     | <span class="number">2.47</span>GB    | <span class="number">1.01</span>GB     |</span><br><span class="line">| cosmo_wms_2018     | <span class="number">1.96</span>GB    | <span class="number">0.52</span>GB     |</span><br><span class="line">| cosmo_wms_1024     | <span class="number">1.57</span>GB    | <span class="number">1.30</span>GB     |</span><br><span class="line">| cosmo_wms_2023     | <span class="number">1.02</span>GB    | <span class="number">0.26</span>GB     |</span><br><span class="line">| cosmo_wms_2020     | <span class="number">0.78</span>GB    | <span class="number">0.19</span>GB     |</span><br><span class="line">| cosmo_wms_2022     | <span class="number">0.77</span>GB    | <span class="number">0.18</span>GB     |</span><br><span class="line">| cosmo_wms_2021     | <span class="number">0.44</span>GB    | <span class="number">0.17</span>GB     |</span><br><span class="line">| cosmo_wms_1023     | <span class="number">0.27</span>GB    | <span class="number">0.09</span>GB     |</span><br><span class="line">| cosmo_wms_2024     | <span class="number">0.26</span>GB    | <span class="number">0.12</span>GB     |</span><br><span class="line">| cosmo_wms_2027     | <span class="number">0.14</span>GB    | <span class="number">0.08</span>GB     |</span><br><span class="line">| cosmo_wms          | <span class="number">0.12</span>GB    | <span class="number">0.07</span>GB     |</span><br><span class="line">| cosmo_wms_2028     | <span class="number">0.02</span>GB    | <span class="number">0.03</span>GB     |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line"><span class="number">27</span> rows <span class="keyword">in</span> set (<span class="number">3.19</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.138.42.94:3306按库大小排序</span></span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| table_schema       | data_size | index_size |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| cosmo_wms_uniall   | <span class="number">8.21</span>GB    | <span class="number">1.36</span>GB     |</span><br><span class="line">| cosmo_wms          | <span class="number">6.10</span>GB    | <span class="number">4.27</span>GB     |</span><br><span class="line">| cosmo_wms_1002     | <span class="number">4.12</span>GB    | <span class="number">3.46</span>GB     |</span><br><span class="line">| cosmo_base         | <span class="number">3.20</span>GB    | <span class="number">1.57</span>GB     |</span><br><span class="line">| cosmo_wms_1005     | <span class="number">1.51</span>GB    | <span class="number">1.03</span>GB     |</span><br><span class="line">| cosmo_wms_test     | <span class="number">0.75</span>GB    | <span class="number">1.00</span>GB     |</span><br><span class="line">| cosmo_wms_testn    | <span class="number">0.48</span>GB    | <span class="number">0.31</span>GB     |</span><br><span class="line">| cosmo_wms_2001     | <span class="number">0.39</span>GB    | <span class="number">0.10</span>GB     |</span><br><span class="line">| cosmo_wms_2002     | <span class="number">0.14</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line"><span class="number">13</span> rows <span class="keyword">in</span> set, <span class="number">1</span> warning (<span class="number">0.63</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.138.232.165:3306按库大小排序</span></span><br><span class="line">+------------------------+-----------+------------+</span><br><span class="line">| table_schema           | data_size | index_size |</span><br><span class="line">+------------------------+-----------+------------+</span><br><span class="line">| cosmo_zzkt_1046        | <span class="number">30.88</span>GB   | <span class="number">1.80</span>GB     |</span><br><span class="line">| cosmo_hdgt_1003        | <span class="number">25.19</span>GB   | <span class="number">3.87</span>GB     |</span><br><span class="line">| cosmo_fsgt_1045        | <span class="number">23.05</span>GB   | <span class="number">0.87</span>GB     |</span><br><span class="line">| cosmo_hdzk             | <span class="number">20.03</span>GB   | <span class="number">0.69</span>GB     |</span><br><span class="line">| cosmo_xyyj             | <span class="number">18.18</span>GB   | <span class="number">3.63</span>GB     |</span><br><span class="line">| cosmo_jndr_1017        | <span class="number">5.58</span>GB    | <span class="number">3.21</span>GB     |</span><br><span class="line">| cosmo_zysj             | <span class="number">2.39</span>GB    | <span class="number">1.73</span>GB     |</span><br><span class="line">| cosmo_szjsj_1049       | <span class="number">1.87</span>GB    | <span class="number">0.85</span>GB     |</span><br><span class="line">| cosmo_tjbl_1021        | <span class="number">1.45</span>GB    | <span class="number">0.81</span>GB     |</span><br><span class="line">| cosmo_szjsj_1048       | <span class="number">1.35</span>GB    | <span class="number">0.61</span>GB     |</span><br><span class="line">| cosmo_jzzjc_2064       | <span class="number">1.01</span>GB    | <span class="number">0.28</span>GB     |</span><br><span class="line">| cosmo_zddr_1057        | <span class="number">1.00</span>GB    | <span class="number">0.12</span>GB     |</span><br><span class="line">| cosmo_lycd_1014        | <span class="number">0.92</span>GB    | <span class="number">0.05</span>GB     |</span><br><span class="line">| cosmo_wms              | <span class="number">0.78</span>GB    | <span class="number">0.52</span>GB     |</span><br><span class="line">| cosmo_wms_penghai      | <span class="number">0.52</span>GB    | <span class="number">0.47</span>GB     |</span><br><span class="line">| cosmo_zzktwk_ruig_2053 | <span class="number">0.49</span>GB    | <span class="number">0.17</span>GB     |</span><br><span class="line">| cosmo_zzktwk_2054      | <span class="number">0.16</span>GB    | <span class="number">0.07</span>GB     |</span><br><span class="line">| cosmo_fsgtwk_2047      | <span class="number">0.14</span>GB    | <span class="number">0.05</span>GB     |</span><br><span class="line">| cosmo_zzwk_2048        | <span class="number">0.12</span>GB    | <span class="number">0.05</span>GB     |</span><br><span class="line">| cosmo_plat             | <span class="number">0.12</span>GB    | <span class="number">0.06</span>GB     |</span><br><span class="line">| cosmo_jzkg_2056        | <span class="number">0.11</span>GB    | <span class="number">0.05</span>GB     |</span><br><span class="line">| cosmo_zysjwk_jad       | <span class="number">0.09</span>GB    | <span class="number">0.05</span>GB     |</span><br><span class="line">| cosmo_zysjwk_2085      | <span class="number">0.04</span>GB    | <span class="number">0.01</span>GB     |</span><br><span class="line">| cosmo_qddz_1055        | <span class="number">0.03</span>GB    | <span class="number">0.02</span>GB     |</span><br><span class="line">| cosmo_zysjwk_bw        | <span class="number">0.02</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| cosmo_xyyjwk           | <span class="number">0.02</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| cosmo_eng_1414         | <span class="number">0.01</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| cosmo_penghai_1215     | <span class="number">0.01</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| cosmo_zdbx_1058        | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| cosmo_plat_penghai     | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">+------------------------+-----------+------------+</span><br><span class="line"><span class="number">33</span> rows <span class="keyword">in</span> set, <span class="number">20</span> warnings (<span class="number">6.91</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.133.7.31:3306按库大小排序</span></span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| table_schema       | data_size | index_size |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line">| cosmo_epg_5001     | <span class="number">9.37</span>GB    | <span class="number">4.27</span>GB     |</span><br><span class="line">| cosmo_cqjm_5006    | <span class="number">7.32</span>GB    | <span class="number">3.72</span>GB     |</span><br><span class="line">| epg_hdme_5004      | <span class="number">6.64</span>GB    | <span class="number">3.31</span>GB     |</span><br><span class="line">| epg_hdzn_5015      | <span class="number">5.85</span>GB    | <span class="number">3.56</span>GB     |</span><br><span class="line">| epg_hfsj_5007      | <span class="number">5.44</span>GB    | <span class="number">2.64</span>GB     |</span><br><span class="line">| epg_jzbp_5002      | <span class="number">4.44</span>GB    | <span class="number">1.65</span>GB     |</span><br><span class="line">| cosmo_dljm_5005    | <span class="number">3.24</span>GB    | <span class="number">1.08</span>GB     |</span><br><span class="line">| epg_jnjm_5003      | <span class="number">2.63</span>GB    | <span class="number">0.64</span>GB     |</span><br><span class="line">| cosmo_wms          | <span class="number">0.30</span>GB    | <span class="number">0.13</span>GB     |</span><br><span class="line">| cosmo_plat         | <span class="number">0.16</span>GB    | <span class="number">0.07</span>GB     |</span><br><span class="line">| epg_tjwk_2095      | <span class="number">0.01</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_whzn_5012      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_cqzn_5009      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_hfzn_5013      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_qdzn_5016      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_sdbp_5011      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_whdk_5014      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_zzzn_5010      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">| epg_sddz_5008      | <span class="number">0.00</span>GB    | <span class="number">0.00</span>GB     |</span><br><span class="line">+--------------------+-----------+------------+</span><br><span class="line"><span class="number">23</span> rows <span class="keyword">in</span> set (<span class="number">0.90</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wms:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    initialSize:</span> <span class="number">50</span></span><br><span class="line"><span class="attr">    maxActive:</span> <span class="number">400</span></span><br><span class="line"><span class="attr">    maxIdle:</span> <span class="number">50</span></span><br><span class="line"><span class="attr">    minIdle:</span> <span class="number">50</span></span><br><span class="line"><span class="attr">    maxWait:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">    ds1:</span></span><br><span class="line"><span class="attr">      driver:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">jdbc:mysql://10.138.228.165:3306?juseUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">wms</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">    ds2:</span></span><br><span class="line"><span class="attr">      driver:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">jdbc:mysql://10.133.7.31:3306?useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">cosmowms_epg</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">    ds3:</span></span><br><span class="line"><span class="attr">      driver:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">jdbc:mysql://10.138.228.165:3306/cosmo_hdzk?useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">wms</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">xx</span></span><br><span class="line"><span class="attr">    ds4:</span></span><br><span class="line"><span class="attr">      driver:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">      url:</span> <span class="attr">jdbc:mysql://10.138.228.165:3306/cosmo_hdzkwk?useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">wms</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">xx</span></span><br></pre></td></tr></table></figure>

<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><ul>
<li>大量使用视图</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-30-161930.png" alt></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>Java 笔记</title>
    <url>/blog/2019/10/29/java/</url>
    <content><![CDATA[<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-20-173000.jpg" alt></p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="https://huiraoo.github.io/blog/2019/11/18/java-ide/">Java · 开发环境</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/11/18/java-basic-programming-structure/">Java · 基本程序设计</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/11/20/java-object-and-class/">Java · 高级特性</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/11/25/java-frame-mybatis/">Java · 框架 · MyBatis</a></li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://www.jianshu.com/p/2d6206e77cdd" target="_blank" rel="noopener">推荐书</a></li>
<li><a href="https://gitee.com/explore/all?lang=Java" target="_blank" rel="noopener">代码</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 配置参数 · sql_mode</title>
    <url>/blog/2019/10/29/mysql-config-sql-mode/</url>
    <content><![CDATA[<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p><strong><a href="https://dev.mysql.com/doc/refman/5.6/en/sql-mode.html#sql-mode-strict" target="_blank" rel="noopener">sql_mode</a></strong>：它定义了 MySQL 应该支持的 <code>SQL</code> 模式，对数据的校验等。</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Command-Line Format</strong></td>
<td><code>--sql-mode=name</code></td>
</tr>
<tr>
<td><strong>System Variable</strong></td>
<td><code>sql_mode</code></td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>Global, Session</td>
</tr>
<tr>
<td><strong>Dynamic</strong></td>
<td>Yes</td>
</tr>
<tr>
<td><strong>Type</strong></td>
<td>Set</td>
</tr>
<tr>
<td><strong>Default Value</strong> (&gt;= 5.7.8)</td>
<td><code>ONLY_FULL_GROUP_BY STRICT_TRANS_TABLES NO_ZERO_IN_DATE NO_ZERO_DATE ERROR_FOR_DIVISION_BY_ZERO NO_AUTO_CREATE_USER NO_ENGINE_SUBSTITUTION</code></td>
</tr>
<tr>
<td><strong>Default Value</strong> (5.7.7)</td>
<td><code>ONLY_FULL_GROUP_BY STRICT_TRANS_TABLES NO_AUTO_CREATE_USER NO_ENGINE_SUBSTITUTION</code></td>
</tr>
<tr>
<td><strong>Default Value</strong> (&gt;= 5.7.5, &lt;= 5.7.6)</td>
<td><code>ONLY_FULL_GROUP_BY STRICT_TRANS_TABLES NO_ENGINE_SUBSTITUTION</code></td>
</tr>
<tr>
<td><strong>Default Value</strong> (&lt;= 5.7.4)</td>
<td><code>NO_ENGINE_SUBSTITUTION</code></td>
</tr>
<tr>
<td><strong>Valid Values</strong></td>
<td>….</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; select @@global.sql_mode;</span><br><span class="line">+<span class="comment">-------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| @@global.sql_mode                                                                                                                         |</span><br><span class="line">+<span class="comment">-------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+<span class="comment">-------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<ul>
<li><code>ONLY_FULL_GROUP_BY</code>：<code>SELECT</code> 内指定字段必须出现在 <code>ORDER BY</code> 中，否则错误。</li>
<li><code>STRICT_TRANS_TABLES</code>：为事务存储引擎启用严格的 <code>SQL</code> 模式。</li>
<li><code>NO_ZERO_IN_DATE</code>：严格模式下，不接受月或日部分为 <code>0</code> 的日期。</li>
<li><code>NO_ZERO_DATE</code>：严格模式下，认为日期 <code>&#39;0000-00-00&#39;</code> 非法。</li>
<li><code>ERROR_FOR_DIVISION_BY_ZERO</code>：严格模式下，除 <code>0</code> 错误。</li>
<li><code>NO_AUTO_CREATE_USER</code>：授权之前必须先创建用户。</li>
<li><code>NO_ENGINE_SUBSTITUTION</code>：如果需要的存储引擎被禁用或未编译，那么抛出错误。</li>
<li><code>STRICT_ALL_TABLES</code>：为所有存储引擎启用严格 <code>SQL</code> 模式，无效的数据值报错。</li>
</ul>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><ul>
<li><strong>动态设置</strong></li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; set global sql_mode='NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES';</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>静态设置</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">sql_mode = NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>阿里云 RDS 设置</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sql_mode=REAL_AS_FLOAT,PIPES_AS_CONCAT,ANSI_QUOTES,IGNORE_SPACE,NO_UNSIGNED_SUBTRACTION,NO_DIR_</span><br><span class="line">IN_CREATE,POSTGRESQL,ORACLE,MSSQL,DB2,MAXDB,NO_KEY_OPTIONS,NO_TABLE_OPTIONS,NO_FIELD_OPTIONS,MYSQL</span><br><span class="line"><span class="number">323</span>,MYSQL40,ANSI,NO_AUTO_VALUE_ON_ZERO,NO_BACKSLASH_ESCAPES,STRICT_TRANS_TABLES,STRICT_ALL_TABLES,</span><br><span class="line">NO_ZERO_IN_DATE,NO_ZERO_DATE,ALLOW_INVALID_DATES,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,HIGH_NOT</span><br><span class="line">_PRECEDENCE,NO_ENGINE_SUBSTITUTION,PAD_CHAR_TO_FULL_LENGTH</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 配置参数 · skip_name_resolve</title>
    <url>/blog/2019/10/29/mysql-config-skip-name-resolve/</url>
    <content><![CDATA[<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_skip_name_resolve" target="_blank" rel="noopener"><strong>skip_name_resolve</strong></a>：检查客户端连接时是否解析主机名。</p>
<ul>
<li><strong>OFF</strong>：默认状态，仅在第一次建立连接时缓存 <code>IP</code> 和 <code>Host Name</code> 的映射关系，同一主机的后续连接将直接查看 <code>Host Cache</code>，而不用再次进行 <code>DNS</code> 解析。</li>
<li><strong>ON</strong>：禁止 <code>DNS</code> 解析，启用后 MySQL 授权表中就不能使用主机名了，只能使用 <code>IP</code>。</li>
</ul>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Command-Line Format</strong></td>
<td><code>--skip-name-resolve=#</code></td>
</tr>
<tr>
<td><strong>System Variable</strong></td>
<td><code>skip_name_resolve</code></td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>Global</td>
</tr>
<tr>
<td><strong>Dynamic</strong></td>
<td>No</td>
</tr>
<tr>
<td><strong>Type</strong></td>
<td>Boolean</td>
</tr>
<tr>
<td><strong>Default Value</strong></td>
<td><code>OFF</code></td>
</tr>
</tbody></table>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show variables like <span class="string">'skip_name_resolve'</span>;</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| Variable_name     | Value |</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| skip_name_resolve | OFF   |</span><br><span class="line">+-------------------+-------+</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; select user,host,password from user;</span><br><span class="line">+-------------+---------------+-------------------------------------------+</span><br><span class="line">| user        | host          | password                                  |</span><br><span class="line">+-------------+---------------+-------------------------------------------+</span><br><span class="line">| root        | localhost     | *C655557AE3BD4264288BB5C1ED8126A364A6F7ED |</span><br><span class="line">| root        | hlht\_db3     | *C655557AE3BD4264288BB5C1ED8126A364A6F7ED |</span><br><span class="line">| root        | <span class="number">127.0</span>.<span class="number">0.1</span>     | *C655557AE3BD4264288BB5C1ED8126A364A6F7ED |</span><br><span class="line">| root        | ::<span class="number">1</span>           | *C655557AE3BD4264288BB5C1ED8126A364A6F7ED |</span><br><span class="line">| read_only   | %             | *<span class="number">47646</span>ED664BFD993442F175266B6F4367E8CA123 |</span><br><span class="line">| retl        | %             | *<span class="number">44</span>AB89E92CDF5A148EC5A8BCE2BBEF1E51AAC48D |</span><br><span class="line">| sre         | %             | *<span class="number">66</span>CC8D8F94978869E17ABDA6FD2E1A5D817E619E |</span><br><span class="line">| hdm         | %             | *<span class="number">14533888</span>C6CA3952B3957903FF7E69469C7E3A2B |</span><br><span class="line">+-------------+---------------+-------------------------------------------+</span><br></pre></td></tr></table></figure>

<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><ul>
<li><strong>配置文件 <code>my.cnf</code></strong> </li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">skip-name-resolve</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>日志警告</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># skip_name_resolve = OFF</span></span><br><span class="line">[Warning] IP address <span class="string">'10.163.25.68'</span> could not be resolved: Name or service not known</span><br><span class="line"></span><br><span class="line"><span class="comment"># skip_name_resolve = ON</span></span><br><span class="line">[Warning] <span class="string">'user'</span> entry <span class="string">'mysql.session@localhost'</span> ignored <span class="keyword">in</span> --skip-name-resolve mode</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 磁盘相关知识</title>
    <url>/blog/2019/10/25/linux-disk/</url>
    <content><![CDATA[<h2 id="磁盘类型"><a href="#磁盘类型" class="headerlink" title="磁盘类型"></a>磁盘类型</h2><p><strong>按照材质分类</strong>：</p>
<ul>
<li><strong>HDD（Hard Disk Driver）</strong>：传统硬盘，即机械硬盘</li>
<li><strong>SSD（Solid State Disk）</strong>：固态硬盘，是一种主要以闪存作为永久性存储器的计算机存储设备。</li>
</ul>
<p><strong>按照硬盘接口分类</strong>：硬盘接口是指硬盘与主板之间的连接方式</p>
<ul>
<li><strong>SATA</strong>：串形高技术配置接口</li>
<li><strong>SAS</strong>：串形小型计算机系统接口</li>
<li><strong>SAS</strong> 接口的硬盘比 <strong>SATA</strong> 接口的硬盘传输速度要快很多，并且性能也高很多</li>
</ul>
<p><strong>磁盘类型</strong>：使用 <code>lsblk</code> 命令进行判断</p>
<ul>
<li><code>-d</code> ，表示显示设备名称</li>
<li><code>-o</code> ，表示仅显示特定的列</li>
<li><code>ROTA</code> 是 <code>1</code> 的表示可以旋转，磁盘类型是 <code>HDD</code>。</li>
<li><code>ROTA</code> 是 <code>0</code> 的表示不可以旋转，就有可能是 <code>SSD</code>。</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ lsblk -d -o name,rota</span><br><span class="line">NAME ROTA</span><br><span class="line">fd0     <span class="number">1</span></span><br><span class="line">sda     <span class="number">1</span></span><br><span class="line">sdb     <span class="number">1</span></span><br><span class="line">sr0     <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="磁盘性能"><a href="#磁盘性能" class="headerlink" title="磁盘性能"></a>磁盘性能</h2><p><strong>硬盘性能指标</strong>：IOPS (Input / Output Per Second) 即每秒的输入输出量（读写次数），是衡量磁盘性能的主要指标之一。</p>
<p>使用 <code>dd</code> 测试硬盘吞吐量：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ dd <span class="keyword">if</span>=/dev/zero of=/dev/sda bs=<span class="number">4</span>k count=<span class="number">3000</span> oflag=direct</span><br><span class="line">记录了<span class="number">3000</span>+<span class="number">0</span> 的读入</span><br><span class="line">记录了<span class="number">3000</span>+<span class="number">0</span> 的写出</span><br><span class="line"><span class="number">12288000</span>字节(<span class="number">12</span> MB)已复制，<span class="number">0.0791091</span> 秒，<span class="number">155</span> MB/秒</span><br></pre></td></tr></table></figure>

<p><strong>总结</strong>：<code>SSD</code> 的随机 <code>IO</code> 读写能力是 <code>SATA</code> 和 <code>SAS</code> 机械硬盘的一千多倍，顺序读写能力基本和 <code>SSD</code> 保持同样的数量级。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 配置参数 · expire_logs_days</title>
    <url>/blog/2019/10/25/mysql-config-expire-logs-days/</url>
    <content><![CDATA[<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_expire_logs_days" target="_blank" rel="noopener"><strong>expire_logs_days</strong></a>：控制 <code>binlog</code> 日志的过期时间，默认是 <code>0</code> 表示永不过期，单位是天。</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Command-Line Format</strong></td>
<td><code>--expire-logs-days=#</code></td>
</tr>
<tr>
<td><strong>System Variable</strong></td>
<td><code>expire_logs_days</code></td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>Global</td>
</tr>
<tr>
<td><strong>Dynamic</strong></td>
<td>Yes</td>
</tr>
<tr>
<td><strong>Type</strong></td>
<td>Integer</td>
</tr>
<tr>
<td><strong>Default Value</strong></td>
<td><code>0</code></td>
</tr>
<tr>
<td><strong>Minimum Value</strong></td>
<td><code>0</code></td>
</tr>
<tr>
<td><strong>Maximum Value</strong></td>
<td><code>99</code></td>
</tr>
</tbody></table>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><ul>
<li><strong>永久生效</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/my.cnf</span></span><br><span class="line">expire_logs_days = <span class="number">7</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like "expire_logs%";</span><br><span class="line">+<span class="comment">------------------+-------+</span></span><br><span class="line">| Variable_name    | Value |</span><br><span class="line">+<span class="comment">------------------+-------+</span></span><br><span class="line">| expire_logs_days | 7     |</span><br><span class="line">+<span class="comment">------------------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>临时生效</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置保留7天</span></span><br><span class="line">set global expire_logs_days = <span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新日志</span></span><br><span class="line">flush logs;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>Warning</strong>：以上命令在数据库执行会立即生效，请确定设置数据的保留日期，以免误删！</p>
</blockquote>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 配置参数 · sync_binlog</title>
    <url>/blog/2019/10/25/mysql-config-sync-binlog/</url>
    <content><![CDATA[<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/replication-options-binary-log.html#sysvar_sync_binlog" target="_blank" rel="noopener"><strong>sync_binlog</strong></a>：控制 MySQL 二进制日志（<code>binlog</code>）同步到磁盘的频率。</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Command-Line Format</strong></td>
<td><code>--sync-binlog=#</code></td>
</tr>
<tr>
<td><strong>System Variable</strong></td>
<td><code>sync_binlog</code></td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>Global</td>
</tr>
<tr>
<td><strong>Dynamic</strong></td>
<td>Yes</td>
</tr>
<tr>
<td><strong>Type</strong></td>
<td>Integer</td>
</tr>
<tr>
<td><strong>Default Value</strong> (&gt;= 5.7.7)</td>
<td><code>1</code></td>
</tr>
<tr>
<td><strong>Default Value</strong> (&lt;= 5.7.6)</td>
<td><code>0</code></td>
</tr>
<tr>
<td><strong>Minimum Value</strong></td>
<td><code>0</code></td>
</tr>
<tr>
<td><strong>Maximum Value</strong></td>
<td><code>4294967295</code></td>
</tr>
</tbody></table>
<ul>
<li><strong>sync_binlog = 0</strong>，每进行事务提交后，MySQL 不做 <code>fsync</code> 之类的磁盘同步指令刷新 <code>binlog_cache</code> 中的信息到磁盘，而让文件系统自行决定什么时候来做同步，或者 <code>cache</code> 满了之后才同步到磁盘。</li>
<li><strong>sync_binlog = 1</strong>，每进行 <code>1</code> 次事务提交，MySQL 将进行一次 <code>fsync</code> 之类的磁盘同步指令来将 <code>binlog_cache</code> 中的数据强制写入磁盘。</li>
<li><strong>sync_binlog = N</strong>，每进行 <code>N</code> 次事务提交，MySQL 将进行一次 <code>fsync</code> 之类的磁盘同步指令来将 <code>binlog_cache</code> 中的数据强制写入磁盘。</li>
</ul>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><ul>
<li><strong>性能</strong>：0 &gt; N &gt; 1</li>
<li><strong>安全</strong>：1 &gt; N &gt; 0</li>
<li><strong>建议</strong>：区分业务场景进行设置 </li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 支付场景：sync_binlog = 1</span></span><br><span class="line"><span class="comment"># 其他场景：sync_binlog = 0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 配置参数 · innodb_flush_log_at_trx_commit</title>
    <url>/blog/2019/10/25/mysql-config-innodb-flush-log-at-trx-commit/</url>
    <content><![CDATA[<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit" target="_blank" rel="noopener"><strong>innodb_flush_log_at_trx_commit</strong></a>：控制 <code>ib_logfile</code> 日志（记录 <code>redo log</code>  <code>undo log</code> 信息）的刷新方式。</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Command-Line Format</strong></td>
<td><code>--innodb-flush-log-at-trx-commit=#</code></td>
</tr>
<tr>
<td><strong>System Variable</strong></td>
<td><code>innodb_flush_log_at_trx_commit</code></td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>Global</td>
</tr>
<tr>
<td><strong>Dynamic</strong></td>
<td>Yes</td>
</tr>
<tr>
<td><strong>Type</strong></td>
<td>Enumeration</td>
</tr>
<tr>
<td><strong>Default Value</strong></td>
<td><code>1</code></td>
</tr>
<tr>
<td><strong>Valid Values</strong></td>
<td><code>0</code> <code>1</code> <code>2</code></td>
</tr>
</tbody></table>
<ul>
<li><strong>innodb_flush_log_at_trx_commit = 0</strong>，表示每隔 1 秒把 <code>log buffer</code> 刷到 <code>log file</code> 中去，并且同时调用文件系统的 <code>flush</code> 操作将缓存刷新到磁盘上去。也就是说一秒之前的日志都保存在日志缓冲区，也就是内存上，在<strong>mysqld 进程崩溃</strong>的情况下，可能丢失 1 秒的事务数据。</li>
<li><strong>innodb_flush_log_at_trx_commit = 1</strong>，表示在每次事务提交后，会把 <code>log buffer</code> 刷到 <code>log file</code> 中去，并且调用文件系统的 <code>flush</code> 操作将缓存刷新到磁盘上去。</li>
<li><strong>innodb_flush_log_at_trx_commit = 2</strong>，表示在每次事务提交后，会把 <code>log buffer</code> 刷到 <code>log file</code> 中去，但并不会立即刷写到磁盘。只有在<strong>数据库所在的主机操作系统损坏或者突然掉电</strong>的情况下，可能丢失 1 秒的事务数据。</li>
</ul>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><ul>
<li><strong>性能</strong>：0 &gt; 2 &gt; 1</li>
<li><strong>安全</strong>：1 &gt; 2 &gt;0</li>
<li><strong>推荐</strong>：区分业务场景进行设置</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 支付场景：innodb_flush_log_at_trx_commit = 1</span></span><br><span class="line"><span class="comment"># 其他场景：innodb_flush_log_at_trx_commit = 2</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 配置参数 · max_connections</title>
    <url>/blog/2019/10/24/mysql-config-max-connections/</url>
    <content><![CDATA[<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><ul>
<li><strong><a href="https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections" target="_blank" rel="noopener">max_connections</a></strong>：MySQL 实例最大连接数。</li>
<li><strong>Max_used_connections</strong>：是指从本次 MySQL 服务启动到现在，同一时刻并行连接数的最大值，不是指当前的连接情况，而是一个比较值。</li>
</ul>
<table>
<thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Command-Line Format</strong></td>
<td><code>--max-connections=#</code></td>
</tr>
<tr>
<td><strong>System Variable</strong></td>
<td><code>max_connections</code></td>
</tr>
<tr>
<td><strong>Scope</strong></td>
<td>Global</td>
</tr>
<tr>
<td><strong>Dynamic</strong></td>
<td>Yes</td>
</tr>
<tr>
<td><strong>Type</strong></td>
<td>Integer</td>
</tr>
<tr>
<td><strong>Default Value</strong></td>
<td><code>151</code></td>
</tr>
<tr>
<td><strong>Minimum Value</strong></td>
<td><code>1</code></td>
</tr>
<tr>
<td><strong>Maximum Value</strong></td>
<td><code>100000</code></td>
</tr>
</tbody></table>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">"max_connections"</span>;</span><br><span class="line">+-----------------+-------+</span><br><span class="line">| Variable_name   | Value |</span><br><span class="line">+-----------------+-------+</span><br><span class="line">| max_connections | <span class="number">1000</span>  |</span><br><span class="line">+-----------------+-------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show status like <span class="string">"max_used%"</span>;</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| Variable_name        | Value |</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| Max_used_connections | <span class="number">391</span>   |</span><br><span class="line">+----------------------+-------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p><strong>推荐</strong>：如果设置太高硬件吃不消，太低又不能充分利用硬件，一般要求两者比值超过 <code>10%</code>。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Max_used_connections / max_connections * <span class="number">100</span>%  &gt; <span class="number">10</span>%</span><br></pre></td></tr></table></figure>

<p><strong>方法</strong>：<code>/etc/my.cnf</code> 添加参数 <code>max_connections = 1000</code>，这个值的大小取决于服务器的配置。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>如果你看到数据库报 <code>&quot;Too many connections&quot;</code> 错误，是因为当前连接数超过 <code>max_connections</code> 设置的值，常见的原因是应用程序没有正确的关闭数据库连接，应用程序使用连接池有助于解决这一问题。</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 调优案例 · JOIN</title>
    <url>/blog/2019/10/24/mysql-tuning-join/</url>
    <content><![CDATA[<h2 id="JOIN"><a href="#JOIN" class="headerlink" title="JOIN"></a>JOIN</h2><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-13-175000.jpg" alt></p>
<h3 id="INNER-JOIN（内连接）"><a href="#INNER-JOIN（内连接）" class="headerlink" title="INNER JOIN（内连接）"></a>INNER JOIN（内连接）</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-13-175100.gif" alt></p>
<h3 id="LEFT-JOIN（左连接）"><a href="#LEFT-JOIN（左连接）" class="headerlink" title="LEFT JOIN（左连接）"></a>LEFT JOIN（左连接）</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-13-175200.gif" alt></p>
<h3 id="RIGHT-JOIN（右连接）"><a href="#RIGHT-JOIN（右连接）" class="headerlink" title="RIGHT JOIN（右连接）"></a>RIGHT JOIN（右连接）</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-11-13-175300.gif" alt></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 自增主键</title>
    <url>/blog/2019/10/24/mysql-primarykey/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><strong>问题：</strong></p>
<p>有一张表，里面有 <code>id</code> 自增主键，当 <code>insert</code> 了 17 条记录之后，删除了第 15 16 17 条记录，再把 MySQL 重启，再 <code>insert</code> 一条记录，这条记录的 <code>id</code> 是 18 还是 15 ？</p>
<p><strong>答案：</strong></p>
<p><strong>MySQL 8.0 之前</strong></p>
<ul>
<li>如果是 <code>MyISAM</code> 表，数据库重启后，<code>id</code> 值为 18</li>
<li>如果是 <code>InnoDB</code> 表，数据库重启后，<code>id</code> 值为 15</li>
</ul>
<p><strong>MySQL 8.0 开始</strong></p>
<ul>
<li>如果是 <code>MyISAM</code> 表，数据库重启后，<code>id</code> 值为 18</li>
<li>如果是 <code>InnoDB</code> 表，数据库重启后，<code>id</code> 值为 18</li>
</ul>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>不同存储引擎自增主键实现机制不同，同一存储引擎不通版本实现机制不同。</p>
<p><strong>MyISAM</strong>：自增主键的最大 <code>id</code> 记录在数据文件里，重启后不会消失。</p>
<p><strong>InnoDB</strong></p>
<ul>
<li><code>MySQL 5.7 及之前版本</code>，自增主键最大 <code>id</code> 保存在内存里，重启数据库或者是对表进行 <code>optimize</code> 操作，都会导致最大 <code>id</code> 丢失，重启后将 <code>max(id)+1</code> 作为这个表当前的自增值。</li>
<li><code>MySQL 8.0 版本</code>，自增主键最大 <code>id</code> 记录在了 <code>redo log</code> 中，重启后依靠 <code>redo log</code> 恢复重启之前的值。</li>
</ul>
<p><strong>测试</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from employees_innodb;</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">| id | name       | address            | age | gmt_create          | gmt_modified        |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">|  1 | xujinliang | 山东省青岛市       |  32 | 2019-09-24 17:13:00 | 2019-09-24 17:13:00 |</span><br><span class="line">|  2 | maofang    | 山东省青岛市       |  32 | 2019-09-24 17:32:00 | 2019-09-24 17:40:49 |</span><br><span class="line">|  3 | raohui     | 陕西省西安市       |  29 | 2019-09-24 17:39:28 | 2019-09-24 17:39:28 |</span><br><span class="line">|  4 | yangnan    | NULL               |  22 | 2019-09-24 17:39:52 | 2019-09-24 17:39:52 |</span><br><span class="line">|  5 | yuzhiqiang | 山东省青岛市       |  29 | 2019-10-24 10:39:53 | 2019-10-24 10:39:53 |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除id为5的记录，重启MySQL服务，再次插入id变成5（max(id)+1）</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> employees;</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">| id | name       | address            | age | gmt_create          | gmt_modified        |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">|  1 | xujinliang | 山东省青岛市       |  32 | 2019-09-24 17:13:00 | 2019-09-24 17:13:00 |</span><br><span class="line">|  2 | maofang    | 山东省青岛市       |  32 | 2019-09-24 17:32:00 | 2019-09-24 17:40:49 |</span><br><span class="line">|  3 | raohui     | 陕西省西安市       |  29 | 2019-09-24 17:39:28 | 2019-09-24 17:39:28 |</span><br><span class="line">|  4 | yangnan    | NULL               |  22 | 2019-09-24 17:39:52 | 2019-09-24 17:39:52 |</span><br><span class="line">|  5 | liu        | 山东省烟台市       |  22 | 2019-10-24 11:03:14 | 2019-10-24 11:03:14 |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> employees_myisam;</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">| id | name       | address            | age | gmt_create          | gmt_modified        |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">|  1 | xujinliang | 山东省青岛市       |  32 | 2019-09-24 17:13:00 | 2019-09-24 17:13:00 |</span><br><span class="line">|  2 | maofang    | 山东省青岛市       |  32 | 2019-09-24 17:32:00 | 2019-09-24 17:40:49 |</span><br><span class="line">|  3 | raohui     | 陕西省西安市       |  29 | 2019-09-24 17:39:28 | 2019-09-24 17:39:28 |</span><br><span class="line">|  4 | yangnan    | NULL               |  22 | 2019-09-24 17:39:52 | 2019-09-24 17:39:52 |</span><br><span class="line">|  5 | yuzhiqiang | 山东省青岛市       |  29 | 2019-10-24 10:39:53 | 2019-10-24 10:39:53 |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除id为5的记录，重启MySQL服务，再次插入id变成6</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> employees_myisam;</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">| id | name       | address            | age | gmt_create          | gmt_modified        |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">|  1 | xujinliang | 山东省青岛市       |  32 | 2019-09-24 17:13:00 | 2019-09-24 17:13:00 |</span><br><span class="line">|  2 | maofang    | 山东省青岛市       |  32 | 2019-09-24 17:32:00 | 2019-09-24 17:40:49 |</span><br><span class="line">|  3 | raohui     | 陕西省西安市       |  29 | 2019-09-24 17:39:28 | 2019-09-24 17:39:28 |</span><br><span class="line">|  4 | yangnan    | NULL               |  22 | 2019-09-24 17:39:52 | 2019-09-24 17:39:52 |</span><br><span class="line">|  6 | yuzhiqiang | 山东省青岛市       |  29 | 2019-10-24 10:58:32 | 2019-10-24 10:58:32 |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="主键的选择"><a href="#主键的选择" class="headerlink" title="主键的选择"></a>主键的选择</h2><p>①  从性能和存储空间方面考量，自增主键往往是更好的选择：</p>
<ul>
<li><strong>存储空间少</strong>，自增主键一般用整型做主键，则二级索引叶子节点只要 4 个字节；而如果使用业务字段做主键，比如字符串类型的身份证号，每个二级索引的叶子节点得占用约 20 个字节。</li>
<li><strong>性能好</strong>，插入数据时，自增主键能保证有序插入，避免了页分裂。</li>
</ul>
<p>②  自增 <code>id</code> 是整型字段，推荐使用 <code>unsigned int</code> 类型来定义增长主键，可以存储 42 亿数据。</p>
<table>
<thead>
<tr>
<th align="left">类型</th>
<th align="left">大小</th>
<th align="left">范围（有符号）</th>
<th align="left">范围（无符号）</th>
</tr>
</thead>
<tbody><tr>
<td align="left">int</td>
<td align="left">4 byte</td>
<td align="left">(-2147483648, 2147483647)</td>
<td align="left">(0, 4294967295)</td>
</tr>
<tr>
<td align="left">bigint</td>
<td align="left">8 byte</td>
<td align="left">(-9223372036854775808, 9223372036854775807)</td>
<td align="left">(0, 18446744073709551615)</td>
</tr>
</tbody></table>
<p>③  自增 <code>id</code> 是增长的，但不一定连续，造成自增 <code>id</code> 不连续的情况可能有：</p>
<ul>
<li>唯一键冲突</li>
<li>事务回滚</li>
<li><code>insert ... select</code> 语句批量申请自增 <code>id</code></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 网络编程</title>
    <url>/blog/2019/10/24/python-socket/</url>
    <content><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>用 TCP 协议进行 Socket 编程在 Python 中十分简单，对于客户端，要主动连接服务器的 IP 和指定端口，对于服务器，要首先监听指定端口，然后，对每一个新的连接，创建一个线程或进程来处理。通常，服务器程序会无限运行下去。同一个端口，被一个 Socket 绑定了以后，就不能被别的 Socket 绑定了。</p>
<h4 id="TCP编程"><a href="#TCP编程" class="headerlink" title="TCP编程"></a>TCP编程</h4><p><strong>客户端</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="comment"># 建立连接:</span></span><br><span class="line">s.connect((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line"><span class="comment"># 接收欢迎消息:</span></span><br><span class="line">print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> [<span class="string">b'Michael'</span>, <span class="string">b'Tracy'</span>, <span class="string">b'Sarah'</span>]:</span><br><span class="line">    <span class="comment"># 发送数据:</span></span><br><span class="line">    s.send(data)</span><br><span class="line">    print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">s.send(<span class="string">b'exit'</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>

<p><strong>服务端</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听端口:</span></span><br><span class="line">s.bind((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">'Waiting for connection...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tcplink</span><span class="params">(sock, addr)</span>:</span></span><br><span class="line">    print(<span class="string">'Accept new connection from %s:%s...'</span> % addr)</span><br><span class="line">    sock.send(<span class="string">b'Welcome!'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data <span class="keyword">or</span> data.decode(<span class="string">'utf-8'</span>) == <span class="string">'exit'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        sock.send((<span class="string">'Hello, %s!'</span> % data.decode(<span class="string">'utf-8'</span>)).encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    sock.close()</span><br><span class="line">    print(<span class="string">'Connection from %s:%s closed.'</span> % addr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 接受一个新连接:</span></span><br><span class="line">    sock, addr = s.accept()</span><br><span class="line">    <span class="comment"># 创建新线程来处理TCP连接:</span></span><br><span class="line">    t = threading.Thread(target=tcplink, args=(sock, addr))</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure>

<p><strong>执行结果</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Waiting <span class="keyword">for</span> connection...</span><br><span class="line">Accept new connection <span class="keyword">from</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">52501.</span>..</span><br><span class="line">Connection <span class="keyword">from</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">52501</span> closed.</span><br><span class="line"></span><br><span class="line">Welcome!</span><br><span class="line">Hello, Michael!</span><br><span class="line">Hello, Tracy!</span><br><span class="line">Hello, Sarah!</span><br></pre></td></tr></table></figure>

<h4 id="UDP编程"><a href="#UDP编程" class="headerlink" title="UDP编程"></a>UDP编程</h4><p>TCP：是建立可靠连接，并且通信双方都可以以流的形式发送数据。</p>
<p>UDP：是面向无连接的协议，使用 <code>UDP</code> 协议时，不需要建立连接，只需要知道对方的 <code>IP</code> 地址和端口号，就可以直接发数据包。虽然用 <code>UDP</code> 传输数据不可靠，但它的优点是和 <code>TCP</code> 比速度快，对于不要求可靠到达的数据，就可以使用 <code>UDP</code> 协议。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> [<span class="string">b'Michael'</span>, <span class="string">b'Tracy'</span>, <span class="string">b'Sarah'</span>]:</span><br><span class="line">    <span class="comment"># 发送数据:</span></span><br><span class="line">    s.sendto(data, (<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line">    <span class="comment"># 接收数据:</span></span><br><span class="line">    print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">s.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="comment"># 绑定端口:</span></span><br><span class="line">s.bind((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line">print(<span class="string">'Bind UDP on 9999...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 接收数据:</span></span><br><span class="line">    data, addr = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">'Received from %s:%s.'</span> % addr)</span><br><span class="line">    s.sendto(<span class="string">b'Hello, %s! '</span> % data, addr)</span><br></pre></td></tr></table></figure>

<p><strong>执行结果</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Bind UDP on <span class="number">9999.</span>..</span><br><span class="line">Received <span class="keyword">from</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">58248.</span></span><br><span class="line">Received <span class="keyword">from</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">58248.</span></span><br><span class="line">Received <span class="keyword">from</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">58248.</span></span><br><span class="line"></span><br><span class="line">Hello, Michael! </span><br><span class="line">Hello, Tracy! </span><br><span class="line">Hello, Sarah!</span><br></pre></td></tr></table></figure>

<p><strong>小结</strong>：</p>
<p><code>UDP</code> 的使用与 <code>TCP</code> 类似，但是不需要建立连接。此外，服务器绑定 <code>UDP</code> 端口和 <code>TCP</code> 端口互不冲突，也就是说，<code>UDP</code> 的 <code>9999</code> 端口与 <code>TCP</code> 的 <code>9999</code> 端口可以各自绑定。 </p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 正则表达式</title>
    <url>/blog/2019/10/24/python-regular/</url>
    <content><![CDATA[<p><strong>正则表达式</strong>是一种用来匹配字符串的强有力的武器，它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则该字符串就是不合法的。</p>
<p><strong>功能</strong>：</p>
<ul>
<li>校验字符串，判断是否匹配</li>
<li>提取子字符串</li>
</ul>
<p><strong>字符</strong></p>
<p><code>\d</code>：表示可以匹配一个数字</p>
<p><code>\w</code>：表示可以匹配一个字母或数字</p>
<p><code>.</code>：表示可以匹配任意字符</p>
<p><code>*</code>：表示任意个字符（包括0个）</p>
<p><code>+</code>：表示至少一个字符</p>
<p><code>?</code>：表示0个或1个字符</p>
<p><code>{n}</code>：表示n个字符</p>
<p><code>{n,m}</code>：表示n-m个字符</p>
<p><code>\s</code>：表示可以匹配一个空格（也包括Tab等空白符），所以<code>\s+</code>表示至少有一个空格</p>
<p><code>[]</code>：表示更精确地范围匹配</p>
<p><code>^</code>：表示行的开头，<code>^\d</code>表示必须以数字开头</p>
<p><code>$</code>：表示行的结束，<code>\d$</code>表示必须以数字结束</p>
<p><code>A|B</code>：可以匹配A或B，所以<code>(P|p)ython</code>可以匹配<code>&#39;Python&#39;</code>或者<code>&#39;python&#39;</code>。</p>
<p><code>[0-9a-zA-Z\_]</code>：可以匹配一个数字、字母或者下划线</p>
<p><code>[0-9a-zA-Z\_]+</code>：可以匹配至少由一个数字、字母或者下划线组成的字符串，如<code>&#39;a100&#39;</code>，<code>&#39;0_Z&#39;</code>，<code>&#39;Py3000&#39;</code>等等</p>
<p><code>[a-zA-Z\_][0-9a-zA-Z\_]*</code>：可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是 Python 合法的变量</p>
<p><code>[a-zA-Z\_][0-9a-zA-Z\_]{0, 19}</code>：更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）</p>
<p><code>re</code> <strong>模块</strong>：Python 提供 <code>re</code>模块，包含所有正则表达式的功能，建议使用 <code>r</code> 前缀，就不用考虑转义的问题。</p>
<p><code>match()</code> <strong>方法</strong>：判断是否匹配，如果匹配成功，返回一个<code>Match</code>对象，否则返回<code>None</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test = <span class="string">'用户输入的字符串'</span></span><br><span class="line"><span class="keyword">if</span> re.match(<span class="string">r'正则表达式'</span>, test):</span><br><span class="line">    print(<span class="string">'ok'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'failed'</span>)</span><br></pre></td></tr></table></figure>

<p><strong>切分字符串</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.split(<span class="string">r'\s+'</span>, <span class="string">'a b   c'</span>)</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br></pre></td></tr></table></figure>

<p><strong>分组</strong>：可以在<code>Match</code>对象上用<code>group()</code>方法提取出子串来，<code>group(0)</code>永远是原始字符串，<code>group(1)</code>、<code>group(2)</code>……表示第1、2、……个子串。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>, <span class="string">'010-12345'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m</span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">0</span>, <span class="number">9</span>), match=<span class="string">'010-12345'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">0</span>)</span><br><span class="line"><span class="string">'010-12345'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">1</span>)</span><br><span class="line"><span class="string">'010'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">2</span>)</span><br><span class="line"><span class="string">'12345'</span></span><br></pre></td></tr></table></figure>

<p><strong>贪婪匹配</strong>：正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r'^(\d+)(0*)$'</span>, <span class="string">'102300'</span>).groups()</span><br><span class="line">(<span class="string">'102300'</span>, <span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">由于\d+采用贪婪匹配，直接把后面的0全部匹配了，结果0*只能匹配空字符串了。必须让\d+采用非贪婪匹配（也就是尽可能少匹配），才能把后面的0匹配出来，加个?就可以让\d+采用非贪婪匹配:</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">r'^(\d+?)(0*)$'</span>, <span class="string">'102300'</span>).groups()</span><br><span class="line">(<span class="string">'1023'</span>, <span class="string">'00'</span>)</span><br></pre></td></tr></table></figure>

<p><strong>编译</strong>：当我们在 Python 中使用正则表达式时，<code>re</code>模块内部会干两件事情：</p>
<p>1）编译正则表达式，如果正则表达式的字符串本身不合法，会报错。</p>
<p>2）用编译后的正则表达式去匹配字符串。</p>
<p>如果一个正则表达式要重复使用几千次，出于效率的考虑，我们可以预编译该正则表达式，接下来重复使用时就不需要编译这个步骤了，直接进行匹配。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 编译:</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re_telephone = re.compile(<span class="string">r'^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$'</span>)</span><br><span class="line"><span class="comment"># 使用：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re_telephone.match(<span class="string">'010-12345'</span>).groups()</span><br><span class="line">(<span class="string">'010'</span>, <span class="string">'12345'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re_telephone.match(<span class="string">'010-8086'</span>).groups()</span><br><span class="line">(<span class="string">'010'</span>, <span class="string">'8086'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 进程与线程</title>
    <url>/blog/2019/10/24/python-threads/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><strong>目的</strong>：多核 <code>CPU</code> 时代，为了充分利用资源，依赖多任务并发编程技术<strong>提升程序性能</strong>和<strong>改善用户体验</strong>。</p>
<p><strong>多任务并发编程方式</strong>：</p>
<ul>
<li>多进程</li>
<li>多线程</li>
<li>多进程 + 多线程</li>
</ul>
<p><strong>进程</strong>：操作系统中执行的一个程序，一个任务就是一个进程。</p>
<p><strong>线程</strong>：线程是最小的执行单元，一个线程相当于进程的子任务。</p>
<p><strong>进程间通信方式</strong>：管道、信号、套接字、共享内存区等。</p>
<h2 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h2><ul>
<li><strong><code>os</code> 模块</strong>：使用 <code>fork()</code> 调用实现多进程。</li>
<li><strong><code>multiprocessing</code> 模块</strong>：实现跨平台多进程。</li>
<li><strong><code>Process</code> 对象</strong>：实现多进程。</li>
<li><strong><code>Pool</code> 对象</strong>：可以用进程池的方式批量创建子进程，<code>Pool</code> 的默认大小是 <code>CPU</code> 的核数。</li>
<li><strong><code>Queue</code> 对象</strong>：通过队列实现进程间通信。</li>
<li><strong><code>Pipes</code> 对象</strong>：通过管道实现进程间通信。</li>
<li><strong><code>start</code> 方法</strong>：表示启动进程。</li>
<li><strong><code>join</code> 方法</strong>：表示等待进程执行结束。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_task</span><span class="params">(filename)</span>:</span></span><br><span class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</span><br><span class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">    sleep(time_to_download)</span><br><span class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    start = time()</span><br><span class="line">    download_task(<span class="string">'Python从入门到进坑.pdf'</span>)</span><br><span class="line">    download_task(<span class="string">'Peking Hot.avi'</span>)</span><br><span class="line">    end = time()</span><br><span class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">运行结果：</span><br><span class="line">开始下载 Python从入门到进坑.pdf...</span><br><span class="line">Python从入门到住院.pdf下载完成! 耗费了<span class="number">6</span>秒</span><br><span class="line">开始下载 Peking Hot.avi...</span><br><span class="line">Peking Hot.avi下载完成! 耗费了<span class="number">7</span>秒</span><br><span class="line">总共耗费了<span class="number">13.01</span>秒.</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> getpid</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_task</span><span class="params">(filename)</span>:</span></span><br><span class="line">    print(<span class="string">'启动下载进程，进程号[%d].'</span> % getpid())</span><br><span class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</span><br><span class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">    sleep(time_to_download)</span><br><span class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    start = time()</span><br><span class="line">    p1 = Process(target=download_task, args=(<span class="string">'Python从入门到住院.pdf'</span>, ))</span><br><span class="line">    p1.start()</span><br><span class="line">    p2 = Process(target=download_task, args=(<span class="string">'Peking Hot.avi'</span>, ))</span><br><span class="line">    p2.start()</span><br><span class="line">    p1.join()</span><br><span class="line">    p2.join()</span><br><span class="line">    end = time()</span><br><span class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">运行结果：</span><br><span class="line">启动下载进程，进程号[<span class="number">1530</span>].</span><br><span class="line">开始下载 Python从入门到住院.pdf...</span><br><span class="line">启动下载进程，进程号[<span class="number">1531</span>].</span><br><span class="line">开始下载 Peking Hot.avi...</span><br><span class="line">Peking Hot.avi下载完成! 耗费了<span class="number">7</span>秒</span><br><span class="line">Python从入门到住院.pdf下载完成! 耗费了<span class="number">10</span>秒</span><br><span class="line">总共耗费了<span class="number">10.01</span>秒.</span><br></pre></td></tr></table></figure>

<h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><ul>
<li><strong><code>thread</code> 模块</strong>：实现多线程</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Process (%s) start...'</span> % os.getpid())</span><br><span class="line"><span class="comment"># Only works on Unix/Linux/Mac</span></span><br><span class="line">pid = os.fork()</span><br><span class="line"><span class="keyword">if</span> pid == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'I am child process (%s) and my parent is %s.'</span> % (os.getpid(), os.getppid()))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'I (%s) just created a child process (%s).'</span> % (os.getpid(), pid))</span><br><span class="line">    </span><br><span class="line">Process (<span class="number">876</span>) start...</span><br><span class="line">I (<span class="number">876</span>) just created a child process (<span class="number">877</span>).</span><br><span class="line">I am child process (<span class="number">877</span>) <span class="keyword">and</span> my parent <span class="keyword">is</span> <span class="number">876.</span></span><br></pre></td></tr></table></figure>

<p>Python 的 <code>multiprocessing</code>模块就是跨平台版本的多进程模块。<code>multiprocessing</code>模块提供了一个<code>Process</code>类来代表一个进程对象，下面的例子演示了启动一个子进程并等待其结束。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子进程要执行的代码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_proc</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'Run child process %s (%s)...'</span> % (name, os.getpid()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'Parent process %s.'</span> % os.getpid())</span><br><span class="line">    p = Process(target=run_proc, args=(<span class="string">'test'</span>,))</span><br><span class="line">    print(<span class="string">'Child process will start.'</span>)</span><br><span class="line">    p.start()</span><br><span class="line">    p.join()</span><br><span class="line">    print(<span class="string">'Child process end.'</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">执行结果如下：</span><br><span class="line">Parent process <span class="number">928.</span></span><br><span class="line">Child process will start.</span><br><span class="line">Run child process test (<span class="number">929</span>)...</span><br><span class="line">Child process end.</span><br></pre></td></tr></table></figure>

<p>创建子进程时，只需要传入一个执行函数和函数的参数，创建一个<code>Process</code>实例，用<code>start()</code>方法启动，这样创建进程比<code>fork()</code>还要简单。<code>join()</code>方法可以等待子进程结束后再继续往下运行，通常用于进程间的同步。</p>
<p><strong>Pool</strong>：如果要启动大量的子进程，可以用进程池的方式批量创建子进程，<code>Pool</code>的默认大小是 CPU 的核数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">long_time_task</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'Run task %s (%s)...'</span> % (name, os.getpid()))</span><br><span class="line">    start = time.time()</span><br><span class="line">    time.sleep(random.random() * <span class="number">3</span>)</span><br><span class="line">    end = time.time()</span><br><span class="line">    print(<span class="string">'Task %s runs %0.2f seconds.'</span> % (name, (end - start)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'Parent process %s.'</span> % os.getpid())</span><br><span class="line">    p = Pool(<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        p.apply_async(long_time_task, args=(i,))</span><br><span class="line">    print(<span class="string">'Waiting for all subprocesses done...'</span>)</span><br><span class="line">    p.close()</span><br><span class="line">    p.join()</span><br><span class="line">    print(<span class="string">'All subprocesses done.'</span>)</span><br><span class="line">    </span><br><span class="line">执行结果如下：</span><br><span class="line">Parent process <span class="number">669.</span></span><br><span class="line">Waiting <span class="keyword">for</span> all subprocesses done...</span><br><span class="line">Run task <span class="number">0</span> (<span class="number">671</span>)...</span><br><span class="line">Run task <span class="number">1</span> (<span class="number">672</span>)...</span><br><span class="line">Run task <span class="number">2</span> (<span class="number">673</span>)...</span><br><span class="line">Run task <span class="number">3</span> (<span class="number">674</span>)...</span><br><span class="line">Task <span class="number">2</span> runs <span class="number">0.14</span> seconds.</span><br><span class="line">Run task <span class="number">4</span> (<span class="number">673</span>)...</span><br><span class="line">Task <span class="number">1</span> runs <span class="number">0.27</span> seconds.</span><br><span class="line">Task <span class="number">3</span> runs <span class="number">0.86</span> seconds.</span><br><span class="line">Task <span class="number">0</span> runs <span class="number">1.41</span> seconds.</span><br><span class="line">Task <span class="number">4</span> runs <span class="number">1.91</span> seconds.</span><br><span class="line">All subprocesses done.</span><br></pre></td></tr></table></figure>

<p><strong>进程间通信</strong>：<code>Process</code>之间肯定是需要通信的，操作系统提供了很多机制来实现进程间的通信。<code>Python</code> 的<code>multiprocessing</code> 模块包装了底层的机制，提供了<code>Queue</code>、<code>Pipes</code>等多种方式来交换数据。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</span><br><span class="line"><span class="keyword">import</span> os, time, random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(q)</span>:</span></span><br><span class="line">    print(<span class="string">'Process to write: %s'</span> % os.getpid())</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]:</span><br><span class="line">        print(<span class="string">'Put %s to queue...'</span> % value)</span><br><span class="line">        q.put(value)</span><br><span class="line">        time.sleep(random.random())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读数据进程执行的代码:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(q)</span>:</span></span><br><span class="line">    print(<span class="string">'Process to read: %s'</span> % os.getpid())</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        value = q.get(<span class="literal">True</span>)</span><br><span class="line">        print(<span class="string">'Get %s from queue.'</span> % value)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 父进程创建Queue，并传给各个子进程：</span></span><br><span class="line">    q = Queue()</span><br><span class="line">    pw = Process(target=write, args=(q,))</span><br><span class="line">    pr = Process(target=read, args=(q,))</span><br><span class="line">    <span class="comment"># 启动子进程pw，写入:</span></span><br><span class="line">    pw.start()</span><br><span class="line">    <span class="comment"># 启动子进程pr，读取:</span></span><br><span class="line">    pr.start()</span><br><span class="line">    <span class="comment"># 等待pw结束:</span></span><br><span class="line">    pw.join()</span><br><span class="line">    <span class="comment"># pr进程里是死循环，无法等待其结束，只能强行终止:</span></span><br><span class="line">    pr.terminate()</span><br><span class="line">    </span><br><span class="line">执行结果如下：</span><br><span class="line">Process to write: <span class="number">50563</span></span><br><span class="line">Put A to queue...</span><br><span class="line">Process to read: <span class="number">50564</span></span><br><span class="line">Get A <span class="keyword">from</span> queue.</span><br><span class="line">Put B to queue...</span><br><span class="line">Get B <span class="keyword">from</span> queue.</span><br><span class="line">Put C to queue...</span><br><span class="line">Get C <span class="keyword">from</span> queue.</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 输入与输出</title>
    <url>/blog/2019/10/24/python-io/</url>
    <content><![CDATA[<h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><p>实际开发中经常遇到对数据进行持久化操作的场景，而实现数据持久化最直接简单的方式就是将数据保存到文件中。Python 实现文件的读写操作其实非常简单，通过内置的 <code>open</code> 函数，可以指定文件名、操作模式、编码信息等来获得操作文件的对象，然后就可以对文件进行读写操作了。</p>
<table>
<thead>
<tr>
<th>对象方法</th>
<th>具体含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>read</code></td>
<td>读取</td>
</tr>
<tr>
<td><code>readline</code></td>
<td>读取文件每一行</td>
</tr>
<tr>
<td><code>write</code></td>
<td>写入</td>
</tr>
<tr>
<td><code>close</code></td>
<td>关闭文件</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>操作模式</th>
<th>具体含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#39;r&#39;</code></td>
<td>读取 （默认）</td>
</tr>
<tr>
<td><code>&#39;w&#39;</code></td>
<td>写入（会先截断之前的内容）</td>
</tr>
<tr>
<td><code>&#39;x&#39;</code></td>
<td>写入，如果文件已经存在会产生异常</td>
</tr>
<tr>
<td><code>&#39;a&#39;</code></td>
<td>追加，将内容写入到已有文件的末尾</td>
</tr>
<tr>
<td><code>&#39;b&#39;</code></td>
<td>二进制模式</td>
</tr>
<tr>
<td><code>&#39;t&#39;</code></td>
<td>文本模式（默认）</td>
</tr>
<tr>
<td><code>&#39;+&#39;</code></td>
<td>更新（既可以读又可以写）</td>
</tr>
</tbody></table>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-26-101106.png" alt></p>
<p><strong>示例</strong>：<code>io_using_file.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">poem = <span class="string">'''\</span></span><br><span class="line"><span class="string">Programming is fun</span></span><br><span class="line"><span class="string">When the work is done</span></span><br><span class="line"><span class="string">if you wanna make your work also fun:</span></span><br><span class="line"><span class="string">    use Python!</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开文件以编辑（writing）</span></span><br><span class="line">f = open(<span class="string">'poem.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line"><span class="comment"># 向文件中编写文本</span></span><br><span class="line">f.write(poem)</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有特别指定，将假定启用默认的阅读（read）模式</span></span><br><span class="line">f = open(<span class="string">'poem.txt'</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    line = f.readline()</span><br><span class="line">    <span class="comment"># 零长度指示 EOF</span></span><br><span class="line">    <span class="keyword">if</span> len(line) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 每行的末尾都已经有了换行符，因为它是从一个文件中进行读取的</span></span><br><span class="line">    print(line, end=<span class="string">''</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python3 io_using_file.py</span><br><span class="line">Programming <span class="keyword">is</span> fun</span><br><span class="line">When the work <span class="keyword">is</span> done</span><br><span class="line"><span class="keyword">if</span> you wanna make your work also fun:</span><br><span class="line">    use Python!</span><br></pre></td></tr></table></figure>

<h3 id="读写文本文件"><a href="#读写文本文件" class="headerlink" title="读写文本文件"></a>读写文本文件</h3><ul>
<li>使用 <code>open</code> 函数打开文件</li>
<li>使用 <code>encoding</code> 参数指定编码</li>
<li>使用 <code>with</code> 语句来自动调用 <code>close()</code> 方法</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 一次性读取整个文件内容</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        print(f.read())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通过for-in循环逐行读取</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, mode=<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            print(line, end=<span class="string">''</span>)</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取文件按行读取到列表中</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">    print(lines)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<h3 id="读写二进制文件"><a href="#读写二进制文件" class="headerlink" title="读写二进制文件"></a>读写二进制文件</h3><ul>
<li>使用 <code>rb</code> 读取二进制图片</li>
<li>使用 <code>wb</code> 写入二进制图片</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'python.jpg'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> fs1:</span><br><span class="line">            data = fs1.read()</span><br><span class="line">            print(type(data))  <span class="comment"># &lt;class 'bytes'&gt;</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'python_bak.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fs2:</span><br><span class="line">            fs2.write(data)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'指定的文件无法打开.'</span>)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">'读写文件时出现错误.'</span>)</span><br><span class="line">    print(<span class="string">'程序执行结束.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<h3 id="读写-JSON-文件"><a href="#读写-JSON-文件" class="headerlink" title="读写 JSON 文件"></a>读写 JSON 文件</h3><ul>
<li><strong>序列化</strong>：把变量从内存中变成可存储或传输的过程称之为序列化。</li>
<li><strong>反序列化</strong>：把变量从序列化的对象重新读到内存里称之为反序列化。</li>
<li><strong><code>json</code> 库</strong>：可以实现 Python 对象和 <code>JSON</code> 格式的序列化和反序列化。</li>
<li><strong><code>pickle</code> 库</strong>：使用特有的序列化协议来序列化数据。</li>
</ul>
<table>
<thead>
<tr>
<th>json 库方法</th>
<th>具体含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>dump</code></td>
<td>将 Python 对象按照 <code>JSON</code> 格式序列化到文件中</td>
</tr>
<tr>
<td><code>dumps</code></td>
<td>将 Python 对象处理成 <code>JSON</code> 格式的字符串</td>
</tr>
<tr>
<td><code>load</code></td>
<td>将文件中的 <code>JSON</code> 数据反序列化成对象</td>
</tr>
<tr>
<td><code>loads</code></td>
<td>将字符串的内容反序列化成 Python 对象</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    mydict = &#123;</span><br><span class="line">        <span class="string">'name'</span>: <span class="string">'狄仁杰'</span>,</span><br><span class="line">        <span class="string">'age'</span>: <span class="number">38</span>,</span><br><span class="line">        <span class="string">'qq'</span>: <span class="number">957658</span>,</span><br><span class="line">        <span class="string">'friends'</span>: [<span class="string">'王大锤'</span>, <span class="string">'李元芳'</span>],</span><br><span class="line">        <span class="string">'cars'</span>: [</span><br><span class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'BYD'</span>, <span class="string">'max_speed'</span>: <span class="number">180</span>&#125;,</span><br><span class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'Audi'</span>, <span class="string">'max_speed'</span>: <span class="number">280</span>&#125;,</span><br><span class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'Benz'</span>, <span class="string">'max_speed'</span>: <span class="number">320</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'data.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fs:</span><br><span class="line">            json.dump(mydict, fs)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    print(<span class="string">'保存数据完成!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">JSON 类型</th>
<th align="left">Python 类型</th>
</tr>
</thead>
<tbody><tr>
<td align="left">{}</td>
<td align="left"><code>dict</code></td>
</tr>
<tr>
<td align="left">[]</td>
<td align="left"><code>list</code></td>
</tr>
<tr>
<td align="left">“string”</td>
<td align="left"><code>str</code></td>
</tr>
<tr>
<td align="left">1234.56</td>
<td align="left"><code>int</code> 或 <code>float</code></td>
</tr>
<tr>
<td align="left">true/false</td>
<td align="left"><code>True</code> / <code>False</code></td>
</tr>
<tr>
<td align="left">null</td>
<td align="left"><code>None</code></td>
</tr>
</tbody></table>
<p><strong>示例</strong>：<code>io_pickle.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们存储相关对象的文件的名称</span></span><br><span class="line">shoplistfile = <span class="string">'shoplist.data'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要购买的物品清单</span></span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备写入文件</span></span><br><span class="line">f = open(shoplistfile, <span class="string">'wb'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转储对象至文件</span></span><br><span class="line">pickle.dump(shoplist, f)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除 shoplist 变量</span></span><br><span class="line"><span class="keyword">del</span> shoplist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新打开存储文件</span></span><br><span class="line">f = open(shoplistfile, <span class="string">'rb'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件中载入对象</span></span><br><span class="line">storedlist = pickle.load(f)</span><br><span class="line">print(storedlist)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python io_pickle.py</span><br><span class="line">[<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 代码规范</title>
    <url>/blog/2019/10/24/python-rules/</url>
    <content><![CDATA[<h2 id="格式规范"><a href="#格式规范" class="headerlink" title="格式规范"></a>格式规范</h2><ul>
<li><p><strong>缩进</strong>：统一使用 <code>4</code> 个空格进行缩进</p>
</li>
<li><p><strong>行宽</strong>：每行代码尽量不超过 <code>80</code> 个字符</p>
</li>
<li><p><strong>引号</strong>：自然语言使用双引号，机器标识使用单引号</p>
</li>
<li><p><strong>空行</strong>：模块级函数和类定义之间空两行，类成员函数之间空一行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编码</strong>：文件使用 <code>UTF-8</code> 编码，文件头部加入 <code>#-*-conding:utf-8-*-</code> 标识</p>
</li>
<li><p><strong>import</strong>：<code>import 语句</code> 应该分行书写</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line"><span class="keyword">import</span> sys,os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> Popen, PIPE</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>空格</strong>：</p>
<ul>
<li>在二元运算符两边各空一格 <code>[=, -, +=, ==, &gt;, in, is not, and]</code></li>
<li>函数的参数列表中，<code>,</code> 之后要有空格</li>
<li>函数的参数列表中，默认值等号两边不要添加空格</li>
<li>左括号之后，右括号之前不要加多余的空格</li>
<li>字典对象的左括号之前不要多余的空格</li>
<li>不要为对齐赋值语句而使用的额外空格</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line">i = i + <span class="number">1</span></span><br><span class="line">submitted += <span class="number">1</span></span><br><span class="line">x = x * <span class="number">2</span> - <span class="number">1</span></span><br><span class="line">hypot2 = x * x + y * y</span><br><span class="line">c = (a + b) * (a - b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line">i=i+<span class="number">1</span></span><br><span class="line">submitted +=<span class="number">1</span></span><br><span class="line">x = x*<span class="number">2</span> - <span class="number">1</span></span><br><span class="line">hypot2 = x*x + y*y</span><br><span class="line">c = (a+b) * (a-b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real,imag)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag=<span class="number">0.0</span>)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag = <span class="number">0.0</span>)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line">spam(ham[<span class="number">1</span>], &#123;eggs: <span class="number">2</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line">spam( ham[<span class="number">1</span>], &#123; eggs : <span class="number">2</span> &#125; )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line">dict[<span class="string">'key'</span>] = list[index]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line">dict [<span class="string">'key'</span>] = list [index]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line">x = <span class="number">1</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line">long_variable = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line">x             = <span class="number">1</span></span><br><span class="line">y             = <span class="number">2</span></span><br><span class="line">long_variable = <span class="number">3</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>换行</strong>：</p>
<ul>
<li>第二行缩进到括号的起始处</li>
<li>禁止复合语句，即一行中包含多个语句</li>
<li><code>if/for/while</code> 一定要换行</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">foo = long_function_name(var_one, var_two,</span><br><span class="line">                         var_three, var_four)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line">do_first()</span><br><span class="line">do_second()</span><br><span class="line">do_third()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line">do_first();do_second();do_third();</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正确的写法</span></span><br><span class="line"><span class="keyword">if</span> foo == <span class="string">'blah'</span>:</span><br><span class="line">    do_blah_thing()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不推荐的写法</span></span><br><span class="line"><span class="keyword">if</span> foo == <span class="string">'blah'</span>: do_blash_thing()</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>docstring</strong>：所有的公共模块、函数、类、方法，都应该写 <code>docstring</code></p>
</li>
</ul>
<h2 id="注释规范"><a href="#注释规范" class="headerlink" title="注释规范"></a>注释规范</h2><ul>
<li>在代码的关键部分，能写注释的要尽量写注释</li>
<li>比较重要的注释段，使用多个等号隔开，可以更加醒目，突出重要性</li>
<li>文档注释以 “”” 开头和结尾，首行不换行，如有多行，末行必需换行</li>
<li>要在文档注释复制函数定义原型，而是具体描述其具体内容，解释具体参数和返回值等</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">app = create_app(name, options)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================</span></span><br><span class="line"><span class="comment"># 请勿在此处添加 get post等app路由行为 !!!</span></span><br><span class="line"><span class="comment"># =====================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">#  不推荐的写法(不要写函数原型等废话)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">"""function(a, b) -&gt; list"""</span></span><br><span class="line">    ... ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  正确的写法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">"""计算并返回a到b范围内数据的平均值"""</span></span><br><span class="line">    ... ...</span><br></pre></td></tr></table></figure>

<h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><ul>
<li><strong>模块</strong>：模块名尽量使用小写命名，首字母保持小写，尽量不要用下划线</li>
<li><strong>类</strong>：类名使用驼峰 (CamelCase) 命名风格，首字母大写，私有类可用一个下划线开头</li>
<li><strong>函数</strong>：函数名一律小写，如有多个单词，用下划线隔开，私有函数可用一个下划线开头</li>
<li><strong>变量</strong>：变量名尽量小写，如有多个单词，用下划线隔开</li>
<li><strong>常量</strong>：常量名采用全大写，如有多个单词，使用下划线隔开</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 模块命名</span></span><br><span class="line"><span class="keyword">import</span> decoder</span><br><span class="line"><span class="keyword">import</span> html_parser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类命名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Farm</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimalFarm</span><span class="params">(Farm)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 私有类命名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_PrivateFarm</span><span class="params">(Farm)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 函数命名</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_with_env</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 私有函数命名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_private_func</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line"><span class="comment"># 变量命名</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    school_name = <span class="string">''</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 常量命名</span></span><br><span class="line">MAX_CLIENT = <span class="number">100</span></span><br><span class="line">MAX_CONNECTION = <span class="number">1000</span></span><br><span class="line">CONNECTION_TIMEOUT = <span class="number">600</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 测试</title>
    <url>/blog/2019/10/24/python-testing/</url>
    <content><![CDATA[<p><strong>单元测试</strong>：<code>unittest</code>、<code>setUp()</code>、<code>tearDown()</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mydict <span class="keyword">import</span> Dict</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestDict</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_init</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict(a=<span class="number">1</span>, b=<span class="string">'test'</span>)</span><br><span class="line">        self.assertEqual(d.a, <span class="number">1</span>)</span><br><span class="line">        self.assertEqual(d.b, <span class="string">'test'</span>)</span><br><span class="line">        self.assertTrue(isinstance(d, dict))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_key</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        d[<span class="string">'key'</span>] = <span class="string">'value'</span></span><br><span class="line">        self.assertEqual(d.key, <span class="string">'value'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_attr</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        d.key = <span class="string">'value'</span></span><br><span class="line">        self.assertTrue(<span class="string">'key'</span> <span class="keyword">in</span> d)</span><br><span class="line">        self.assertEqual(d[<span class="string">'key'</span>], <span class="string">'value'</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_keyerror</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        <span class="keyword">with</span> self.assertRaises(KeyError):</span><br><span class="line">            value = d[<span class="string">'empty'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_attrerror</span><span class="params">(self)</span>:</span></span><br><span class="line">        d = Dict()</span><br><span class="line">        <span class="keyword">with</span> self.assertRaises(AttributeError):</span><br><span class="line">            value = d.empty</span><br><span class="line">            </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure>

<p><strong>virtualenv</strong>：为应用提供了隔离的 <code>Python</code> 运行环境，解决了不同应用间多版本的冲突问题。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 错误与异常</title>
    <url>/blog/2019/10/24/python-exception/</url>
    <content><![CDATA[<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ul>
<li><code>try..except</code>：一般来说我们会将所有可能引发异常或错误的语句放在 <code>try</code> 代码块中，将错误处理代码放置在 <code>except</code> 代码块中。</li>
<li><code>finally</code>：总是会执行代码块，不论程序正常还是异常都会执行到。</li>
<li><code>raise</code>：抛出异常，你能够引发的错误或异常必须是直接或间接从属于 <code>Exception</code>（异常） 类的派生类。</li>
<li><code>as</code>：异常类别名。</li>
</ul>
<p><strong>示例</strong>：<code>exceptions_finally.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">f = <span class="literal">None</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">"poem.txt"</span>)</span><br><span class="line">    <span class="comment"># 我们常用的文件阅读风格</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        line = f.readline()</span><br><span class="line">        <span class="keyword">if</span> len(line) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(line, end=<span class="string">''</span>)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line">        print(<span class="string">"Press ctrl+c now"</span>)</span><br><span class="line">        <span class="comment"># 为了确保它能运行一段时间</span></span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line">    print(<span class="string">"Could not find file poem.txt"</span>)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt <span class="keyword">as</span> ki:</span><br><span class="line">    print(<span class="string">"!! You cancelled the reading from the file."</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        f.close()</span><br><span class="line">    print(<span class="string">"(Cleaning up: Closed the file)"</span>)</span><br><span class="line">    </span><br><span class="line">输出：</span><br><span class="line">$ python exceptions_finally.py</span><br><span class="line">Programming <span class="keyword">is</span> fun</span><br><span class="line">Press ctrl+c now</span><br><span class="line">^C!! You cancelled the reading <span class="keyword">from</span> the file.</span><br><span class="line">(Cleaning up: Closed the file)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 面向对象</title>
    <url>/blog/2019/10/24/python-oop/</url>
    <content><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>一个<strong>类（Class）</strong>能够创建一种新的类型（Type），其中<strong>对象（Object）</strong>就是类的<strong>实例（Instance）</strong>，这种从属于对象或类的变量叫作<strong>字段（Field）</strong>，对象还可以使用属于类的函数来实现某些功能，这种函数叫作类的<strong>方法（Method）</strong>，字段与方法通称类的<strong>属性（Attribute）</strong>。</p>
<p><strong><code>self</code></strong>：类方法与普通函数只有一种特定的区别，前者必须多加一个 <code>self</code> 参数在参数列表开头。</p>
<p><strong>示例</strong>：<code>oop_method.py</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say_hi</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'Hello, how are you?'</span>)</span><br><span class="line"></span><br><span class="line">p = Person()</span><br><span class="line">p.say_hi()</span><br><span class="line"><span class="comment"># 前面两行同样可以写作</span></span><br><span class="line"><span class="comment"># Person().say_hi()</span></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python oop_method.py</span><br><span class="line">Hello, how are you?</span><br></pre></td></tr></table></figure>

<p><strong><code>__init__</code></strong> ：此方法会在类的对象被实例化（Instantiated）时立即运行，对目标对象进行初始化操作。</p>
<p><strong>示例</strong>：<code>oop_init.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say_hi</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'Hello, my name is'</span>, self.name)</span><br><span class="line"></span><br><span class="line">p = Person(<span class="string">'Swaroop'</span>)</span><br><span class="line">p.say_hi()</span><br><span class="line"><span class="comment"># 前面两行同时也能写作</span></span><br><span class="line"><span class="comment"># Person('Swaroop').say_hi()</span></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python oop_init.py</span><br><span class="line">Hello, my name <span class="keyword">is</span> Swaroop</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>类变量（Class Variable）</strong>：共享的，可以被属于该类的所有实例访问。</li>
<li><strong>对象变量（Object variable）</strong>：由类的每一个独立的对象或实例所拥有。</li>
</ul>
<p><strong>示例</strong>：<code>oop_objvar.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Robot</span>:</span></span><br><span class="line">    <span class="string">"""表示有一个带有名字的机器人"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 一个类变量，用来计数机器人的数量</span></span><br><span class="line">    population = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="string">"""初始化数据"""</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 一个对象变量</span></span><br><span class="line">        self.name = name</span><br><span class="line">        print(<span class="string">"(Initializing &#123;&#125;)"</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 当有人被创建时，机器人将会增加人口数量</span></span><br><span class="line">        Robot.population += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">die</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""我挂了"""</span></span><br><span class="line">        print(<span class="string">"&#123;&#125; is being destroyed!"</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">        Robot.population -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> Robot.population == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"&#123;&#125; was the last one."</span>.format(self.name))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"There are still &#123;:d&#125; robots working."</span>.format(</span><br><span class="line">                Robot.population))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say_hi</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""来自机器人的诚挚问候：没问题，你做得到！"""</span></span><br><span class="line">        print(<span class="string">"Greetings, my masters call me &#123;&#125;."</span>.format(self.name))</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 类方法</span></span><br><span class="line"><span class="meta">    @classmethod  </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">how_many</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""打印出当前的人口数量"""</span></span><br><span class="line">        print(<span class="string">"We have &#123;:d&#125; robots."</span>.format(cls.population))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">droid1 = Robot(<span class="string">"R2-D2"</span>)</span><br><span class="line">droid1.say_hi()</span><br><span class="line">Robot.how_many()</span><br><span class="line"></span><br><span class="line">droid2 = Robot(<span class="string">"C-3PO"</span>)</span><br><span class="line">droid2.say_hi()</span><br><span class="line">Robot.how_many()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nRobots can do some work here.\n"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Robots have finished their work. So let's destroy them."</span>)</span><br><span class="line">droid1.die()</span><br><span class="line">droid2.die()</span><br><span class="line"></span><br><span class="line">Robot.how_many()</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python oop_objvar.py</span><br><span class="line">(Initializing R2-D2)</span><br><span class="line">Greetings, my masters call me R2-D2.</span><br><span class="line">We have <span class="number">1</span> robots.</span><br><span class="line">(Initializing C<span class="number">-3</span>PO)</span><br><span class="line">Greetings, my masters call me C<span class="number">-3</span>PO.</span><br><span class="line">We have <span class="number">2</span> robots.</span><br><span class="line"></span><br><span class="line">Robots can do some work here.</span><br><span class="line"></span><br><span class="line">Robots have finished their work. So let<span class="string">'s destroy them.</span></span><br><span class="line"><span class="string">R2-D2 is being destroyed!</span></span><br><span class="line"><span class="string">There are still 1 robots working.</span></span><br><span class="line"><span class="string">C-3PO is being destroyed!</span></span><br><span class="line"><span class="string">C-3PO was the last one.</span></span><br><span class="line"><span class="string">We have 0 robots.</span></span><br></pre></td></tr></table></figure>

<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>面向对象编程的一大优点是对代码的<strong>重用（Reuse）</strong>，重用的一种实现方法就是通过<strong>继承（Inheritance）</strong>机制，继承最好是想象成在类之间实现<strong>类型与子类型（Type and Subtype）</strong>关系的工具。</p>
<ul>
<li><strong>多态性（Polymorphism）</strong>：子类和父类存在相同的方法时，子类覆盖了父类的方法。</li>
<li><strong>基类（Base Class）</strong>/ <strong>超类（Superclass）</strong>：<code>SchoolMember</code> 类</li>
<li><strong>派生类（Derived Classes）</strong>/ <strong>子类（Subclass）</strong>：<code>Teacher</code> 和 <code>Student</code> 类</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">            ┌───────────────┐</span><br><span class="line">            │ SchoolMember  │</span><br><span class="line">            └───────────────┘</span><br><span class="line">                    │</span><br><span class="line">       ┌────────────┴────────────┐</span><br><span class="line">       │                         │</span><br><span class="line">       ▼                         ▼</span><br><span class="line">┌─────────────┐           ┌─────────────┐</span><br><span class="line">│   Teacher   │           │   Student   │</span><br><span class="line">└─────────────┘           └─────────────┘</span><br></pre></td></tr></table></figure>

<p><strong>示例</strong>：<code>oop_subclass.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SchoolMember</span>:</span></span><br><span class="line">    <span class="string">'''代表任何学校里的成员。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        print(<span class="string">'(Initialized SchoolMember: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''告诉我有关我的细节。'''</span></span><br><span class="line">        print(<span class="string">'Name:"&#123;&#125;" Age:"&#123;&#125;"'</span>.format(self.name, self.age), end=<span class="string">" "</span>)</span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(SchoolMember)</span>:</span></span><br><span class="line">    <span class="string">'''代表一位老师。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, salary)</span>:</span></span><br><span class="line">        SchoolMember.__init__(self, name, age)</span><br><span class="line">        self.salary = salary</span><br><span class="line">        print(<span class="string">'(Initialized Teacher: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        SchoolMember.tell(self)</span><br><span class="line">        print(<span class="string">'Salary: "&#123;:d&#125;"'</span>.format(self.salary))</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(SchoolMember)</span>:</span></span><br><span class="line">    <span class="string">'''代表一位学生。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, marks)</span>:</span></span><br><span class="line">        SchoolMember.__init__(self, name, age)</span><br><span class="line">        self.marks = marks</span><br><span class="line">        print(<span class="string">'(Initialized Student: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        SchoolMember.tell(self)</span><br><span class="line">        print(<span class="string">'Marks: "&#123;:d&#125;"'</span>.format(self.marks))</span><br><span class="line">        </span><br><span class="line">t = Teacher(<span class="string">'Mrs. Shrividya'</span>, <span class="number">40</span>, <span class="number">30000</span>)</span><br><span class="line">s = Student(<span class="string">'Swaroop'</span>, <span class="number">25</span>, <span class="number">75</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印一行空白行</span></span><br><span class="line">print()</span><br><span class="line"></span><br><span class="line">members = [t, s]</span><br><span class="line"><span class="keyword">for</span> member <span class="keyword">in</span> members:</span><br><span class="line">    <span class="comment"># 对全体师生工作</span></span><br><span class="line">    member.tell()</span><br><span class="line">    </span><br><span class="line">输出：</span><br><span class="line">$ python oop_subclass.py</span><br><span class="line">(Initialized SchoolMember: Mrs. Shrividya)</span><br><span class="line">(Initialized Teacher: Mrs. Shrividya)</span><br><span class="line">(Initialized SchoolMember: Swaroop)</span><br><span class="line">(Initialized Student: Swaroop)</span><br><span class="line"></span><br><span class="line">Name:<span class="string">"Mrs. Shrividya"</span> Age:<span class="string">"40"</span> Salary: <span class="string">"30000"</span></span><br><span class="line">Name:<span class="string">"Swaroop"</span> Age:<span class="string">"25"</span> Marks: <span class="string">"75"</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 模块和包</title>
    <url>/blog/2019/10/24/python-module/</url>
    <content><![CDATA[<h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><p><strong>模块（Modules）</strong>：重用代码是函数，重用函数是模块，以 <code>.py</code> 为扩展名就可以是一个模块，可以避免函数命名冲突。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># module1.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'hello, world!'</span>)</span><br><span class="line">   </span><br><span class="line"><span class="comment"># module2.py</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'goodbye, world!'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># test.py</span></span><br><span class="line"><span class="keyword">import</span> module1 <span class="keyword">as</span> m1</span><br><span class="line"><span class="keyword">import</span> module2 <span class="keyword">as</span> m2</span><br><span class="line"></span><br><span class="line">m1.foo()  <span class="comment"># 输出hello, world!</span></span><br><span class="line">m2.foo()  <span class="comment"># 输出goodbye, world!</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>Warning：</strong>一般来说，你应该尽量避免使用 <code>from...import</code> 语句，而去使用 <code>import</code> 语句。这是为了避免在你的程序中出现名称冲突，同时也为了使程序更加易读。</p>
</blockquote>
<p> <code>__name__</code> ：是 Python 中一个隐含的变量，它代表了模块的名字，只有被 Python 解释器直接执行的模块的名字才是 <code>__main__</code>。</p>
<p><strong>示例</strong>：<code>module_using_name.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'This program is being run by itself'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'I am being imported from another module'</span>)</span><br><span class="line">    </span><br><span class="line">输出：</span><br><span class="line">$ python module_using_name.py</span><br><span class="line">This program <span class="keyword">is</span> being run by itself</span><br><span class="line"></span><br><span class="line">$ python</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> module_using_name</span><br><span class="line">I am being imported <span class="keyword">from</span> another module</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>

<h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><p><strong>包（Packages）</strong>：是指一个包含模块与一个特殊的 <code>__init__.py</code> 文件的文件夹，能够方便地组织模块的层次结构。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mycompany</span><br><span class="line"> ├─ web</span><br><span class="line"> │  ├─ __init__.py</span><br><span class="line"> │  ├─ utils.py</span><br><span class="line"> │  └─ www.py</span><br><span class="line"> ├─ __init__.py</span><br><span class="line"> ├─ emploees.py</span><br><span class="line"> └─ utils.py</span><br></pre></td></tr></table></figure>

<p><strong>总结</strong>：如同函数是程序中的可重用部分那般，模块是一种可重用的程序，包是用以组织模块的另一种层次结构。Python 所附带的标准库就是这样一组有关包与模块的例子。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 函数</title>
    <url>/blog/2019/10/24/python-function/</url>
    <content><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p><strong>函数</strong>（<code>Functions</code>）：是指可重复使用的程序片段。</p>
<p><strong>定义函数</strong>：可以通过关键字 <code>def</code> 来定义，关键字 <code>return</code> 来返回一个值，关键字 <code>pass</code> 指示没有内容的语句块。</p>
<p><strong>调用函数</strong>：可以在任何地方运行代码块，称为调用（<code>Calling</code>）函数。</p>
<p><strong>示例</strong>：<code>function1.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 该块属于这一函数</span></span><br><span class="line">    print(<span class="string">'hello world'</span>)</span><br><span class="line"><span class="comment"># 函数结束</span></span><br><span class="line"></span><br><span class="line">say_hello()  <span class="comment"># 调用函数</span></span><br><span class="line">say_hello()  <span class="comment"># 再次调用函数</span></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python function1.py</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure>

<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p><strong>形参</strong>：在定义函数时给定的名称称作形参（<code>Parameters</code>）。</p>
<p><strong>实参</strong>：在调用函数时你所提供给函数的值称作实参（<code>Arguments</code>）。</p>
<p><strong>示例</strong>：<code>function_param.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_max</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a &gt; b:</span><br><span class="line">        print(a, <span class="string">'is maximum'</span>)</span><br><span class="line">    <span class="keyword">elif</span> a == b:</span><br><span class="line">        print(a, <span class="string">'is equal to'</span>, b)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(b, <span class="string">'is maximum'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接传递字面值</span></span><br><span class="line">print_max(<span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">x = <span class="number">5</span></span><br><span class="line">y = <span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以参数的形式传递变量</span></span><br><span class="line">print_max(x, y)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python function_param.py</span><br><span class="line"><span class="number">4</span> <span class="keyword">is</span> maximum</span><br><span class="line"><span class="number">7</span> <span class="keyword">is</span> maximum</span><br></pre></td></tr></table></figure>

<p><strong>默认参数</strong>：可以通过在函数定义时附加一个赋值运算符（<code>=</code>）来为参数指定默认参数值。</p>
<p><strong>示例</strong>：<code>function_default.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(message, times=<span class="number">1</span>)</span>:</span></span><br><span class="line">    print(message * times)</span><br><span class="line"></span><br><span class="line">say(<span class="string">'Hello'</span>)</span><br><span class="line">say(<span class="string">'World'</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python function_default.py</span><br><span class="line">Hello</span><br><span class="line">WorldWorldWorldWorldWorld</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>Warning</strong>：只有那些位于参数列表末尾的参数才能被赋予默认参数值，即在函数的参数列表中拥有默认参数值的参数不能位于没有默认参数值的参数之前！</p>
</blockquote>
<p><strong>关键字参数</strong>：使用命名（关键字）而非位置来指定函数中的参数，不考虑参数的顺序，函数使用更加容易。</p>
<p><strong>示例</strong>：<code>function_keyword.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b=<span class="number">5</span>, c=<span class="number">10</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'a is'</span>, a, <span class="string">'and b is'</span>, b, <span class="string">'and c is'</span>, c)</span><br><span class="line"></span><br><span class="line">func(<span class="number">3</span>, <span class="number">7</span>)</span><br><span class="line">func(<span class="number">25</span>, c=<span class="number">24</span>)</span><br><span class="line">func(c=<span class="number">50</span>, a=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python function_keyword.py</span><br><span class="line">a <span class="keyword">is</span> <span class="number">3</span> <span class="keyword">and</span> b <span class="keyword">is</span> <span class="number">7</span> <span class="keyword">and</span> c <span class="keyword">is</span> <span class="number">10</span></span><br><span class="line">a <span class="keyword">is</span> <span class="number">25</span> <span class="keyword">and</span> b <span class="keyword">is</span> <span class="number">5</span> <span class="keyword">and</span> c <span class="keyword">is</span> <span class="number">24</span></span><br><span class="line">a <span class="keyword">is</span> <span class="number">100</span> <span class="keyword">and</span> b <span class="keyword">is</span> <span class="number">5</span> <span class="keyword">and</span> c <span class="keyword">is</span> <span class="number">50</span></span><br></pre></td></tr></table></figure>

<p><strong>可变参数</strong>：可以通过使用星号 <code>*</code> 来实现在函数里面能够有任意数量的变量，诸如 <code>*param</code> 的星号参数时汇集成元祖，诸如 <code>**param</code> 的双星号参数时汇集成字典。</p>
<p><strong>示例</strong>：<code>function_varargs.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">total</span><span class="params">(a=<span class="number">5</span>, *numbers, **phonebook)</span>:</span></span><br><span class="line">    print(<span class="string">'a'</span>, a)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历元组中的所有项目</span></span><br><span class="line">    <span class="keyword">for</span> single_item <span class="keyword">in</span> numbers:</span><br><span class="line">        print(<span class="string">'single_item'</span>, single_item)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历字典中的所有项目</span></span><br><span class="line">    <span class="keyword">for</span> first_part, second_part <span class="keyword">in</span> phonebook.items():</span><br><span class="line">        print(first_part,second_part)</span><br><span class="line"></span><br><span class="line">print(total(<span class="number">10</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,Jack=<span class="number">1123</span>,John=<span class="number">2231</span>,Inge=<span class="number">1560</span>))</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python function_varargs.py</span><br><span class="line">a <span class="number">10</span></span><br><span class="line">single_item <span class="number">1</span></span><br><span class="line">single_item <span class="number">2</span></span><br><span class="line">single_item <span class="number">3</span></span><br><span class="line">Inge <span class="number">1560</span></span><br><span class="line">John <span class="number">2231</span></span><br><span class="line">Jack <span class="number">1123</span></span><br><span class="line"><span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p><strong>局部变量</strong>：当在一个函数的定义中声明变量时，它们不会以任何方式与身处函数之外但具有相同名称的变量产生关系，也就是说，这些变量名只存在于函数这一局部（<code>Local</code>）。</p>
<p><strong>示例</strong>：<code>function_local.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(x)</span>:</span></span><br><span class="line">    print(<span class="string">'x is'</span>, x)</span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">    print(<span class="string">'Changed local x to'</span>, x)</span><br><span class="line"></span><br><span class="line">func(x)</span><br><span class="line">print(<span class="string">'x is still'</span>, x)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python function_local.py</span><br><span class="line">x <span class="keyword">is</span> <span class="number">50</span></span><br><span class="line">Changed local x to <span class="number">2</span></span><br><span class="line">x <span class="keyword">is</span> still <span class="number">50</span></span><br></pre></td></tr></table></figure>

<p><strong>全局变量</strong>：可以使用关键字 <code>global</code> 定义于函数之外的变量的值，它的作用域是全局。</p>
<p><strong>示例</strong>：<code>function_global.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'x is'</span>, x)</span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">    print(<span class="string">'Changed global x to'</span>, x)</span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">print(<span class="string">'Value of x is'</span>, x)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python function_global.py</span><br><span class="line">x <span class="keyword">is</span> <span class="number">50</span></span><br><span class="line">Changed <span class="keyword">global</span> x to <span class="number">2</span></span><br><span class="line">Value of x <span class="keyword">is</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>

<p><strong>公有</strong>：有的函数和变量我们希望给别人使用，正常的函数和变量名是公开的，可以被引用。</p>
<p><strong>私有</strong>：有的函数和变量我们希望仅仅在模块内部使用，以 <code>__</code> 开头的函数或变量是私有的。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 流程控制</title>
    <url>/blog/2019/10/24/python-control/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Python 有三种控制流语句： <code>if</code>、<code>for</code> 、<code>while</code>，两种相关语句：<code>break</code>、<code>continue</code>。</p>
<ul>
<li><code>if</code></li>
<li><code>while</code></li>
<li><code>for</code></li>
<li><code>break</code></li>
<li><code>continue</code></li>
</ul>
<h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><p><code>if</code> 语句用以条件检查：如果条件为 <code>true</code>，将运行一块语句，否则运行另一块语句，其中 <code>else</code> 从句是可选的。</p>
<p><strong>示例</strong>：<code>if.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="number">23</span></span><br><span class="line">guess = int(input(<span class="string">'Enter an integer : '</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> guess == number:</span><br><span class="line">    <span class="comment"># 新块从这里开始</span></span><br><span class="line">    print(<span class="string">'Congratulations, you guessed it.'</span>)</span><br><span class="line">    print(<span class="string">'(but you do not win any prizes!)'</span>)</span><br><span class="line">    <span class="comment"># 新块在这里结束</span></span><br><span class="line"><span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">    <span class="comment"># 另一代码块</span></span><br><span class="line">    print(<span class="string">'No, it is a little higher than that'</span>)</span><br><span class="line">    <span class="comment"># 你可以在此做任何你希望在该代码块内进行的事情</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'No, it is a little lower than that'</span>)</span><br><span class="line">    <span class="comment"># 你必须通过猜测一个大于（&gt;）设置数的数字来到达这里。</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line"><span class="comment"># 这最后一句语句将在 if 语句执行完毕后执行。</span></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python <span class="keyword">if</span>.py</span><br><span class="line">Enter an integer : <span class="number">50</span></span><br><span class="line">No, it <span class="keyword">is</span> a little lower than that</span><br><span class="line">Done</span><br><span class="line"></span><br><span class="line">$ python <span class="keyword">if</span>.py</span><br><span class="line">Enter an integer : <span class="number">22</span></span><br><span class="line">No, it <span class="keyword">is</span> a little higher than that</span><br><span class="line">Done</span><br><span class="line"></span><br><span class="line">$ python <span class="keyword">if</span>.py</span><br><span class="line">Enter an integer : <span class="number">23</span></span><br><span class="line">Congratulations, you guessed it.</span><br><span class="line">(but you do <span class="keyword">not</span> win any prizes!)</span><br><span class="line">Done</span><br></pre></td></tr></table></figure>

<h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p><code>while</code> 语句能够让你在条件为真的前提下重复执行某块语句，<code>while</code> 语句是循环（Looping）语句的一种。</p>
<p><strong>示例</strong>：<code>while.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="number">23</span></span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    guess = int(input(<span class="string">'Enter an integer : '</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> guess == number:</span><br><span class="line">        print(<span class="string">'Congratulations, you guessed it.'</span>)</span><br><span class="line">        <span class="comment"># 这将导致 while 循环中止</span></span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">        print(<span class="string">'No, it is a little higher than that.'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'No, it is a little lower than that.'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'The while loop is over.'</span>)</span><br><span class="line">    <span class="comment"># 在这里你可以做你想做的任何事</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python <span class="keyword">while</span>.py</span><br><span class="line">Enter an integer : <span class="number">50</span></span><br><span class="line">No, it <span class="keyword">is</span> a little lower than that.</span><br><span class="line">Enter an integer : <span class="number">22</span></span><br><span class="line">No, it <span class="keyword">is</span> a little higher than that.</span><br><span class="line">Enter an integer : <span class="number">23</span></span><br><span class="line">Congratulations, you guessed it.</span><br><span class="line">The <span class="keyword">while</span> loop <span class="keyword">is</span> over.</span><br><span class="line">Done</span><br></pre></td></tr></table></figure>

<h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p><code>for...in</code> 语句是另一种循环语句，其特点是会在一系列对象上进行遍历。</p>
<p><strong>示例</strong>：<code>for.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">    print(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'The for loop is over'</span>)</span><br><span class="line">    </span><br><span class="line">输出：</span><br><span class="line">$ python <span class="keyword">for</span>.py</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">The <span class="keyword">for</span> loop <span class="keyword">is</span> over</span><br></pre></td></tr></table></figure>

<h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p><code>break</code> 语句用以中断循环语句，也就是中止循环语句的执行。</p>
<p><strong>示例</strong>：<code>break.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    s = input(<span class="string">'Enter something : '</span>)</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">'quit'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'Length of the string is'</span>, len(s))</span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">$ python <span class="keyword">break</span>.py</span><br><span class="line">Enter something : Programming <span class="keyword">is</span> fun</span><br><span class="line">Length of the string <span class="keyword">is</span> <span class="number">18</span></span><br><span class="line">Enter something : When the work <span class="keyword">is</span> done</span><br><span class="line">Length of the string <span class="keyword">is</span> <span class="number">21</span></span><br><span class="line">Enter something : <span class="keyword">if</span> you wanna make your work also fun:</span><br><span class="line">Length of the string <span class="keyword">is</span> <span class="number">37</span></span><br><span class="line">Enter something : use Python!</span><br><span class="line">Length of the string <span class="keyword">is</span> <span class="number">11</span></span><br><span class="line">Enter something : quit</span><br><span class="line">Done</span><br></pre></td></tr></table></figure>

<h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p><code>continue</code> 语句用以跳过当前循环块中的剩余语句，并继续该循环的下一次迭代。</p>
<p><strong>示例</strong>：<code>continue.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    s = input(<span class="string">'Enter something : '</span>)</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">'quit'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> len(s) &lt; <span class="number">3</span>:</span><br><span class="line">        print(<span class="string">'Too small'</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(<span class="string">'Input is of sufficient length'</span>)</span><br><span class="line">    <span class="comment"># 自此处起继续进行其它任何处理</span></span><br><span class="line">    </span><br><span class="line">输出：</span><br><span class="line">$ python <span class="keyword">continue</span>.py</span><br><span class="line">Enter something : a</span><br><span class="line">Too small</span><br><span class="line">Enter something : <span class="number">12</span></span><br><span class="line">Too small</span><br><span class="line">Enter something : abc</span><br><span class="line">Input <span class="keyword">is</span> of sufficient length</span><br><span class="line">Enter something : quit</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 基本数据类型</title>
    <url>/blog/2019/10/24/python-datatype/</url>
    <content><![CDATA[<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="整型（Integers）"><a href="#整型（Integers）" class="headerlink" title="整型（Integers）"></a>整型（Integers）</h3><p>Python 可以处理任意大小的整数：</p>
<ul>
<li><code>Python 2.x</code> 中有 <code>int</code> 和 <code>long</code> 两种类型</li>
<li><code>Python 3.x</code> 中只有 <code>int</code> 类型</li>
</ul>
<h3 id="浮点型（Floats）"><a href="#浮点型（Floats）" class="headerlink" title="浮点型（Floats）"></a>浮点型（Floats）</h3><p>浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，浮点数除了数学写法（如 <code>123.456</code>）之外还支持科学计数法（如 <code>1.23456e2</code>）。</p>
<h3 id="字符串（String）"><a href="#字符串（String）" class="headerlink" title="字符串（String）"></a>字符串（String）</h3><ul>
<li><strong>单引号</strong>：所有引号内的空间，诸如空格与制表符，都将按原样保留</li>
<li><strong>双引号</strong>：被双引号包括的字符串和被单引号括起的字符串其工作机制完全相同</li>
<li><strong>三引号</strong>：可以书写成多行的形式</li>
</ul>
<h3 id="布尔值（Boolean）"><a href="#布尔值（Boolean）" class="headerlink" title="布尔值（Boolean）"></a>布尔值（Boolean）</h3><p>布尔值只有 <code>True</code>、<code>False</code> 两种值，可以将它们分别等价地视为 <code>1</code> 与 <code>0</code>。</p>
<h3 id="列表（List）"><a href="#列表（List）" class="headerlink" title="列表（List）"></a>列表（List）</h3><p><code>list</code> 是一种可变的有序的集合，可以随时添加和删除其中的元素。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">classmates = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加</span></span><br><span class="line">classmates.append(<span class="string">'Adam'</span>)     <span class="comment"># 增加元素到末尾</span></span><br><span class="line">classmates.insert(<span class="number">1</span>, <span class="string">'Jack'</span>)  <span class="comment"># 增加元素到指定位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">classmates.pop(i)             <span class="comment"># 删除指定i位置的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">classmates[i] = <span class="string">'Sarah'</span>       <span class="comment"># 替换指定i位置的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line">len(classmates)               <span class="comment"># 查询列表元素的个数</span></span><br><span class="line">classmates[i]                 <span class="comment"># 查询第i个元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 截取</span></span><br><span class="line">classmates[i:j]               <span class="comment"># i是头上标，j是尾下标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运算符</span></span><br><span class="line">加号 + : 列表连接运算符</span><br><span class="line">星号 * : 重复操作</span><br></pre></td></tr></table></figure>

<h3 id="元祖（Tuple）"><a href="#元祖（Tuple）" class="headerlink" title="元祖（Tuple）"></a>元祖（Tuple）</h3><p><code>tuple</code> 是一种不可变的有序的列表，一旦初始化就不能修改，因为不可变，所以代码更安全。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">classmates = (<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line">classmates[<span class="number">0</span>]t = ()</span><br><span class="line">classmates[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空tuple</span></span><br><span class="line">t = ()</span><br></pre></td></tr></table></figure>

<p><strong>小结</strong>：<code>list</code> 和 <code>tuple</code> 是 Python 内置的有序集合，一个可变，一个不可变。</p>
<h3 id="字典（Dict）"><a href="#字典（Dict）" class="headerlink" title="字典（Dict）"></a>字典（Dict）</h3><p>Python 内置了字典 <code>dict</code>，全称 <code>dictionary</code>，类似于其他语言的 <code>map</code>，使用键-值（<code>key-value</code>）存储，具有极快的查找速度。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">'Michael'</span>: <span class="number">95</span>, <span class="string">'Bob'</span>: <span class="number">75</span>, <span class="string">'Tracy'</span>: <span class="number">85</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入</span></span><br><span class="line">d[<span class="string">'Adam'</span>] = <span class="number">67</span></span><br><span class="line">d[<span class="string">'Jack'</span>] = <span class="number">90</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">d[<span class="string">'Jack'</span>] = <span class="number">88</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">d.pop(<span class="string">'Bob'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line"><span class="string">'Thomas'</span> <span class="keyword">in</span> d      <span class="comment"># in判断key是否存在</span></span><br><span class="line">d.get(<span class="string">'Thomas'</span>)    <span class="comment"># get方法取数据</span></span><br></pre></td></tr></table></figure>

<p>内部存放的顺序和 <code>key</code> 放入顺序没有关系，需要牢记的第一条就是 <code>dict</code> 的 <code>key</code> 必须是<strong>不可变对象</strong>，和 <code>list</code> 比较，<code>dict</code> 有以下几个特点：</p>
<ul>
<li>查找和插入的速度极快，不会随着 <code>key</code> 的增加而变慢。</li>
<li>需要占用大量的内存，内存浪费多。</li>
</ul>
<h3 id="集合（Set）"><a href="#集合（Set）" class="headerlink" title="集合（Set）"></a>集合（Set）</h3><p><code>set</code> 和 <code>dict</code> 类似，是一组不重复 <code>key</code> 的集合，但不存储 <code>value</code>，可以看成无序和无重复元素的集合。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加元素</span></span><br><span class="line">s.add(key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line">s.remove(key)</span><br></pre></td></tr></table></figure>

<h3 id="空值（None）"><a href="#空值（None）" class="headerlink" title="空值（None）"></a>空值（None）</h3><ul>
<li><code>None</code> 是一个特殊的空值</li>
<li><code>None</code> 不能理解为 <code>0</code>，因为 <code>0</code> 是有意义的</li>
</ul>
<h2 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h2><p><strong>常量</strong>：通常用全部大写的变量名表示常量。</p>
<p><strong>变量</strong>：变量名必须是大小写英文、数字和 <code>_</code> 的组合，且不能用数字开头。</p>
<p><strong>占位符</strong>：</p>
<ul>
<li><code>%d</code> ：整数的占位符</li>
<li><code>%f</code> ：小数的占位符</li>
<li><code>%s</code> ：字符串的占位符</li>
<li><code>%x</code> ：十六进制整数占位符</li>
<li><code>%%</code> ：百分号占位符</li>
</ul>
<p><strong>类型转换</strong>：</p>
<ul>
<li><code>int()</code>：将一个数值或字符串转换成整数，可以指定进制</li>
<li><code>float()</code>：将一个字符串转换成浮点数</li>
<li><code>str()</code>：将指定的对象转换成字符串形式，可以指定编码</li>
<li><code>chr()</code>：将整数转换成该编码对应的字符串（一个字符）</li>
<li><code>ord()</code>：将字符串（一个字符）转换成对应的编码（整数）</li>
</ul>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>[]</code> <code>[:]</code></td>
<td>下标，切片</td>
</tr>
<tr>
<td><code>**</code></td>
<td>指数</td>
</tr>
<tr>
<td><code>~</code> <code>+</code> <code>-</code></td>
<td>按位取反, 正负号</td>
</tr>
<tr>
<td><code>*</code> <code>/</code> <code>%</code> <code>//</code></td>
<td>乘，除，模，整除</td>
</tr>
<tr>
<td><code>+</code> <code>-</code></td>
<td>加，减</td>
</tr>
<tr>
<td><code>&gt;&gt;</code> <code>&lt;&lt;</code></td>
<td>右移，左移</td>
</tr>
<tr>
<td><code>&amp;</code></td>
<td>按位与</td>
</tr>
<tr>
<td><code>^</code> `</td>
<td>`</td>
</tr>
<tr>
<td><code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code></td>
<td>小于等于，小于，大于，大于等于</td>
</tr>
<tr>
<td><code>==</code> <code>!=</code></td>
<td>等于，不等于</td>
</tr>
<tr>
<td><code>is</code> <code>is not</code></td>
<td>身份运算符</td>
</tr>
<tr>
<td><code>in</code> <code>not in</code></td>
<td>成员运算符</td>
</tr>
<tr>
<td><code>not</code> <code>or</code> <code>and</code></td>
<td>逻辑运算符</td>
</tr>
<tr>
<td><code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>//=</code> <code>**=</code> <code>&amp;=</code> `</td>
<td>=<code></code>^=<code></code>&gt;&gt;=<code></code>&lt;&lt;=`</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python · 简介安装</title>
    <url>/blog/2019/10/24/python-introduction/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://www.python.org/" target="_blank" rel="noopener">Python</a> 是一种极少数能兼具 <strong>简单</strong> 与 <strong>功能强大</strong> 的编程语言。</p>
<ul>
<li><strong>优点</strong>：优雅、明确、简单</li>
<li><strong>缺点</strong>：执行效率稍低、代码无法加密</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mac上安装</span></span><br><span class="line">$ brew install python3</span><br><span class="line"></span><br><span class="line">$ python -V</span><br><span class="line">Python <span class="number">2.7</span>.<span class="number">10</span></span><br><span class="line"></span><br><span class="line">$ python3 -V</span><br><span class="line">Python <span class="number">3.7</span>.<span class="number">4</span></span><br></pre></td></tr></table></figure>

<h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p><strong>IDE</strong></p>
<ul>
<li><strong><a href="http://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a></strong>：高级文本编辑器</li>
<li><strong><a href="http://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">PyCharm</a></strong>：Python 开发神器</li>
</ul>
<p><strong>注释</strong></p>
<ul>
<li><strong>单行注释</strong>：以 <code>#</code> 开头的语句</li>
<li><strong>多行注释</strong>：以 <code>&quot;&quot;&quot;</code> 开头，<code>&quot;&quot;&quot;</code> 结尾的语句</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">第一个 Python 程序 - hello, world!</span></span><br><span class="line"><span class="string">向伟大的 Guido van Rossum 先生致敬</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Version: 0.1</span></span><br><span class="line"><span class="string">Author: Hui Rao</span></span><br><span class="line"><span class="string">"</span><span class="string">""</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'hello, world!'</span>)</span><br><span class="line">print(<span class="string">'你好'</span>, <span class="string">'世界'</span>)  <span class="comment"># print("你好,世界！")</span></span><br><span class="line">print(<span class="string">'hello'</span>, <span class="string">'world'</span>, sep=<span class="string">', '</span>, <span class="keyword">end</span>=<span class="string">'!'</span>)</span><br><span class="line">print(<span class="string">'goodbye, world'</span>, <span class="keyword">end</span>=<span class="string">'!\n'</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>注意</strong>：Python 程序是 <strong>大小写敏感</strong> 的。</p>
</blockquote>
<p><strong>缩进</strong></p>
<p>Python 语言官方建议使用 <strong>四个空格</strong> 来缩进，放置在一起的语句必须拥有相同的缩进，每一组这样的语句被称为块。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 调优案例 · HMQM</title>
    <url>/blog/2019/10/23/mysql-tuning-hmqm/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-23-174720.png" alt></p>
<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; select table_name,table_rows,CONCAT(TRUNCATE(SUM(data_length)/1024/1024,2),'MB') AS data_size, CONCAT(TRUNCATE(SUM(index_length)/1024/1024,2),'MB') AS index_size from information_schema.tables where TABLE_SCHEMA = 'mqm' and table_name='t_batch';</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| table_name | table_rows | data_size | index_size |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| t_batch    |   10289197 | 4895.00MB | 7578.23MB  |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> idx_group</span><br><span class="line"><span class="keyword">Analyze</span> <span class="keyword">table</span> t_batch;</span><br><span class="line"></span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| table_name | table_rows | data_size | index_size |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| t_batch    |   10657643 | 4895.00MB | 1230.93MB  |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| table_name | table_rows | data_size | index_size |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| t_batch    |    <span class="number">9852520</span> | <span class="number">4895.00</span>MB | <span class="number">2863.00</span>MB  |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_batch <span class="keyword">ADD</span> <span class="keyword">INDEX</span> idx_check_style_id(check_style_id);</span><br><span class="line">Query OK, 0 rows affected (2 min 27.34 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER TABLE t_batch ADD INDEX idx_check_status_id(check_status_id);</span><br><span class="line">Query OK, 0 rows affected (1 min 0.12 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER TABLE t_batch ADD INDEX idx_iqc_leader_id(iqc_leader_id);</span><br><span class="line">Query OK, 0 rows affected (1 min 14.52 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER TABLE t_batch ADD INDEX idx_create_date(create_date);</span><br><span class="line">Query OK, 0 rows affected (53.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER TABLE t_batch ADD INDEX idx_IQC_manager_id(IQC_manager_id);</span><br><span class="line">Query OK, 0 rows affected (1 min 11.37 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER TABLE t_batch ADD INDEX idx_syb_id(syb_id);</span><br><span class="line">Query OK, 0 rows affected (1 min 3.97 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER TABLE t_batch ADD INDEX idx_group(check_style_id, check_status_id, delete_status);</span><br><span class="line">Query OK, 0 rows affected (2 min 3.08 sec)</span><br></pre></td></tr></table></figure>

<p><strong>测试数据库</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">实例：<span class="number">10.138</span>.<span class="number">22.192</span>:<span class="number">3306</span>/mqm</span><br><span class="line">账号：hmqm/hmqm</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">+----+-------------+---------+-------------+----------------------------------------------------------+---------------------------------------+---------+------+------+---------------------------------------------------------------------+</span><br><span class="line">| id | select_type | table   | type        | possible_keys                                            | key                                   | key_len | ref  | rows | Extra                                                               |</span><br><span class="line">+----+-------------+---------+-------------+----------------------------------------------------------+---------------------------------------+---------+------+------+---------------------------------------------------------------------+</span><br><span class="line">|  <span class="number">1</span> | SIMPLE      | t_batch | index_merge | idx_check_style_id,idx_check_status_id,idx_iqc_leader_id | idx_check_status_id,idx_iqc_leader_id | <span class="number">5</span>,<span class="number">63</span>    | NULL | <span class="number">4955</span> | Using intersect(idx_check_status_id,idx_iqc_leader_id); Using where |</span><br><span class="line">+----+-------------+---------+-------------+----------------------------------------------------------+---------------------------------------+---------+------+------+---------------------------------------------------------------------+</span><br><span class="line"></span><br><span class="line">type: index_merge: 表示查询使用了两个以上的索引，最后取交集或者并集，常见and ，or的条件使用了不同的索引，官方排序这个在ref_or_null之后，但是实际上由于要读取所个索引，性能可能大部分时间都不如range</span><br><span class="line">extra: using intersect，表示使用and的各个索引的条件时，该信息表示是从处理结果获取交集</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> <span class="string">''</span> batch_fail_id,<span class="string">''</span> uuid_Fail,b.send_goods_No,b.test_type,b.order_no,b.row_no,b.bu,b.mtl_no,b.mtl_name,b.mtl_group,b.mtl_group_name,b.materiel_category_id,b.materiel_category_name,b.pattern_amount,b.plan_pattern_amount,b.goods_unit,b.plan_send_day,b.fact_send_Day,b.stock_Day,b.supply_code,b.supply_name,b.supply_check_level,b.sap_mark_id,b.sap_mark_name,b.syb_id,b.syb_name,b.check_style_id,b.check_style_name,b.check_type_id,b.check_type_name,b.QC_STATUS,b.QC_STATUS_INSTR_DATE,b.QC_NO,b.factory_code,b.goods_sort,b.price_unit,b.stock_price,b.LICHA,b.BSART,b.LGORT,b.plan_Date,b.TEST_CONCLUSION,b.IQC_manager_id,b.IQC_manager_name,b.iqc_leader_id,b.iqc_leader_name,b.test_complete_day,b.test_start_day,b.new_or_old,b.check_status_id,b.is_appeal,b.is_start_check,b.standard_type,b.check_reason,b.is_stop,b.check_time,b.instance_id,b.create_date createDate,b.delete_status</span><br><span class="line"><span class="keyword">from</span> t_batch b</span><br><span class="line"><span class="keyword">where</span> b.mtl_no <span class="keyword">like</span> <span class="keyword">CONCAT</span>(<span class="string">'%470A%'</span>) </span><br><span class="line"><span class="keyword">and</span> b.syb_id <span class="keyword">in</span> (<span class="number">18</span>,<span class="number">306</span>,<span class="number">323</span>,<span class="number">17</span>,<span class="number">483</span>,<span class="number">15</span>,<span class="number">519</span>)</span><br><span class="line"><span class="keyword">and</span> b.lgort <span class="keyword">like</span> <span class="keyword">CONCAT</span>(<span class="string">'%J191023878681%'</span>)</span><br><span class="line"><span class="keyword">and</span> b.delete_status = <span class="string">'N'</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">select</span> f.batch_fail_id,f.uuid,f.send_goods_No,f.test_type,f.order_no,f.row_no,f.bu,f.mtl_no,f.mtl_name,f.mtl_group,f.mtl_group_name,f.materiel_category_id,f.materiel_category_name,f.pattern_amount,f.plan_pattern_amount,f.goods_unit,f.plan_send_day,f.fact_send_Day,f.stock_Day,f.supply_code,f.supply_name,f.supply_check_level,f.sap_mark_id,f.sap_mark_name,f.syb_id,f.syb_name,f.check_style_id,f.check_style_name,f.check_type_id,f.check_type_name,f.QC_STATUS,f.QC_STATUS_INSTR_DATE,f.QC_NO,f.factory_code,f.goods_sort,f.price_unit,f.stock_price,f.LICHA,f.BSART,f.LGORT,f.plan_Date,f.TEST_CONCLUSION,f.IQC_manager_id,f.IQC_manager_name,f.iqc_leader_id,f.iqc_leader_name,f.test_complete_day,f.test_start_day,f.new_or_old,f.check_status_id,f.is_appeal,f.is_start_check,f.standard_type,f.check_reason,f.is_stop,f.check_time,f.instance_id,f.create_date createDate,f.delete_status</span><br><span class="line"><span class="keyword">from</span> t_batch_fail f</span><br><span class="line"><span class="keyword">where</span> f.mtl_no <span class="keyword">like</span> <span class="keyword">CONCAT</span>(<span class="string">'%470A%'</span>)</span><br><span class="line"><span class="keyword">and</span> f.syb_id <span class="keyword">in</span> (<span class="number">18</span>,<span class="number">306</span>,<span class="number">323</span>,<span class="number">17</span>,<span class="number">483</span>,<span class="number">15</span>,<span class="number">519</span>)</span><br><span class="line"><span class="keyword">and</span> f.lgort <span class="keyword">like</span> <span class="keyword">CONCAT</span>(<span class="string">'%J191023878681%'</span>) </span><br><span class="line"><span class="keyword">and</span> f.delete_status = <span class="string">'N'</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> createDate <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">10</span></span><br><span class="line"></span><br><span class="line">// 查询时 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">10</span></span><br><span class="line">// 导出时 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">5000</span></span><br><span class="line">// 外检查询入场数据，常用的参数：物料号mtl_no截取后几位，看单号lgort，系统自动获取外检的事业部信息syb_id,有时候是一个事业部，有时候是多个事业部遍历。</span><br><span class="line"><span class="keyword">and</span> b.syb_id = <span class="number">18</span>    </span><br><span class="line"><span class="keyword">and</span> b.syb_id <span class="keyword">in</span> (<span class="number">18</span>,<span class="number">306</span>,<span class="number">323</span>,<span class="number">17</span>,<span class="number">483</span>,<span class="number">15</span>,<span class="number">519</span>) 这两个条件只会存在一个。</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>MySQL · 使用 XtraBackup 迁移数据库</title>
    <url>/blog/2019/10/22/mysql-migration/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><strong>需求</strong>：xx 项目，将生产环境数据库迁移至测试环境，迁移数据量约 <code>185GB</code></p>
<p><strong>环境</strong>：</p>
<ul>
<li>生产库：<code>10.138.22.218:3100</code>，<code>MySQL 5.6.27</code> 版本</li>
<li>测试库：<code>10.138.22.192:3306</code>，<code>MySQL 5.6.27</code> 版本</li>
</ul>
<blockquote>
<p><strong>Tips</strong>：数据库版本一致，且配置文件 <code>my.cnf</code> 一致，才能使用 <code>XtraBackup</code></p>
</blockquote>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p><strong>准备条件</strong>：</p>
<ul>
<li>生产库和测试库服务器都已<a href="https://huiraoo.github.io/blog/2019/06/18/mysql-xtrabackup/">安装 XtraBackup</a></li>
<li>已配置互信</li>
</ul>
<p><strong>1. 备份主库（约耗时 30min）</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ innobackupex --defaults-file=/etc/my.cnf --user=root --password=<span class="string">'xx'</span> --no-timestamp /<span class="keyword">data</span>/backup</span><br></pre></td></tr></table></figure>

<p><strong>2. 传输备份数据到测试服务器 （约耗时 30min）</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ scp -r /<span class="keyword">data</span>/backup/* root@<span class="number">10.138</span>.<span class="number">22.192</span>:/<span class="keyword">data</span>/backup</span><br></pre></td></tr></table></figure>

<p><strong>3. 恢复全备数据（约耗时 60min）</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysqladmin -S /<span class="keyword">data</span>/mysql/mysql.sock -uroot -p<span class="string">'xx'</span> shutdown</span><br><span class="line">$ innobackupex --defaults-file=/etc/my.cnf --apply-log /<span class="keyword">data</span>/backup</span><br><span class="line">$ mv mysql mysql_bak</span><br><span class="line">$ mkdir mysql</span><br><span class="line">$ innobackupex --defaults-file=/etc/my.cnf --copy-back /<span class="keyword">data</span>/backup</span><br><span class="line">$ chown -R mysql:mysql mysql</span><br><span class="line">$ /usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf --user=mysql &gt;/dev/null &amp;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例分析 · information_schema.tables 与 count(*) 查询数不一致</title>
    <url>/blog/2019/10/22/mysql-case-rows/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>查询表 <code>mqm.t_batch</code> 总行数，发现两种方式查询的结果不一致。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># information_schema.tables</span></span><br><span class="line">mysql&gt; select table_name,table_rows from information_schema.tables where TABLE_SCHEMA = 'mqm' and table_name='t_batch';</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| table_name | table_rows |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| t_batch    |    9527271 |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># count(*)</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> t_batch;</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| count(*) |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">| 10474287 |</span><br><span class="line">+<span class="comment">----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">21.52</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>默认情况下，MySQL 对表进行增删操作时，是不会自动更新 <code>information_schema.tables</code> 表 <code>table_rows</code> 字段，只有 <code>10%</code> 的行数发生变化才会自动收集，执行 <code>ANALYZE TABLE &#39;table_name&#39;</code> 后会统计所有表数据，结果和 <code>count(*)</code> 一致。</p>
<blockquote>
<p><strong>Tips</strong>：生产环境中不建议使用，因为会锁表！</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ANALYZE TABLE t_batch;</span><br><span class="line">+<span class="comment">-------------+---------+----------+----------+</span></span><br><span class="line">| Table       | Op      | Msg_type | Msg_text |</span><br><span class="line">+<span class="comment">-------------+---------+----------+----------+</span></span><br><span class="line">| mqm.t_batch | <span class="keyword">analyze</span> | <span class="keyword">status</span>   | OK       |</span><br><span class="line">+<span class="comment">-------------+---------+----------+----------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">3.85</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> table_name,table_rows <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> TABLE_SCHEMA = <span class="string">'mqm'</span> <span class="keyword">and</span> table_name=<span class="string">'t_batch'</span>;</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| table_name | table_rows |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| t_batch    |   10261904 |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.07</span> sec)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 调优案例 · 千万级大表模糊查询</title>
    <url>/blog/2019/10/22/mysql-tuning-like/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><strong>模糊查询</strong>：使用 <code>like %%</code> 类 <code>SQL</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生产环境执行的SQL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">''</span> <span class="keyword">AS</span> batch_fail_id, <span class="string">''</span> <span class="keyword">AS</span> uuid_Fail, b.send_goods_No, b.test_type, b.order_no</span><br><span class="line">	, b.row_no, b.bu, b.mtl_no, b.mtl_name, b.mtl_group, b.mtl_group_name</span><br><span class="line">	, b.materiel_category_id, b.materiel_category_name, b.pattern_amount</span><br><span class="line">	, b.plan_pattern_amount, b.goods_unit, b.plan_send_day, b.fact_send_Day, b.stock_Day</span><br><span class="line">	, b.supply_code, b.supply_name, b.supply_check_level, b.sap_mark_id, b.sap_mark_name</span><br><span class="line">	, b.syb_id, b.syb_name, b.check_style_id, b.check_style_name, b.check_type_id</span><br><span class="line">	, b.check_type_name, b.QC_STATUS, b.QC_STATUS_INSTR_DATE, b.QC_NO, b.factory_code</span><br><span class="line">	, b.goods_sort, b.price_unit, b.stock_price, b.LICHA, b.BSART, b.LGORT</span><br><span class="line">	, b.plan_Date, b.TEST_CONCLUSION, b.IQC_manager_id, b.IQC_manager_name, b.iqc_leader_id</span><br><span class="line">	, b.iqc_leader_name, b.test_complete_day, b.test_start_day, b.new_or_old,b.check_status_id</span><br><span class="line">	, b.is_appeal, b.is_start_check, b.standard_type, b.check_reason, b.is_stop</span><br><span class="line">	, b.check_time, b.instance_id, b.create_date <span class="keyword">AS</span> createDate, b.delete_status</span><br><span class="line"><span class="keyword">FROM</span> t_batch b</span><br><span class="line"><span class="keyword">WHERE</span> b.mtl_no <span class="keyword">LIKE</span> <span class="string">'%0594A%'</span> <span class="keyword">AND</span> b.delete_status = <span class="string">'N'</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> f.batch_fail_id, f.uuid, f.send_goods_No, f.test_type, f.order_no, f.row_no</span><br><span class="line">        , f.bu, f.mtl_no, f.mtl_name, f.mtl_group, f.mtl_group_name</span><br><span class="line">        , f.materiel_category_id,f.materiel_category_name, f.pattern_amount</span><br><span class="line">        , f.plan_pattern_amount</span><br><span class="line">	, f.goods_unit, f.plan_send_day, f.fact_send_Day, f.stock_Day, f.supply_code</span><br><span class="line">	, f.supply_name, f.supply_check_level, f.sap_mark_id, f.sap_mark_name, f.syb_id</span><br><span class="line">	, f.syb_name, f.check_style_id, f.check_style_name, f.check_type_id, f.check_type_name</span><br><span class="line">	, f.QC_STATUS, f.QC_STATUS_INSTR_DATE, f.QC_NO, f.factory_code, f.goods_sort</span><br><span class="line">	, f.price_unit, f.stock_price, f.LICHA, f.BSART, f.LGORT</span><br><span class="line">	, f.plan_Date, f.TEST_CONCLUSION, f.IQC_manager_id, f.IQC_manager_name, f.iqc_leader_id</span><br><span class="line">	, f.iqc_leader_name, f.test_complete_day, f.test_start_day, f.new_or_old</span><br><span class="line">	, f.check_status_id, f.is_appeal, f.is_start_check, f.standard_type, f.check_reason</span><br><span class="line">	, f.is_stop, f.check_time, f.instance_id, f.create_date <span class="keyword">AS</span> createDate, f.delete_status</span><br><span class="line"><span class="keyword">FROM</span> t_batch_fail f</span><br><span class="line"><span class="keyword">WHERE</span> f.mtl_no <span class="keyword">LIKE</span> <span class="string">'%0594A%'</span> <span class="keyword">AND</span> f.delete_status = <span class="string">'N'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> createDate <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 表数据量</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> table_name,table_rows,<span class="keyword">CONCAT</span>(<span class="keyword">TRUNCATE</span>(<span class="keyword">SUM</span>(data_length)/<span class="number">1024</span>/<span class="number">1024</span>,<span class="number">2</span>),<span class="string">'MB'</span>) <span class="keyword">AS</span> data_size, <span class="keyword">CONCAT</span>(<span class="keyword">TRUNCATE</span>(<span class="keyword">SUM</span>(index_length)/<span class="number">1024</span>/<span class="number">1024</span>,<span class="number">2</span>),<span class="string">'MB'</span>) <span class="keyword">AS</span> index_size <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> TABLE_SCHEMA = <span class="string">'mqm'</span> <span class="keyword">and</span> table_name=<span class="string">'t_batch'</span>;</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| table_name | table_rows | data_size | index_size |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">| t_batch    |   10261904 | 4895.00MB | 8643.23MB  |</span><br><span class="line">+<span class="comment">------------+------------+-----------+------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">+<span class="comment">--------------+------------+-----------+------------+</span></span><br><span class="line">| table_name   | table_rows | data_size | index_size |</span><br><span class="line">+<span class="comment">--------------+------------+-----------+------------+</span></span><br><span class="line">| t_batch_fail |      <span class="number">43683</span> | <span class="number">19.56</span>MB   | <span class="number">14.57</span>MB    |</span><br><span class="line">+<span class="comment">--------------+------------+-----------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行时间</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">1</span> <span class="keyword">min</span> <span class="number">26.92</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><strong>Union All</strong>：对两个结果集进行并集操作，包括重复行。</p>
<p><strong>执行计划</strong>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">+<span class="comment">----+--------------+------------+------+-------------------+-------------------+---------+-------+---------+------------------------------------+</span></span><br><span class="line">| id | select_type  | table      | type | possible_keys     | key               | key_len | ref   | rows    | Extra                              |</span><br><span class="line">+<span class="comment">----+--------------+------------+------+-------------------+-------------------+---------+-------+---------+------------------------------------+</span></span><br><span class="line">|  1 | PRIMARY      | b          | ALL  | NULL              | NULL              | NULL    | NULL  | 9527271 | Using where                        |</span><br><span class="line">|  2 | UNION        | f          | ref  | idx_delete_status | idx_delete_status | 9       | const |   20469 | Using index condition; Using where |</span><br><span class="line">| NULL | UNION RESULT | &lt;union1,2&gt; | ALL  | NULL              | NULL              | NULL    | NULL  |    NULL | Using temporary; Using filesort    |</span><br><span class="line">+<span class="comment">----+--------------+------------+------+-------------------+-------------------+---------+-------+---------+------------------------------------+</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加索引</span></span><br><span class="line">mysql&gt; ALTER TABLE t_batch ADD INDEX idx_delete_status (delete_status);</span><br><span class="line">Query OK, 0 rows affected (2 min 47.24 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行计划</span></span><br><span class="line">+<span class="comment">----+--------------+------------+------+-------------------+-------------------+---------+-------+---------+------------------------------------+</span></span><br><span class="line">| id | select_type  | table      | type | possible_keys     | key               | key_len | ref   | rows    | Extra                              |</span><br><span class="line">+<span class="comment">----+--------------+------------+------+-------------------+-------------------+---------+-------+---------+------------------------------------+</span></span><br><span class="line">|  1 | PRIMARY      | b          | ref  | idx_delete_status | idx_delete_status | 9       | const | 5130952 | Using index condition; Using where |</span><br><span class="line">|  2 | UNION        | f          | ref  | idx_delete_status | idx_delete_status | 9       | const |   20469 | Using index condition; Using where |</span><br><span class="line">| NULL | UNION RESULT | &lt;union1,2&gt; | ALL  | NULL              | NULL              | NULL    | NULL  |    NULL | Using temporary; Using filesort    |</span><br><span class="line">+<span class="comment">----+--------------+------------+------+-------------------+-------------------+---------+-------+---------+------------------------------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.07</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>模糊查询方法对比</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">① mtl_no like <span class="string">'%0594A%'</span></span><br><span class="line"><span class="number">10</span> rows <span class="keyword">in</span> set (<span class="number">1</span> min <span class="number">26.92</span> sec)</span><br><span class="line"></span><br><span class="line">② locate(<span class="string">'0594A'</span>, mtl_no) &gt; <span class="number">0</span></span><br><span class="line"><span class="number">10</span> rows <span class="keyword">in</span> set (<span class="number">32.71</span> sec)</span><br><span class="line"></span><br><span class="line">③ instr(mtl_no,<span class="string">'0594A'</span>) &gt; <span class="number">0</span></span><br><span class="line"><span class="number">10</span> rows <span class="keyword">in</span> set (<span class="number">32.72</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>结论：</strong></p>
<ul>
<li>这三种方法都只能用全表扫描的方式进行查询，但 <code>locate</code> 和 <code>instr</code> 方法速度比 <code>like</code> 稍快。</li>
<li><code>like %%</code> 此类模糊查询，推荐使用搜索引擎，比如 <code>Elasticsearch</code>。</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>Confluence</title>
    <url>/blog/2019/10/22/confluence/</url>
    <content><![CDATA[<h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><p><strong>空间（Space）</strong></p>
<ul>
<li>团队空间：存放与该项目相关的文档信息放置到该空间中，对项目成员开设访问/编辑权限</li>
<li>个人空间：存放工作总结或笔记等文档放置到自己的空间中</li>
</ul>
<p><strong>页面（Page）</strong></p>
<ul>
<li>页面是存储和共享信息的主要方式，以树状结构进行组织，放置于空间之中。</li>
<li>页面支持大量的内容展现形式，除了富文本文档外，还包括图表、视频、附件（可预览）、流程图、公式等等，如果还不够，还可以通过海量的第三方插件进行扩展。</li>
</ul>
<p><strong>权限（Permission）</strong></p>
<p>权限控制分 3 个维度，分别是团队（Group），个人（Individual Users），匿名用户（Anonymous）。</p>
<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 普通地址</span></span><br><span class="line">http://wiki.qd-aliyun-internal.haier.net</span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理员地址</span></span><br><span class="line">http://wiki.qd-aliyun-internal.haier.net/login.action?oauth_sso=false</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>项目</category>
      </categories>
  </entry>
  <entry>
    <title>Jira</title>
    <url>/blog/2019/10/22/jira/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>JIRA 是 Atlassian 公司的产品，Atlassian 最核心的产品仍然是 <strong>JIRA</strong> 和 <strong>Confluence</strong>，JIRA 被业界公认为最好的项目管理和开发管理工具，Confluence 被认为是最好用的企业级知识管理工具。</p>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h3><p><strong>创建项目</strong>：项目名称、简称、URL</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-22-100515.png" alt></p>
<ul>
<li><p>Story：故事</p>
</li>
<li><p>Sprint：迭代</p>
</li>
<li><p>Backlog：需求列表</p>
</li>
<li><p>项目创建</p>
</li>
<li><p>项目组件和版本</p>
</li>
<li><p>项目角色</p>
</li>
</ul>
<h3 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h3><ul>
<li><p>创建、编辑与删除问题</p>
</li>
<li><p>问题跟踪</p>
</li>
<li><p>子任务</p>
</li>
</ul>
<h4 id="Issue-Type（问题单类型）"><a href="#Issue-Type（问题单类型）" class="headerlink" title="Issue Type（问题单类型）"></a>Issue Type（问题单类型）</h4><ul>
<li><strong>Bug</strong> - 故障，功能失效</li>
<li><strong>Improvement</strong> - 提升，既有功能增强</li>
<li><strong>New Feature</strong> - 新功能</li>
<li><strong>Task</strong> - 任务</li>
<li><strong>Custom Issue</strong> - 根据需要客户化定制</li>
</ul>
<h4 id="Priority（优先级）"><a href="#Priority（优先级）" class="headerlink" title="Priority（优先级）"></a>Priority（优先级）</h4><ul>
<li><strong>Highest</strong> - 最高级别，表明问题阻塞了业务流程正常进行</li>
<li><strong>High</strong> - 高级，表明问题引发明显故障，需要紧急关注</li>
<li><strong>Medium</strong> - 中级，表明问题有一个明显的影响</li>
<li><strong>Low</strong> - 低级，表明问题有一个轻微的影响</li>
<li><strong>Lowest</strong> - 最低级</li>
</ul>
<h4 id="Status（状态）"><a href="#Status（状态）" class="headerlink" title="Status（状态）"></a>Status（状态）</h4><ul>
<li><strong>Open</strong> - 打开状态，表明问题单已经被创建，等待被分配到开始处理状态</li>
<li><strong>In Progress</strong> - 处理中状态，表明问题单已经被分配人激活，并处于被处理状态中</li>
<li><strong>Resolved</strong> - 已解决状态，表明问题已经被处理完成，等待问题报告人的验证。从这个状态，问题单一般可以进一步变更为重新打开状态（Reopened）或关闭状态（Closed）</li>
<li><strong>Reopened</strong> - 重新打开状态，问题经过验证发现没有被解决，就可以变更到这个状态</li>
<li><strong>Closed</strong> - 关闭状态，问题被彻底解决就可以转为这个状态</li>
</ul>
<h4 id="Resolution（解决结果）"><a href="#Resolution（解决结果）" class="headerlink" title="Resolution（解决结果）"></a>Resolution（解决结果）</h4><ul>
<li><strong>Fixed</strong> - 修复</li>
<li><strong>Won’t Fix</strong> - 不用修复，例如这个问题所描述的现象已不再有影响了</li>
<li><strong>Duplicate</strong> - 重复，同其它已经存在的问题重复了，推荐把相关的单子链接起来</li>
<li><strong>Incomplete</strong> - 未完成，没有足够的信息继续完成这个问题</li>
<li><strong>Cannot Reproduce</strong> - 不能重现，如果以后有更多信息可以继续可以重新打开这张单子ß</li>
<li><strong>Won’t Do</strong> - 不做，类似于不用修复的方案，试用于软件项目的默认状态</li>
</ul>
<h3 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h3><h2 id="Jira-管理员"><a href="#Jira-管理员" class="headerlink" title="Jira 管理员"></a>Jira 管理员</h2><h3 id="配置方案"><a href="#配置方案" class="headerlink" title="配置方案"></a>配置方案</h3><p>项目报表</p>
<p>敏捷管理</p>
<p>用户、用户组、项目角色配置</p>
<ul>
<li><p>问题类型</p>
</li>
<li><p>权限</p>
</li>
<li><p>工作流</p>
</li>
</ul>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 普通用户登录</span></span><br><span class="line">http://jira.qd-aliyun-internal.haier.net</span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理员登录</span></span><br><span class="line">http://jira.qd-aliyun-internal.haier.net/login.jsp?oauth_sso=false</span><br><span class="line"></span><br><span class="line"><span class="comment"># 版本</span></span><br><span class="line">Jira v8.<span class="number">3.0</span></span><br></pre></td></tr></table></figure>

<h3 id="最佳使用实践"><a href="#最佳使用实践" class="headerlink" title="最佳使用实践"></a>最佳使用实践</h3><ul>
<li><p>Bug 跟踪管理</p>
</li>
<li><p>任务流程管理</p>
</li>
</ul>
<p><strong>删除任务</strong></p>
<ul>
<li>权限说明：删除任务需要具备项目管理员权限</li>
<li>项目设置  -&gt;  用户和角色  -&gt;  添加用户到 <code>Administrators</code> 组</li>
</ul>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
  </entry>
  <entry>
    <title>雅思</title>
    <url>/blog/2019/10/22/ielts/</url>
    <content><![CDATA[<h2 id="报名"><a href="#报名" class="headerlink" title="报名"></a>报名</h2><ul>
<li><p><a href="https://ielts.etest.net.cn" target="_blank" rel="noopener">报名入口</a></p>
</li>
<li><p>考试费用：￥2020</p>
</li>
<li><p>转考费用：￥420</p>
</li>
</ul>
<h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><ul>
<li>《剑桥雅思官方真题》</li>
<li>《剑桥雅思真题精讲》</li>
<li>《7天搞定雅思高频核心词》</li>
<li>《雅思词汇真经》</li>
<li>《顾家北手把手教你雅思写作》</li>
<li>《雅思王听力真题语料库》</li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>TiDB</title>
    <url>/blog/2019/10/22/tidb/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://pingcap.com/" target="_blank" rel="noopener"><strong>TiDB</strong></a> 是一款定位于在线事务处理/在线分析处理（ HTAP: Hybrid Transactional/Analytical Processing）的融合型数据库产品，实现了一键水平伸缩、强一致性的多副本数据安全、分布式事务、实时 <code>OLAP</code> 等重要特性，同时兼容 MySQL 协议和生态，迁移便捷，运维成本极低。</p>
<p>[ <a href="https://pingcap.com/docs-cn/v3.0/" target="_blank" rel="noopener"><strong>文档</strong></a> | <a href="https://github.com/pingcap/tidb" target="_blank" rel="noopener"><strong>代码</strong></a> | <a href="https://pingcap.com/community-cn/" target="_blank" rel="noopener"><strong>社区</strong></a>]</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p><strong>1. 安装依赖包</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum -y install libtool zlib-devel autoconf readline-devel readline libuuid-devel zlib-devel automake libuuid readline-devel readline ncurses-devel.x86_64 ncurses.x86_64 gcc-c++ vim wget net-tools svn libstdc++.so.<span class="number">6</span> glibc.i686 unzip make lrzsz libtool zlib-devel autoconf readline-devel readline libuuid-devel zlib-devel automake libuuid readline-devel readline ncurses-devel.x86_64 ncurses.x86_64 gcc-c++ vim wget net-tools svn libstdc++.so.<span class="number">6</span> libcurl-dev libcurl-devel expat-devel perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker zip git gcc openssl-devel libnl3-devel net-snmp-devel libnfnetlink-devel zlib zlib-devel openssl openssl-devel tree lrzsz tree net-tools nmap vim bash-completion lsof dos2unix nc telnet ntp wget rng-tools psmisc screen pcre pcre-devel</span><br></pre></td></tr></table></figure>

<p><strong>2. 安装 TiDB</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cd /usr/local/</span><br><span class="line">$ wget http://download.pingcap.org/tidb-latest-linux-amd64.tar.gz</span><br><span class="line">$ tar -xzf tidb-latest-linux-amd64.tar.gz  /usr/local</span><br><span class="line">$ mkdir -p /<span class="keyword">data</span>/tidb</span><br><span class="line">$ cd /usr/local/tidb-latest-linux-amd64</span><br><span class="line">$ ln -s /usr/local/tidb-latest-linux-amd64/bin/pd-tso-bench /usr/bin</span><br><span class="line">$ ln -s /usr/local/tidb-latest-linux-amd64/bin/tikv-server /usr/bin/</span><br><span class="line">$ ln -s /usr/local/tidb-latest-linux-amd64/bin/tidb-server /usr/bin/</span><br><span class="line">$ ln -s /usr/local/tidb-latest-linux-amd64/bin/pd-server /usr/bin/</span><br><span class="line">$ ln -s /usr/local/tidb-latest-linux-amd64/bin/pd-ctl /usr/bin/</span><br></pre></td></tr></table></figure>

<p><strong>3. 启动 PD</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cd bin</span><br><span class="line">$ ./pd-server -data-dir=/<span class="keyword">data</span>/tidb/pd -log-file=/<span class="keyword">data</span>/tidb/log/pd.log -name=pd1 &amp;</span><br></pre></td></tr></table></figure>

<p><strong>4. 启动 TiKV</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ ./tikv-server --pd=<span class="string">"127.0.0.1:2379"</span> --data-dir=/<span class="keyword">data</span>/tidb/tikv --log-file=/<span class="keyword">data</span>/tidb/log/tikv.log &amp;</span><br></pre></td></tr></table></figure>

<p><strong>5. 连接 TiDB</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ mysql -h 127.0.0.1 -P 4000 -u root</span><br><span class="line"></span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; or \g.</span><br><span class="line">Your MySQL connection id is 12</span><br><span class="line">Server version: 5.7.25-TiDB-v3.0.0-rc.1-290-g21d2590ac MySQL Community Server (Apache License 2.0)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type '<span class="keyword">help</span>;' or '\h' for help. <span class="keyword">Type</span> <span class="string">'\c'</span> <span class="keyword">to</span> <span class="keyword">clear</span> the <span class="keyword">current</span> <span class="keyword">input</span> statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| INFORMATION_SCHEMA |</span><br><span class="line">| PERFORMANCE_SCHEMA |</span><br><span class="line">| mysql              |</span><br><span class="line">| test               |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>6. 修改密码</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql; </span><br><span class="line">mysql&gt; update user set password=PASSWORD("Changeme_123") where User='root';</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>

<p><strong>7. 设置远程可访问</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; grant all privileges on *.* to 'root'@'%' identified by 'Changeme_123';</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>Prometheus</title>
    <url>/blog/2019/10/22/prometheus/</url>
    <content><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p><a href="https://prometheus.io/" target="_blank" rel="noopener"><strong>Prometheus</strong></a> 是一个开源的完整监控解决方案，其对传统监控系统的测试和告警模型进行了彻底的颠覆，形成了基于中央化的规则计算、统一分析和告警的新模型，基于 <code>Golang</code> 编写。</p>
<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p><strong>易于管理</strong></p>
<p><code>Prometheus</code> 基于 <code>Pull</code> 模型的架构方式，可以在任何地方（本地电脑，开发环境，测试环境）搭建我们的监控系统。对于一些复杂的情况，还可以使用 <code>Prometheus</code> 服务发现 (<code>Service Discovery</code>) 能力动态管理监控目标。</p>
<p><strong>强大的数据模型</strong></p>
<p>所有采集的监控数据均以指标 <code>metric</code> 的形式保存在内置的时间序列数据库当中 <code>TSDB</code>。所有的样本除了基本的指标名称以外，还包含一组用于描述该样本特征的标签。</p>
<p>如下所示：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">http_request_status&#123;code='200',content_path='/api/path',</span> <span class="string">environment='produment'&#125;</span> <span class="string">=&gt;</span> <span class="string">[value1@timestamp1,value2@timestamp2...]</span></span><br><span class="line"><span class="string">http_request_status&#123;code='200',content_path='/api/path2',</span> <span class="string">environment='produment'&#125;</span> <span class="string">=&gt;</span> <span class="string">[value1@timestamp1,value2@timestamp2...]</span></span><br></pre></td></tr></table></figure>

<p>每一条时间序列由指标名称 <code>Metrics Name</code> 以及一组标签 <code>Labels</code> 唯一标识。每条时间序列按照时间的先后顺序存储一系列的样本值。表示维度的标签可能来源于你的监控对象的状态，比如 <code>code=404</code> 或者 <code>content_path=/api/path</code>。基于这些 <code>Labels</code> ，我们可以方便地对监控数据进行聚合、过滤、裁剪。</p>
<p><strong>强大的查询语言 PromSQL</strong></p>
<p><code>Prometheus</code> 内置了一个强大的数据查询语言 <code>PromQL</code>。 通过 <code>PromQL</code> 可以实现对监控数据的查询、聚合。同时 <code>PromQL</code> 也被应用于数据可视化(如 <code>Grafana</code> )以及告警当中。</p>
<p><strong>高效</strong></p>
<p>对于监控系统而言，大量的监控任务必然导致有大量的数据产生。而<code>Prometheus</code> 可以高效地处理这些数据，对于单一 <code>Prometheus Server</code> 实例而言它可以处理：</p>
<ul>
<li>数以百万的监控指标</li>
<li>每秒处理数十万的数据点</li>
</ul>
<p><strong>易于集成</strong></p>
<p><code>Prometheus</code> 社区还提供了大量第三方实现的监控数据采集支持：<code>MySQL</code>、<code>Consul</code>、<code>Redis</code> 等等。</p>
<p><strong>可视化</strong></p>
<p><code>Prometheus Server</code> 中自带了一个 <code>Prometheus UI</code>，通过这个 UI 可以方便地直接对数据进行查询，并且支持直接以图形化的形式展示数据。开源第三方可视化工具 <code>Grafana</code> 也已经提供了完整的 <code>Prometheus</code> 支持，基于 <code>Grafana</code> 可以创建更加精美的监控图标。</p>
<p><strong>缺点</strong>：相比于 <a href="https://www.zabbix.com/" target="_blank" rel="noopener"><strong>zabbix</strong></a>，更加消耗资源</p>
<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img src="http://ww3.sinaimg.cn/large/006y8mN6ly1g6d2tdrnvxj311j0mjjtq.jpg" alt="Prometheus architecture"></p>
<p><strong>Prometheus Server</strong>：是 <code>Prometheus</code> 组件中的核心部分，负责实现对监控数据的获取、存储以及查询。</p>
<ul>
<li><code>Prometheus Server</code> 可以通过静态配置管理监控目标（<code>prometheus.yml</code>），也可以配合使用 <code>Service Discovery</code> 的方式动态管理监控目标，并从这些监控目标中获取数据。</li>
<li><code>Prometheus Server</code> 需要对采集到的监控数据进行存储，它本身就是一个时序数据库，将采集到的监控数据按照时间序列的方式存储在本地磁盘当中。</li>
<li><code>Prometheus Server</code> 对外提供了自定义的 <code>PromQL</code> 语言，实现对数据的查询以及分析。</li>
</ul>
<p><strong>exporters</strong>：负责将监控数据采集的端点通过 <code>HTTP</code> 服务的形式暴露给 <code>Prometheus Server</code>，<code>Prometheus Server</code> 通过访问该 <code>exporter</code> 提供的 <code>Endpoint</code> 端点，即可获取到需要采集的监控数据。一般来说可以将<code>exporter</code> 分为 2 类：</p>
<ul>
<li>直接采集：这一类 <code>exporter</code> 直接内置了对 <code>Prometheus</code> 监控的支持，例如：<code>Kubernetes</code>。</li>
<li>间接采集：原有监控目标并不直接支持 <code>Prometheus</code>，因此我们需要通过 <code>Prometheus</code> 提供的 <code>Client Library</code> 编写该监控目标的监控采集程序。例如：监控主机有 <a href="https://github.com/prometheus/node_exporter" target="_blank" rel="noopener"><strong>node_exporter</strong></a>，监控 <code>MySQL</code> 有 <a href="https://github.com/prometheus/mysqld_exporter" target="_blank" rel="noopener"><strong>mysqld_exporter</strong></a>。</li>
</ul>
<p><strong>Pushgateway</strong>：由于 <code>Prometheus</code> 数据采集基于 <code>Pull</code> 模型进行设计，因此在网络环境的配置上必须要让<code>Prometheus Server</code> 能够直接与 <code>exporter</code> 进行通信。 当这种网络需求无法直接满足时，就可以利用<code>PushGateway</code> 来进行中转。可以通过 <code>PushGateway</code> 将内部网络的监控数据主动 <code>Push</code> 到 <code>Gateway</code> 当中。而 <code>Prometheus Server</code> 则可以采用同样 <code>Pull</code> 的方式从 <code>PushGateway</code> 中获取到监控数据。</p>
<p><strong>Alertmanager</strong>：在 <code>Prometheus Server</code> 中支持基于 <code>PromQL</code> 创建告警规则，如果满足 <code>PromQL</code> 定义的规则，则会产生一条告警，而告警的后续处理流程则由 <code>AlertManager</code> 进行管理。在 <code>AlertManager</code> 中我们可以与邮件，<code>Slack</code> 等等内置的通知方式进行集成，也可以通过 <code>Webhook</code> 自定义告警处理方式。<code>AlertManager</code> 即 <code>Prometheus</code> 体系中的告警处理中心。</p>
<p><strong>Web UI</strong>：数据可视化，主要使用第三方工具 <a href="https://grafana.com/" target="_blank" rel="noopener"><strong>Grafana</strong></a> 来实现。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="Prometheus-Server"><a href="#Prometheus-Server" class="headerlink" title="Prometheus Server"></a>Prometheus Server</h4><p><strong>二进制包方式安装</strong></p>
<p>（1）下载最新版本 <a href="https://prometheus.io/download/" target="_blank" rel="noopener"><strong>软件包</strong></a></p>
<p>（2）解压</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">wget</span> <span class="attr">https://github.com/prometheus/prometheus/releases/download/v2.12.0/prometheus-2.12.0.linux-amd64.tar.gz</span></span><br><span class="line"><span class="string">tar</span> <span class="bullet">-xzf</span> <span class="string">prometheus-2.12.0.linux-amd64.tar.gz</span></span><br><span class="line"><span class="string">cd</span> <span class="string">prometheus-2.12.0.linux-amd64</span></span><br></pre></td></tr></table></figure>

<p>（3）配置文件 <code>promethes.yml</code>，修改 <code>job_name</code>。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line"><span class="attr">  scrape_interval:</span>     <span class="number">15</span><span class="string">s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line"><span class="attr">  evaluation_interval:</span> <span class="number">15</span><span class="string">s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line"><span class="attr">  alertmanagers:</span></span><br><span class="line"><span class="attr">  - static_configs:</span></span><br><span class="line"><span class="attr">    - targets:</span></span><br><span class="line">      <span class="comment"># - alertmanager:9093</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - "first_rules.yml"</span></span><br><span class="line">  <span class="comment"># - "second_rules.yml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it's Prometheus itself.</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to '/metrics'</span></span><br><span class="line">    <span class="comment"># scheme defaults to 'http'.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">    - targets:</span> <span class="string">['localhost:9090']</span></span><br></pre></td></tr></table></figure>

<p>（4）创建数据存储目录，默认的存储路径为 <code>data/</code>，用户也可以通过参数 <code>--storage.tsdb.path=&quot;data/&quot;</code> 修改本地数据存储的路径。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">mkdir</span> <span class="bullet">-p</span> <span class="string">data</span></span><br></pre></td></tr></table></figure>

<p>（5）启动 <code>prometheus</code> 服务，<a href="http://10.133.0.53:9090/" target="_blank" rel="noopener"><strong>http://10.133.0.53:9090</strong></a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">./prometheus</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.420Z</span> <span class="string">caller=main.go:293</span> <span class="string">msg="no</span> <span class="string">time</span> <span class="string">or</span> <span class="string">size</span> <span class="string">retention</span> <span class="string">was</span> <span class="string">set</span> <span class="string">so</span> <span class="string">using</span> <span class="string">the</span> <span class="string">default</span> <span class="string">time</span> <span class="string">retention"</span> <span class="string">duration=15d</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.420Z</span> <span class="string">caller=main.go:329</span> <span class="string">msg="Starting</span> <span class="string">Prometheus"</span> <span class="string">version="(version=2.12.0,</span> <span class="string">branch=HEAD,</span> <span class="string">revision=43acd0e2e93f9f70c49b2267efa0124f1e759e86)"</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.420Z</span> <span class="string">caller=main.go:330</span> <span class="string">build_context="(go=go1.12.8,</span> <span class="string">user=root@7a9dbdbe0cc7,</span> <span class="string">date=20190818-13:53:16)"</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.421Z</span> <span class="string">caller=main.go:331</span> <span class="string">host_details="(Linux</span> <span class="number">3.10</span><span class="number">.0</span><span class="bullet">-693.</span><span class="string">el7.x86_64</span> <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 ptdsmapp05 (none))"</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.421Z</span> <span class="string">caller=main.go:332</span> <span class="string">fd_limits="(soft=65536,</span> <span class="string">hard=65536)"</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.421Z</span> <span class="string">caller=main.go:333</span> <span class="string">vm_limits="(soft=unlimited,</span> <span class="string">hard=unlimited)"</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.423Z</span> <span class="string">caller=web.go:448</span> <span class="string">component=web</span> <span class="string">msg="Start</span> <span class="string">listening</span> <span class="string">for</span> <span class="string">connections"</span> <span class="string">address=0.0.0.0:9090</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.423Z</span> <span class="string">caller=main.go:654</span> <span class="string">msg="Starting</span> <span class="string">TSDB</span> <span class="string">..."</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.442Z</span> <span class="string">caller=head.go:509</span> <span class="string">component=tsdb</span> <span class="string">msg="replaying</span> <span class="string">WAL,</span> <span class="string">this</span> <span class="string">may</span> <span class="string">take</span> <span class="string">awhile"</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.445Z</span> <span class="string">caller=head.go:557</span> <span class="string">component=tsdb</span> <span class="string">msg="WAL</span> <span class="string">segment</span> <span class="string">loaded"</span> <span class="string">segment=0</span> <span class="string">maxSegment=0</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.446Z</span> <span class="string">caller=main.go:669</span> <span class="string">fs_type=XFS_SUPER_MAGIC</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.446Z</span> <span class="string">caller=main.go:670</span> <span class="string">msg="TSDB</span> <span class="string">started"</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.446Z</span> <span class="string">caller=main.go:740</span> <span class="string">msg="Loading</span> <span class="string">configuration</span> <span class="string">file"</span> <span class="string">filename=prometheus.yml</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.448Z</span> <span class="string">caller=main.go:768</span> <span class="string">msg="Completed</span> <span class="string">loading</span> <span class="string">of</span> <span class="string">configuration</span> <span class="string">file"</span> <span class="string">filename=prometheus.yml</span></span><br><span class="line"><span class="string">level=info</span> <span class="string">ts=2019-08-26T07:33:43.448Z</span> <span class="string">caller=main.go:623</span> <span class="string">msg="Server</span> <span class="string">is</span> <span class="string">ready</span> <span class="string">to</span> <span class="string">receive</span> <span class="string">web</span> <span class="string">requests."</span></span><br></pre></td></tr></table></figure>

<p><strong>docker 方式安装</strong></p>
<p>直接使用 <code>Prometheus</code> 的镜像即可启动 <code>Prometheus Server</code>。启动完成后，可以通过 <a href="http://10.133.0.53:9090/" target="_blank" rel="noopener"><strong>http://10.133.0.53:9090</strong></a> 访问 <code>UI</code> 界面：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="bullet">-p</span> <span class="number">9090</span><span class="string">:9090</span> <span class="bullet">-v</span> <span class="string">/etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml</span> <span class="string">prom/prometheus</span></span><br></pre></td></tr></table></figure>

<p><img src="http://ww4.sinaimg.cn/large/006y8mN6ly1g6d58mi60uj32800ke415.jpg" alt="Prometheus UI"></p>
<h4 id="node-exporter"><a href="#node-exporter" class="headerlink" title="node_exporter"></a>node_exporter</h4><p>采集主机的运行指标如 CPU、内存、磁盘等信息。同样采用 <code>Golang</code> 编写，并且不存在任何的第三方依赖。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">wget</span> <span class="attr">https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz</span></span><br><span class="line"><span class="string">tar</span> <span class="bullet">-xzf</span> <span class="string">node_exporter-0.18.1.linux-amd64.tar.gz</span></span><br><span class="line"><span class="string">cd</span> <span class="string">node_exporter-0.18.1.linux-amd64</span></span><br><span class="line"><span class="string">cp</span> <span class="string">node_exporter-0.18.1.linux-amd64/node_exporter</span> <span class="string">/usr/local/bin</span></span><br><span class="line"><span class="string">./node_exporter</span></span><br></pre></td></tr></table></figure>

<p>启动成功后，可以看到如下输出：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">INFO[0000]</span> <span class="string">Listening</span> <span class="string">on</span> <span class="string">:9100</span>                            <span class="string">source="node_exporter.go:170"</span></span><br></pre></td></tr></table></figure>

<p>访问 <strong><a href="http://10.133.0.53:9100/metrics" target="_blank" rel="noopener">http://10.133.0.53:9100/metrics</a></strong>，可以看到采集到的监控数据：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># HELP node_cpu Seconds the cpus spent in each mode.</span></span><br><span class="line"><span class="comment"># TYPE node_cpu counter</span></span><br><span class="line"><span class="string">node_cpu&#123;cpu="cpu0",mode="idle"&#125;</span> <span class="number">362812.7890625</span></span><br><span class="line"><span class="comment"># HELP node_load1 1m load average.</span></span><br><span class="line"><span class="comment"># TYPE node_load1 gauge</span></span><br><span class="line"><span class="string">node_load1</span> <span class="number">3.0703125</span></span><br></pre></td></tr></table></figure>

<p><strong>HELP</strong>：解释当前指标的含义。</p>
<p><strong>TYPE</strong>：说明当前指标的数据类型。有四种数据类型，<code>counter</code>（计数器）、<code>gauge</code>（仪表盘）、<code>histogram</code>（直方图）、<code>summary</code>（求和）</p>
<p>除了这些之外，还可以看到如下监控指标：</p>
<ul>
<li>node_boot_time：系统启动时间</li>
<li>node_cpu：系统 <code>CPU</code> 使用量</li>
<li>node_disk_*：磁盘 <code>IO</code></li>
<li>node_filesystem_*：文件系统用量</li>
<li>node_load1：系统负载</li>
<li>node_memeory_*：内存使用量</li>
<li>node_network_*：网络带宽</li>
<li>node_time：当前系统时间</li>
<li>go_*：<code>node_exporter</code> 中 <code>go</code> 相关指标</li>
<li>process_*：<code>node_exporter</code> 自身进程相关运行指标</li>
</ul>
<h4 id="mysqld-exporter"><a href="#mysqld-exporter" class="headerlink" title="mysqld_exporter"></a>mysqld_exporter</h4><p>（1）下载<a href="https://prometheus.io/download/" target="_blank" rel="noopener"><strong>二进制包</strong></a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">wget</span> <span class="attr">https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz</span></span><br><span class="line"><span class="string">tar</span> <span class="bullet">-xzf</span> <span class="string">mysqld_exporter-0.12.1.linux-amd64.tar.gz</span></span><br><span class="line"><span class="string">cd</span> <span class="string">mysqld_exporter-0.12.1.linux-amd64</span></span><br></pre></td></tr></table></figure>

<p>（2）编辑 <code>.my.cnf</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">user=hdm</span></span><br><span class="line"><span class="string">password=Hdm@123!</span></span><br><span class="line"><span class="string">host=10.133.0.53</span></span><br><span class="line"><span class="string">port=3306</span></span><br></pre></td></tr></table></figure>

<p>（3）启动 <code>mysqld_exporter</code>，默认端口是 <code>9104</code>，可以看到采集到的 MySQL <a href="http://10.133.0.53:9104/metrics" target="_blank" rel="noopener"><strong>Metrics</strong></a>。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">./mysqld_exporter</span> <span class="bullet">--config.my-cnf=/data/mysqld_exporter-0.12.1.linux-amd64/.my.cnf</span></span><br></pre></td></tr></table></figure>

<h3 id="数据收集"><a href="#数据收集" class="headerlink" title="数据收集"></a>数据收集</h3><p>为了能够让 <code>Prometheus Server</code> 能够从当前 <code>node_exporter</code> 获取到监控数据，这里需要修改 <code>Prometheus</code> 配置文件，编辑 <code>prometheus.yml</code> 并在 <code>scrape_configs</code> 节点下添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['localhost:9090']</span></span><br><span class="line">  <span class="comment"># 采集node exporter监控数据</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'node'</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['localhost:9100']</span></span><br></pre></td></tr></table></figure>

<p>重新启动 <code>Prometheus Server</code>，访问 <a href="http://10.133.0.53:9090/" target="_blank" rel="noopener"><strong>http://10.133.0.53:9090</strong></a>，进入到 <code>Prometheus Server</code>。如果输入 <code>up</code> 并且点击执行按钮以后，可以看到如下结果：</p>
<p><img src="http://ww1.sinaimg.cn/large/006y8mN6ly1g6df70foddj32cs0riwia.jpg" alt="image-20190826215234095"></p>
<p>如果 <code>Prometheus</code> 能够正常从 <code>node_exporter</code> 获取数据，则会看到以下结果：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">up&#123;instance="localhost:9090",job="prometheus"&#125;</span>	<span class="number">1</span></span><br><span class="line"><span class="string">up&#123;instance="localhost:9100",job="node"&#125;</span>	<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>其中 <code>&quot;1&quot;</code> 表示正常，反之 <code>&quot;0&quot;</code> 则为异常。</p>
<h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><p><code>Prometheus</code> 存储的是 <a href="https://en.wikipedia.org/wiki/Time_series" target="_blank" rel="noopener"><strong>时序数据</strong></a>，即按照相同时序（相同的名字和标签），以时间维度存储连续的数据的集合。时序（<code>Time Series</code>）是由名字（<code>Metric</code>），以及一组 <code>key/value</code> 标签定义的，具有相同的名字以及标签属于相同时序。时序的名字由 <code>ASCII</code> 字符、数字、下划线、以及冒号组成，它必须满足正则表达式 <code>[a-zA-Z_:][a-zA-Z0-9_:]*</code>, 其名字应该具有语义化，一般表示一个可以度量的指标，例如： <code>http_requests_total</code>, 可以表示 <code>http</code> 请求的总数。</p>
<p>时序的标签可以使 <code>Prometheus</code> 的数据更加丰富，能够区分具体不同的实例，例如 <code>http_requests_total{method=&quot;POST&quot;}</code> 可以表示所有 <code>Http</code> 中的 <code>POST</code> 请求。标签名称由 <code>ASCII</code> 字符，数字，以及下划线组成， 其中 <code>__</code> 开头属于 <code>Prometheus</code> 保留，标签的值可以是任何 <code>Unicode</code> 字符，支持中文。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;metric</span> <span class="string">name&gt;&#123;&lt;label</span> <span class="string">name&gt;=&lt;label</span> <span class="string">value&gt;,</span> <span class="string">...&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h3><p><code>Prometheus UI</code> 提供了快速验证 <code>PromQL</code> 以及临时可视化支持的能力，而在大多数场景下引入监控系统通常还需要构建可以长期使用的监控数据可视化面板（ <a href="https://grafana.com/grafana/dashboards" target="_blank" rel="noopener"><strong>Dashboard</strong></a> ）。这时用户可以考虑使用第三方的可视化工具如<code>Grafana</code>，<a href="https://grafana.com/" target="_blank" rel="noopener"><strong>Grafana</strong></a> 是一个开源的可视化平台，并且提供了对 <code>Prometheus</code> 的完整支持。</p>
<p>安装 <code>Grafana</code>（使用向导：安装 -&gt; 添加数据源 -&gt; 创建 Dashboard -&gt; 邀请成员 -&gt; 安装应用和插件）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">docker方式：</span></span><br><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="bullet">-d</span> <span class="bullet">-p</span> <span class="number">3000</span><span class="string">:3000</span> <span class="string">grafana/grafana</span></span><br><span class="line"></span><br><span class="line"><span class="string">二进制包方式：</span></span><br><span class="line"><span class="string">wget</span> <span class="attr">https://dl.grafana.com/oss/release/grafana-6.3.3.linux-amd64.tar.gz</span></span><br><span class="line"><span class="string">tar</span> <span class="bullet">-zxvf</span> <span class="string">grafana-6.3.3.linux-amd64.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="string">rpm方式：</span></span><br><span class="line"><span class="string">wget</span> <span class="attr">https://dl.grafana.com/oss/release/grafana-6.3.3-1.x86_64.rpm</span> </span><br><span class="line"><span class="string">sudo</span> <span class="string">yum</span> <span class="string">localinstall</span> <span class="string">grafana-6.3.3-1.x86_64.rpm</span> </span><br><span class="line"></span><br><span class="line"><span class="string">Pie</span> <span class="string">Chart插件：</span></span><br><span class="line"><span class="string">grafana-cli</span> <span class="string">plugins</span> <span class="string">install</span> <span class="string">grafana-piechart-panel</span></span><br></pre></td></tr></table></figure>

<p>访问 <a href="http://10.133.0.53:3000/" target="_blank" rel="noopener"><strong>http://10.133.0.53:3000</strong></a> 就可以进入到 <code>Grafana</code> 的界面中，默认情况下使用账户 <code>admin/admin</code> 进行登录</p>
<h3 id="任务和实例"><a href="#任务和实例" class="headerlink" title="任务和实例"></a>任务和实例</h3><p>在 <code>Prometheus</code> 中，每一个暴露监控样本数据的 <code>HTTP</code> 服务称为一个实例。例如在当前主机上运行的 <code>node_exporter</code> 可以被称为一个<strong>实例</strong>（<code>Instance</code>）。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['localhost:9090']</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'node'</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['localhost:9100']</span></span><br></pre></td></tr></table></figure>

<p>而一组用于相同采集目的的实例，或者同一个采集进程的多个副本则通过一个<strong>任务</strong>（<code>Job</code>）进行管理。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">*</span> <span class="attr">job:</span> <span class="string">node</span></span><br><span class="line">    <span class="string">*</span> <span class="string">instance</span> <span class="number">2</span><span class="string">:</span> <span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span><span class="string">:9100</span></span><br><span class="line">    <span class="string">*</span> <span class="string">instance</span> <span class="number">4</span><span class="string">:</span> <span class="number">5.6</span><span class="number">.7</span><span class="number">.8</span><span class="string">:9100</span></span><br></pre></td></tr></table></figure>

<p>当前在每一个 <code>Job</code> 中主要使用了静态配置（<code>static_configs</code>）的方式定义监控目标，<code>Prometheus</code> 还支持与 <code>Consul</code>、<code>Kubernetes</code> 等进行集成实现自动发现实例，并从这些实例上获取监控数据。可以访问 <a href="http://10.133.0.53:9090/targets" target="_blank" rel="noopener"><strong>targets</strong></a> 直接查看当前所有的任务以及每个任务对应的实例信息。</p>
<h2 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h2><h3 id="Push-vs-Pull"><a href="#Push-vs-Pull" class="headerlink" title="Push vs Pull"></a>Push vs Pull</h3><p><img src="https://github.com/huiraoo/prometheus-book/raw/master/sd/static/pulls_vs_push.png" alt="Push"></p>
<p>如上所示，展示了 <code>Push</code> 系统和 <code>Pull</code> 系统的核心差异。相较于 <code>Push</code> 模式，<code>Pull</code> 模式的优点可以简单总结为以下几点：</p>
<ul>
<li>只要 <code>exporter</code> 在运行，你可以在任何地方（比如在本地），搭建你的监控系统；</li>
<li>你可以更容易的查看监控目标实例的健康状态，并且可以快速定位故障；</li>
<li>更利于构建 <code>DevOps</code> 文化的团队；</li>
<li>松耦合的架构模式更适合于云原生的部署环境。</li>
</ul>
<h3 id="Consul"><a href="#Consul" class="headerlink" title="Consul"></a>Consul</h3><p><a href="https://www.consul.io" target="_blank" rel="noopener"><strong>Consul</strong></a>：由 <code>HashiCorp</code> 开发的一个支持多数据中心的分布式服务发现和键值对存储服务的开源软件，被大量应用于基于微服务的软件架构当中，使用 <code>Golang</code> 语言开发。</p>
<h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>下载<a href="https://www.consul.io/downloads.html" target="_blank" rel="noopener"><strong>二进制包</strong></a></p>
<h4 id="与-Prometheus-集成"><a href="#与-Prometheus-集成" class="headerlink" title="与 Prometheus 集成"></a>与 Prometheus 集成</h4><h2 id="PromQL"><a href="#PromQL" class="headerlink" title="PromQL"></a>PromQL</h2><p>PromQL（<code>Prometheus Query Language</code>），是 <code>Prometheus</code> 自己开发的数据查询 <code>DSL</code> 语言，<code>PromQL</code> 作为<code>Prometheus</code> 的核心能力除了实现数据的对外查询和展现，同时告警监控也是依赖 <code>PromQL</code> 实现的。</p>
<h3 id="时间序列"><a href="#时间序列" class="headerlink" title="时间序列"></a>时间序列</h3><p>Prometheus 可以采集到当前主机所有监控指标的样本数据，例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># HELP node_cpu Seconds the cpus spent in each mode.</span></span><br><span class="line"><span class="comment"># TYPE node_cpu counter</span></span><br><span class="line"><span class="string">node_cpu&#123;cpu="cpu0",mode="idle"&#125;</span> <span class="number">362812.7890625</span></span><br><span class="line"><span class="comment"># HELP node_load1 1m load average.</span></span><br><span class="line"><span class="comment"># TYPE node_load1 gauge</span></span><br><span class="line"><span class="string">node_load1</span> <span class="number">3.0703125</span></span><br></pre></td></tr></table></figure>

<p>其中非 # 开头的每一行表示当前 node_exporter 采集到的一个监控样本：node_cpu 和 node_load1 表明了当前指标的名称、大括号中的标签则反映了当前样本的一些特征和维度、浮点数则是该监控样本的具体值。</p>
<h3 id="样本"><a href="#样本" class="headerlink" title="样本"></a>样本</h3><p>Prometheus 会将所有采集到的样本数据以时间序列（time-series）的方式保存在内存数据库中，并且定时保存到硬盘上。如下所示，可以将 time-series 理解为一个以时间为 Y 轴的数字矩阵：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">^</span></span><br><span class="line"><span class="string">│</span>   <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span>   <span class="string">.</span> <span class="string">.</span>   <span class="string">node_cpu&#123;cpu="cpu0",mode="idle"&#125;</span></span><br><span class="line"><span class="string">│</span>     <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span>   <span class="string">node_cpu&#123;cpu="cpu0",mode="system"&#125;</span></span><br><span class="line"><span class="string">│</span>     <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span>   <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span>   <span class="string">node_load1&#123;&#125;</span></span><br><span class="line"><span class="string">│</span>     <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span> <span class="string">.</span>   <span class="string">.</span> <span class="string">.</span>  </span><br><span class="line"><span class="string">v</span></span><br><span class="line">  <span class="string">&lt;------------------</span> <span class="string">时间</span> <span class="bullet">----------------&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 time-series 中的每一个点称为一个样本（sample），样本由以下三部分组成：</p>
<ul>
<li>指标 (metric)：metric name 和描述当前样本特征的 label sets。</li>
<li>时间戳 (timestamp)：一个精确到毫秒的时间戳。</li>
<li>样本值 (value)： 一个 folat64 的浮点型数据表示当前样本的值。</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;---------------</span> <span class="string">metric</span> <span class="bullet">---------------------&gt;&lt;-timestamp</span> <span class="bullet">-&gt;&lt;-value-&gt;</span></span><br><span class="line"><span class="string">http_request_total&#123;status="200",</span> <span class="string">method="GET"&#125;@1434417560938</span> <span class="string">=&gt;</span> <span class="number">94355</span></span><br><span class="line"><span class="string">http_request_total&#123;status="200",</span> <span class="string">method="GET"&#125;@1434417561287</span> <span class="string">=&gt;</span> <span class="number">94334</span></span><br><span class="line"></span><br><span class="line"><span class="string">http_request_total&#123;status="404",</span> <span class="string">method="GET"&#125;@1434417560938</span> <span class="string">=&gt;</span> <span class="number">38473</span></span><br><span class="line"><span class="string">http_request_total&#123;status="404",</span> <span class="string">method="GET"&#125;@1434417561287</span> <span class="string">=&gt;</span> <span class="number">38544</span></span><br><span class="line"></span><br><span class="line"><span class="string">http_request_total&#123;status="200",</span> <span class="string">method="POST"&#125;@1434417560938</span> <span class="string">=&gt;</span> <span class="number">4748</span></span><br><span class="line"><span class="string">http_request_total&#123;status="200",</span> <span class="string">method="POST"&#125;@1434417561287</span> <span class="string">=&gt;</span> <span class="number">4785</span></span><br></pre></td></tr></table></figure>

<h3 id="指标-Metric"><a href="#指标-Metric" class="headerlink" title="指标 (Metric)"></a>指标 (Metric)</h3><p>在形式上，所有的指标 (Metric) 都通过如下格式标示：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;metric</span> <span class="string">name&gt;&#123;&lt;label</span> <span class="string">name&gt;=&lt;label</span> <span class="string">value&gt;,</span> <span class="string">...&#125;</span></span><br></pre></td></tr></table></figure>

<p>指标名称（metric name）：反映监控样本的含义。</p>
<p>标签（label）：反映当前样本的特征维度。</p>
<p>指标类型：Counter（计数器）、Gauge（仪表盘）、Histogram（直方图）、Summary（摘要）</p>
<p>Counter：只增不减的计数器</p>
<p>Gauge：可增可减的仪表盘</p>
<p>使用 Histogram 和 Summary 分析数据分布情况</p>
<h2 id="告警"><a href="#告警" class="headerlink" title="告警"></a>告警</h2>]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
  </entry>
  <entry>
    <title>项目</title>
    <url>/blog/2019/10/22/project/</url>
    <content><![CDATA[<h2 id="监控告警"><a href="#监控告警" class="headerlink" title="监控告警"></a>监控告警</h2><p><strong>背景</strong>：为了托管已上线 <code>MySQL</code> 系统，建立完善的监控体系，提升业务系统稳定性，达到以下 <code>3</code> 个目的：</p>
<ul>
<li><strong>告警</strong>：当系统出现或者即将出现故障时，监控系统需要迅速反应并通知管理员，从而能够对问题进行快速的处理或者提前预防问题的发生，避免出现对业务的影响。</li>
<li><strong>故障分析与定位</strong>：当问题发生后，需要对问题进行调查和处理。通过对不同监控监控以及历史数据的分析，能够找到并解决根源问题。</li>
<li><strong>数据可视化</strong>：通过可视化仪表盘能够直接获取系统的运行状态、资源使用情况、以及服务运行状态等直观的信息。</li>
</ul>
<p><strong>技术方案</strong>：[<a href="https://prometheus.io" target="_blank" rel="noopener"><strong>Prometheus</strong></a>] [<a href="https://grafana.com" target="_blank" rel="noopener"><strong>Grafana</strong></a>] [<a href="https://www.consul.io/" target="_blank" rel="noopener"><strong>Consul</strong></a>] [<a href="https://www.percona.com/doc/percona-monitoring-and-management/index.html" target="_blank" rel="noopener"><strong>PMM</strong></a>] </p>
<h2 id="运维工单"><a href="#运维工单" class="headerlink" title="运维工单"></a>运维工单</h2><p><strong>背景</strong>：日常运维问题繁多，提高运维效率。</p>
<p><strong>技术方案</strong>：[<a href="https://golang.google.cn/" target="_blank" rel="noopener"><strong>Golang</strong></a>] [<a href="https://cn.vuejs.org/" target="_blank" rel="noopener"><strong>Vue</strong></a>] [<a href="https://element.eleme.cn/#/" target="_blank" rel="noopener"><strong>Element UI</strong></a>] [<a href="https://www.heidisql.com/" target="_blank" rel="noopener"><strong>HeidiSQL</strong></a>] [<a href="https://www.percona.com/downloads/percona-toolkit" target="_blank" rel="noopener"><strong>Percona Toolkit</strong></a>] </p>
<h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p><strong>背景</strong>：上线项目系统（<code>MySQL</code>、<code>Oracle</code>、<code>Server SQL</code>、小型机、etc. ）之前未做备份恢复演练，也有部分上线系统未备份，存在巨大的数据安全风险，全量排查消除隐患。</p>
<p><strong>技术方案</strong>：[<a href="https://www.commvault.com.cn/" target="_blank" rel="noopener"><strong>Commvault</strong></a>] [<a href="https://www.percona.com/software/mysql-database/percona-xtrabackup" target="_blank" rel="noopener"><strong>Percona XtraBackup</strong></a>]</p>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p><strong>背景</strong>：数据库 <code>slowlog</code> 发布每周报告，需要从管理视角驱动质量提升，展现技术平台的价值。</p>
<p><strong>技术方案</strong>：[<a href="https://www.aliyun.com/product/hdm" target="_blank" rel="noopener"><strong>HDM</strong></a>] [<a href="https://www.percona.com/downloads/percona-toolkit" target="_blank" rel="noopener"><strong>Percona Toolkit</strong></a>]</p>
<h2 id="堡垒机"><a href="#堡垒机" class="headerlink" title="堡垒机"></a>堡垒机</h2><p><strong>背景</strong>：核心功能是用于实现对运维操作人员的<strong>权限控制</strong>与<strong>操作行为审计</strong>，<a href="http://www.openskill.cn/article/260" target="_blank" rel="noopener"><strong>工作原理</strong></a></p>
<p><strong>技术方案</strong>：[<a href="http://www.jumpserver.org" target="_blank" rel="noopener"><strong>Jumpserver</strong></a>]</p>
<h2 id="容灾"><a href="#容灾" class="headerlink" title="容灾"></a>容灾</h2><p><strong>背景</strong>：为解决本地机房发生重大灾难，数据不可恢复，特在红岛建立的灾备数据中心。</p>
<p><strong>技术方案</strong>：[<strong><a href="https://huiraoo.github.io/blog/2019/09/04/mysql-disaster/">容灾</a></strong>]</p>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
  </entry>
  <entry>
    <title>Python</title>
    <url>/blog/2019/10/22/python/</url>
    <content><![CDATA[<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-26-091030.jpeg" alt></p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-introduction/">Python · 简介安装</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-datatype/">Python · 数据类型</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-control/">Python · 控制流</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-function/">Python · 函数</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-module/">Python · 模块和包</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-oop/">Python · 面向对象编程</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-exception/">Python · 异常</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-io/">Pyhton · I/O 编程</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-threads/">Python · 进程与线程</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-regular/">Python · 正则表达式</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-socket/">Python · 网络编程</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-testing/">Python · 测试</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/24/python-rules/">Python · 开发规范</a></li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例分析 · 磁盘空间不足</title>
    <url>/blog/2019/10/21/mysql-case-diskspace/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ df -h</span><br><span class="line">Filesystem                               Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/centos_cosmoim--zdyq05-root  <span class="number">100</span>G   <span class="number">13</span>G   <span class="number">87</span>G  <span class="number">13</span>% /</span><br><span class="line">devtmpfs                                  <span class="number">63</span>G     <span class="number">0</span>   <span class="number">63</span>G   <span class="number">0</span>% /dev</span><br><span class="line">tmpfs                                     <span class="number">63</span>G     <span class="number">0</span>   <span class="number">63</span>G   <span class="number">0</span>% /dev/shm</span><br><span class="line">tmpfs                                     <span class="number">63</span>G  <span class="number">130</span>M   <span class="number">63</span>G   <span class="number">1</span>% /run</span><br><span class="line">tmpfs                                     <span class="number">63</span>G     <span class="number">0</span>   <span class="number">63</span>G   <span class="number">0</span>% /sys/fs/cgroup</span><br><span class="line">/dev/sda1                                <span class="number">497</span>M  <span class="number">172</span>M  <span class="number">326</span>M  <span class="number">35</span>% /boot</span><br><span class="line">/dev/mapper/centos_cosmoim--zdyq05-data  <span class="number">888</span>G  <span class="number">581</span>G  <span class="number">308</span>G  <span class="number">66</span>% /<span class="keyword">data</span></span><br><span class="line">tmpfs                                     <span class="number">13</span>G   <span class="number">12</span>K   <span class="number">13</span>G   <span class="number">1</span>% /run/user/<span class="number">42</span></span><br><span class="line">tmpfs                                     <span class="number">13</span>G     <span class="number">0</span>   <span class="number">13</span>G   <span class="number">0</span>% /run/user/<span class="number">1001</span></span><br><span class="line">tmpfs                                     <span class="number">13</span>G     <span class="number">0</span>   <span class="number">13</span>G   <span class="number">0</span>% /run/user/<span class="number">1002</span></span><br><span class="line">tmpfs                                     <span class="number">13</span>G     <span class="number">0</span>   <span class="number">13</span>G   <span class="number">0</span>% /run/user/<span class="number">0</span></span><br></pre></td></tr></table></figure>

<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p><strong>文件排序命令</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ du -sxh /dir/* | sort -rh | head -<span class="number">5</span></span><br><span class="line"></span><br><span class="line">du</span><br><span class="line">-s：仅显示总计</span><br><span class="line">-x：以一开始的文件系统为准，忽略其他不同文件系统的目录</span><br><span class="line">-h：以可读形式显示文件大小</span><br><span class="line"></span><br><span class="line">sort</span><br><span class="line">-r：倒序排序</span><br><span class="line">-h：以可读数字进行比较</span><br><span class="line"></span><br><span class="line">head</span><br><span class="line">-n：打印文本的前n行</span><br></pre></td></tr></table></figure>

<p><strong>多次执行查找最大文件</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ du -sxh /<span class="keyword">data</span>/* | sort -rh | head -<span class="number">5</span></span><br><span class="line"><span class="number">339</span>G	/<span class="keyword">data</span>/mysql</span><br><span class="line"><span class="number">243</span>G	/<span class="keyword">data</span>/backup</span><br><span class="line"><span class="number">4.0</span>K	/<span class="keyword">data</span>/backup.sh</span><br><span class="line"></span><br><span class="line">$ du -sxh /<span class="keyword">data</span>/mysql/* | sort -rh | head -<span class="number">5</span></span><br><span class="line"><span class="number">267</span>G	/<span class="keyword">data</span>/mysql/cosmo_im_1004</span><br><span class="line"><span class="number">1.1</span>G	/<span class="keyword">data</span>/mysql/mysql-binlog.<span class="number">000944</span></span><br><span class="line"><span class="number">1.1</span>G	/<span class="keyword">data</span>/mysql/mysql-binlog.<span class="number">000943</span></span><br><span class="line"><span class="number">1.1</span>G	/<span class="keyword">data</span>/mysql/mysql-binlog.<span class="number">000942</span></span><br><span class="line"><span class="number">1.1</span>G	/<span class="keyword">data</span>/mysql/mysql-binlog.<span class="number">000941</span></span><br><span class="line"></span><br><span class="line">$ du -sxh /<span class="keyword">data</span>/mysql/cosmo_im_1004/* | sort -rh | head -<span class="number">5</span></span><br><span class="line"><span class="number">231</span>G	/<span class="keyword">data</span>/mysql/cosmo_im_1004/bns_pm_pokayoke.ibd</span><br><span class="line"><span class="number">3.8</span>G	/<span class="keyword">data</span>/mysql/cosmo_im_1004/bns_pm_scanscehistory.ibd</span><br><span class="line"><span class="number">3.5</span>G	/<span class="keyword">data</span>/mysql/cosmo_im_1004/bns_pm_scanhistory_month.ibd</span><br><span class="line"><span class="number">3.4</span>G	/<span class="keyword">data</span>/mysql/cosmo_im_1004/bns_io_pm_pokayoke.ibd</span><br><span class="line"><span class="number">3.0</span>G	/<span class="keyword">data</span>/mysql/cosmo_im_1004/bns_pm_operation.ibd</span><br></pre></td></tr></table></figure>

<p>最终，确定最大文件是 <code>/data/mysql/cosmo_im_1004/bns_pm_pokayoke.ibd</code></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7 安装 Python pip</title>
    <url>/blog/2019/10/21/centos7-pip/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CentOS 7.x</code> 默认安装的版本为 <code>python 2.7.5</code>，默认是没有安装 <code>pip</code></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>yum 安装</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum -y install epel-release</span><br><span class="line">$ yum -y install python-pip</span><br></pre></td></tr></table></figure>

<p><strong>脚本安装</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">$ python get-pip.py</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 误操作场景下数据快速恢复</title>
    <url>/blog/2019/10/21/mysql-rollback/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>线上环境核心业务数据，<code>delete/update</code> 操作一张表，忘加 <code>where</code> 限制条件，<strong>如何快速恢复？</strong></p>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><ul>
<li><strong>备份恢复</strong>：先用全量备份恢复实例，再利用增量 <code>binlog</code> 备份恢复到误操作之前的状态，<strong>费时费力！</strong></li>
<li><strong>第三方工具</strong>：<a href="https://github.com/danfengcao/binlog2sql" target="_blank" rel="noopener">binlog2sql</a>（支持 <code>DML Delete/Update</code> 等语句回滚，不支持 <code>DDL Drop</code> 等语句回滚）</li>
</ul>
<h2 id="binlog2sql-工具实战"><a href="#binlog2sql-工具实战" class="headerlink" title="binlog2sql 工具实战"></a>binlog2sql 工具实战</h2><h3 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h3><ul>
<li>MySQL 5.6/5.7</li>
<li>Delete、Update</li>
</ul>
<h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><ul>
<li><strong>MySQL 配置要求</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server_id = <span class="number">1</span></span><br><span class="line">log_bin = /<span class="keyword">data</span>/mysql/mysql-bin.log</span><br><span class="line">binlog_format = row</span><br><span class="line">binlog_row_image = full</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'server_id'</span>;</span><br><span class="line">+---------------+---------+</span><br><span class="line">| Variable_name | Value   |</span><br><span class="line">+---------------+---------+</span><br><span class="line">| server_id     | <span class="number">3306100</span> |</span><br><span class="line">+---------------+---------+</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">'log_bin%'</span>;</span><br><span class="line">+---------------------------------+--------------------------------+</span><br><span class="line">| Variable_name                   | Value                          |</span><br><span class="line">+---------------------------------+--------------------------------+</span><br><span class="line">| log_bin                         | ON                             |</span><br><span class="line">| log_bin_basename                | /<span class="keyword">data</span>/mysql/mysql-binlog       |                        </span><br><span class="line">+---------------------------------+--------------------------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">'binlog_format'</span>;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| binlog_format | ROW   |</span><br><span class="line">+---------------+-------+</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">'binlog_row_image'</span>;</span><br><span class="line">+------------------+-------+</span><br><span class="line">| Variable_name    | Value |</span><br><span class="line">+------------------+-------+</span><br><span class="line">| binlog_row_image | FULL  |</span><br><span class="line">+------------------+-------+</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>MySQL 权限要求</strong>：<code>SELECT</code>、<code>REPLICATION SLAVE</code>、<code>REPLICATION CLIENT</code></li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show grants for 'cosmo_t'\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">Grants for cosmo_t@%: <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span>, <span class="keyword">CREATE</span>, <span class="keyword">DROP</span>, RELOAD, <span class="keyword">SHUTDOWN</span>, PROCESS, <span class="keyword">FILE</span>, <span class="keyword">REFERENCES</span>, <span class="keyword">INDEX</span>, <span class="keyword">ALTER</span>, <span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>, SUPER, <span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLES</span>, <span class="keyword">LOCK</span> <span class="keyword">TABLES</span>, <span class="keyword">EXECUTE</span>, <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>, <span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span>, <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>, <span class="keyword">SHOW</span> <span class="keyword">VIEW</span>, <span class="keyword">CREATE</span> ROUTINE, <span class="keyword">ALTER</span> ROUTINE, <span class="keyword">CREATE</span> <span class="keyword">USER</span>, <span class="keyword">EVENT</span>, <span class="keyword">TRIGGER</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'cosmo_t'</span>@<span class="string">'%'</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>申请特权账号，登录服务器</strong></li>
</ul>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ul>
<li><p>安装 <a href="https://huiraoo.github.io/blog/2019/10/21/centos7-pip/">pip</a></p>
</li>
<li><p>安装 <a href="https://github.com/danfengcao/binlog2sql" target="_blank" rel="noopener">binlog2sql</a></p>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cd /usr/local/src</span><br><span class="line">$ git clone https://github.com/danfengcao/binlog2sql.git &amp;&amp; cd binlog2sql</span><br><span class="line">$ pip install -r requirements.txt</span><br></pre></td></tr></table></figure>

<ul>
<li>根据误操作时间，确定 <code>binlog</code> 文件</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+---------------------+-----------+--------------+------------------+-------------------+</span><br><span class="line">| File                | Position  | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+---------------------+-----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.<span class="number">000020</span>    | <span class="number">576640842</span> |              |                  |                   |</span><br><span class="line">+---------------------+-----------+--------------+------------------+-------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">$ ll /<span class="keyword">data</span>/mysql | grep mysql-bin</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Oct <span class="number">23</span> <span class="number">03</span>:<span class="number">03</span> mysql-binlog.<span class="number">000224</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Oct <span class="number">24</span> <span class="number">12</span>:<span class="number">25</span> mysql-binlog.<span class="number">000225</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Oct <span class="number">25</span> <span class="number">18</span>:<span class="number">32</span> mysql-binlog.<span class="number">000226</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Oct <span class="number">27</span> <span class="number">00</span>:<span class="number">21</span> mysql-binlog.<span class="number">000227</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Oct <span class="number">28</span> <span class="number">05</span>:<span class="number">45</span> mysql-binlog.<span class="number">000228</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Oct <span class="number">29</span> <span class="number">12</span>:<span class="number">32</span> mysql-binlog.<span class="number">000229</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Oct <span class="number">30</span> <span class="number">19</span>:<span class="number">00</span> mysql-binlog.<span class="number">000230</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">1</span> <span class="number">16</span>:<span class="number">30</span> mysql-binlog.<span class="number">000231</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">3</span> <span class="number">00</span>:<span class="number">20</span> mysql-binlog.<span class="number">000232</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">4</span> <span class="number">16</span>:<span class="number">47</span> mysql-binlog.<span class="number">000233</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">1.1</span>G Nov  <span class="number">6</span> <span class="number">00</span>:<span class="number">21</span> mysql-binlog.<span class="number">000234</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql <span class="number">473</span>M Nov  <span class="number">6</span> <span class="number">14</span>:<span class="number">48</span> mysql-binlog.<span class="number">000235</span></span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql  <span class="number">384</span> Nov  <span class="number">6</span> <span class="number">00</span>:<span class="number">21</span> mysql-binlog.index</span><br></pre></td></tr></table></figure>

<ul>
<li>定位误执行 <code>SQL</code></li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ python binlog2sql.py -h'x.x.x.x' -uroot -p'xx' -dtest -temployees <span class="comment">--start-file='mysql-bin.000020' --sql-type=DELETE &gt; result.sql</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="string">`test`</span>.<span class="string">`employees`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span>=<span class="string">'xujinliang'</span> <span class="keyword">AND</span> <span class="string">`gmt_modified`</span>=<span class="string">'2019-09-24 17:13:00'</span> <span class="keyword">AND</span> <span class="string">`age`</span>=<span class="number">32</span> <span class="keyword">AND</span> <span class="string">`gmt_create`</span>=<span class="string">'2019-09-24 17:13:00'</span> <span class="keyword">AND</span> <span class="string">`address`</span>=<span class="string">'山东省青岛市'</span> <span class="keyword">AND</span> <span class="string">`id`</span>=<span class="number">1</span> <span class="keyword">LIMIT</span> <span class="number">1</span>; <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="string">`test`</span>.<span class="string">`employees`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span>=<span class="string">'maofang'</span> <span class="keyword">AND</span> <span class="string">`gmt_modified`</span>=<span class="string">'2019-09-24 17:40:49'</span> <span class="keyword">AND</span> <span class="string">`age`</span>=<span class="number">32</span> <span class="keyword">AND</span> <span class="string">`gmt_create`</span>=<span class="string">'2019-09-24 17:32:00'</span> <span class="keyword">AND</span> <span class="string">`address`</span>=<span class="string">'山东省青岛市'</span> <span class="keyword">AND</span> <span class="string">`id`</span>=<span class="number">2</span> <span class="keyword">LIMIT</span> <span class="number">1</span>; <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="string">`test`</span>.<span class="string">`employees`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span>=<span class="string">'raohui'</span> <span class="keyword">AND</span> <span class="string">`gmt_modified`</span>=<span class="string">'2019-09-24 17:39:28'</span> <span class="keyword">AND</span> <span class="string">`age`</span>=<span class="number">29</span> <span class="keyword">AND</span> <span class="string">`gmt_create`</span>=<span class="string">'2019-09-24 17:39:28'</span> <span class="keyword">AND</span> <span class="string">`address`</span>=<span class="string">'陕西省西安市'</span> <span class="keyword">AND</span> <span class="string">`id`</span>=<span class="number">3</span> <span class="keyword">LIMIT</span> <span class="number">1</span>; <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="string">`test`</span>.<span class="string">`employees`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span>=<span class="string">'yangnan'</span> <span class="keyword">AND</span> <span class="string">`gmt_modified`</span>=<span class="string">'2019-09-24 17:39:52'</span> <span class="keyword">AND</span> <span class="string">`age`</span>=<span class="number">22</span> <span class="keyword">AND</span> <span class="string">`gmt_create`</span>=<span class="string">'2019-09-24 17:39:52'</span> <span class="keyword">AND</span> <span class="string">`address`</span> <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">AND</span> <span class="string">`id`</span>=<span class="number">4</span> <span class="keyword">LIMIT</span> <span class="number">1</span>; <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="string">`test`</span>.<span class="string">`employees`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span>=<span class="string">'yuzhiqiang'</span> <span class="keyword">AND</span> <span class="string">`gmt_modified`</span>=<span class="string">'2019-09-24 17:40:03'</span> <span class="keyword">AND</span> <span class="string">`age`</span>=<span class="number">29</span> <span class="keyword">AND</span> <span class="string">`gmt_create`</span>=<span class="string">'2019-09-24 17:40:03'</span> <span class="keyword">AND</span> <span class="string">`address`</span> <span class="keyword">IS</span> <span class="literal">NULL</span> <span class="keyword">AND</span> <span class="string">`id`</span>=<span class="number">5</span> <span class="keyword">LIMIT</span> <span class="number">1</span>; <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br></pre></td></tr></table></figure>

<ul>
<li>解析出回滚 <code>SQL</code>，并检查回滚 <code>SQL</code> 是否正确</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ python binlog2sql.py -h127.0.0.1 -P3306 -uroot -p'xx' -dtest -temployees <span class="comment">--start-file='mysql-bin.000020' --start-pos=66374969 --end-pos=66375406 -B &gt; rollback.sql</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`test`</span>.<span class="string">`employees`</span>(<span class="string">`name`</span>, <span class="string">`gmt_modified`</span>, <span class="string">`age`</span>, <span class="string">`gmt_create`</span>, <span class="string">`address`</span>, <span class="string">`id`</span>) <span class="keyword">VALUES</span> (<span class="string">'yuzhiqiang'</span>, <span class="string">'2019-09-24 17:40:03'</span>, <span class="number">29</span>, <span class="string">'2019-09-24 17:40:03'</span>, <span class="literal">NULL</span>, <span class="number">5</span>); <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`test`</span>.<span class="string">`employees`</span>(<span class="string">`name`</span>, <span class="string">`gmt_modified`</span>, <span class="string">`age`</span>, <span class="string">`gmt_create`</span>, <span class="string">`address`</span>, <span class="string">`id`</span>) <span class="keyword">VALUES</span> (<span class="string">'yangnan'</span>, <span class="string">'2019-09-24 17:39:52'</span>, <span class="number">22</span>, <span class="string">'2019-09-24 17:39:52'</span>, <span class="literal">NULL</span>, <span class="number">4</span>); <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`test`</span>.<span class="string">`employees`</span>(<span class="string">`name`</span>, <span class="string">`gmt_modified`</span>, <span class="string">`age`</span>, <span class="string">`gmt_create`</span>, <span class="string">`address`</span>, <span class="string">`id`</span>) <span class="keyword">VALUES</span> (<span class="string">'raohui'</span>, <span class="string">'2019-09-24 17:39:28'</span>, <span class="number">29</span>, <span class="string">'2019-09-24 17:39:28'</span>, <span class="string">'陕西省西安市'</span>, <span class="number">3</span>); <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`test`</span>.<span class="string">`employees`</span>(<span class="string">`name`</span>, <span class="string">`gmt_modified`</span>, <span class="string">`age`</span>, <span class="string">`gmt_create`</span>, <span class="string">`address`</span>, <span class="string">`id`</span>) <span class="keyword">VALUES</span> (<span class="string">'maofang'</span>, <span class="string">'2019-09-24 17:40:49'</span>, <span class="number">32</span>, <span class="string">'2019-09-24 17:32:00'</span>, <span class="string">'山东省青岛市'</span>, <span class="number">2</span>); <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`test`</span>.<span class="string">`employees`</span>(<span class="string">`name`</span>, <span class="string">`gmt_modified`</span>, <span class="string">`age`</span>, <span class="string">`gmt_create`</span>, <span class="string">`address`</span>, <span class="string">`id`</span>) <span class="keyword">VALUES</span> (<span class="string">'xujinliang'</span>, <span class="string">'2019-09-24 17:13:00'</span>, <span class="number">32</span>, <span class="string">'2019-09-24 17:13:00'</span>, <span class="string">'山东省青岛市'</span>, <span class="number">1</span>); <span class="comment">#start 66374969 end 66375406 time 2019-10-21 15:38:49</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>Tips</strong>：回滚条数可以使用 <code>%s/pattern/&amp;/g</code> 进行统计，<code>pattern</code> 是要搜索的关键字。</p>
</blockquote>
<ul>
<li>确认回滚 <code>SQL</code> 正确，执行回滚语句</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ mysql -h127.0.0.1 -P3306 -uroot -p'xx' &lt; rollback.sql</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from employees;</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">| id | name       | address            | age | gmt_create          | gmt_modified        |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">|  1 | xujinliang | 山东省青岛市         |  32 | 2019-09-24 17:13:00 | 2019-09-24 17:13:00 |</span><br><span class="line">|  2 | maofang    | 山东省青岛市         |  32 | 2019-09-24 17:32:00 | 2019-09-24 17:40:49 |</span><br><span class="line">|  3 | raohui     | 陕西省西安市         |  29 | 2019-09-24 17:39:28 | 2019-09-24 17:39:28 |</span><br><span class="line">|  4 | yangnan    | NULL               |  22 | 2019-09-24 17:39:52 | 2019-09-24 17:39:52 |</span><br><span class="line">|  5 | yuzhiqiang | NULL               |  29 | 2019-09-24 17:40:03 | 2019-09-24 17:40:03 |</span><br><span class="line">+<span class="comment">----+------------+--------------------+-----+---------------------+---------------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 连接配置</span></span><br><span class="line">-h host; -P port; -u user; -p password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析模式</span></span><br><span class="line">-B, --flashback              <span class="comment"># 生成回滚SQL</span></span><br><span class="line">--start-file                 <span class="comment"># 起始解析文件</span></span><br><span class="line">--start-position/--start-pos <span class="comment"># 起始解析位置</span></span><br><span class="line">--stop-file/--end-file       <span class="comment"># 终止解析文件</span></span><br><span class="line">--stop-position/--end-pos    <span class="comment"># 终止解析位置</span></span><br><span class="line">--start-datetime             <span class="comment"># 起始解析时间</span></span><br><span class="line">--stop-datetime              <span class="comment"># 终止解析时间，格式'%Y-%m-%d %H:%M:%S'</span></span><br><span class="line">-d, --databases              <span class="comment"># 只解析目标DB的SQL，多个库用空格隔开</span></span><br><span class="line">-t, --tables                 <span class="comment"># 只解析目标表的SQL，多张表用空格隔开</span></span><br><span class="line">--only-dml                   <span class="comment"># 只解析DML，忽略DDL</span></span><br><span class="line">--sql-type                   <span class="comment"># 只解析指定类型，支持INSERT, UPDATE, DELETE，多个类型用空格隔开</span></span><br></pre></td></tr></table></figure>

<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>还是先恢复再去面壁思过吧！</li>
<li>手工执行 <code>delete</code>、<code>update</code> 语句前，先执行 <code>selete</code> 语句。</li>
<li><code>drop</code> 或者 <code>truncate</code> 语句造成的误操作，通过备份来恢复。</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>最佳实践</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL · 修改数据库名</title>
    <url>/blog/2019/10/21/mysql-modify-dbname/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><strong>需求</strong>：将数据库 <code>hrtrqu</code> 修改 <code>hrtrzq</code></p>
<p><strong>方案</strong>：MySQL 没有 <code>rename database</code> 命令，只能变相修改表到目标库里的表来实现。</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p><strong>1. 导出库数据</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysqldump  --single-transaction -S /<span class="keyword">data</span>/mysql3308/mysql.sock -usre -p<span class="string">'xx'</span> hrtrqu &gt; hrtrqu.sql</span><br></pre></td></tr></table></figure>

<p><strong>2. 创建新库 hrtrzq</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> hrtrzq <span class="keyword">default</span> <span class="keyword">charset</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br></pre></td></tr></table></figure>

<p><strong>3. 导入数据到新库</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysql -S /<span class="keyword">data</span>/mysql3308/mysql.sock -usre -p<span class="string">'sre@@p$i'</span> hrtrzq &lt; hrtrqu.sql</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 快速删除大表</title>
    <url>/blog/2019/10/21/mysql-delete-bigtable/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>生产环境有一张日志表 <code>schedule_task_error_log</code> ，数据量超过 <code>5000w</code>，想通过 <code>drop</code> 删除但是速度很慢。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql <span class="number">5.1</span>K Jan  <span class="number">8</span>  <span class="number">2018</span> schedule_task_error_log.frm</span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">36</span>G May <span class="number">16</span> <span class="number">18</span>:<span class="number">14</span> schedule_task_error_log.ibd</span><br></pre></td></tr></table></figure>

<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-21-114430.jpg" alt></p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><strong>前提</strong>：<code>MySQL</code> 开启了<strong>独立表空间</strong>，<code>MySQL 5.6.7</code> 之后默认开启。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB&gt; show variables like 'innodb_file_per_table';</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br><span class="line">| Variable_name         | Value |</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br><span class="line">| innodb_file_per_table | ON    |</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br></pre></td></tr></table></figure>

<p><code>MySQL</code> 在删除大表的时候为什么慢？</p>
<ul>
<li><code>Buffer Pool</code> 页面清除过程（拥有 <code>InnoDB</code> 全局锁）</li>
<li>删除 <code>ibd</code> 磁盘文件过程</li>
</ul>
<p><strong>方案</strong>：利用了 <code>Linux</code> 中 <strong>硬链接</strong> 减少 <code>DDL</code> 时间，加快锁释放，来进行快速删除。</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p><strong>1. 建立硬连接</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ ln schedule_task_error_log.ibd schedule_task_error_log.ibd.hdlk</span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql <span class="number">5.1</span>K Jan  <span class="number">8</span>  <span class="number">2018</span> schedule_task_error_log.frm</span><br><span class="line">-rw-rw----. <span class="number">2</span> mysql mysql  <span class="number">36</span>G May <span class="number">16</span> <span class="number">18</span>:<span class="number">14</span> schedule_task_error_log.ibd</span><br><span class="line">-rw-rw----. <span class="number">2</span> mysql mysql  <span class="number">36</span>G May <span class="number">16</span> <span class="number">18</span>:<span class="number">14</span> schedule_task_error_log.ibd.hdlk</span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql <span class="number">5.8</span>K Mar <span class="number">14</span>  <span class="number">2018</span> user_operation_syslog.frm</span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql <span class="number">272</span>K Feb <span class="number">13</span>  <span class="number">2019</span> user_operation_syslog.ibd</span><br></pre></td></tr></table></figure>

<p><strong>2. drop table</strong></p>
<p>再看物理文件的引用数变为 1，然后我们可以另外找时间手动删除物理文件。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">MariaDB&gt; drop table schedule_task_error_log;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.78</span> sec)</span><br><span class="line"></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">36</span>G May <span class="number">16</span> <span class="number">18</span>:<span class="number">14</span> schedule_task_error_log.ibd.hdlk</span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql <span class="number">5.8</span>K Mar <span class="number">14</span>  <span class="number">2018</span> user_operation_syslog.frm</span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql <span class="number">272</span>K Feb <span class="number">13</span>  <span class="number">2019</span> user_operation_syslog.ibd</span><br></pre></td></tr></table></figure>

<p><strong>3. 删除物理文件</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ rm -rf schedule_task_error_log.ibd.hdlk</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>Redis</title>
    <url>/blog/2019/10/20/redis/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Redis (Remote Dictionary Server)，</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-<span class="number">5.0</span>.<span class="number">5</span>.tar.gz</span><br><span class="line">$ tar xzf redis-<span class="number">5.0</span>.<span class="number">5</span>.tar.gz</span><br><span class="line">$ cd redis-<span class="number">5.0</span>.<span class="number">5</span></span><br><span class="line">$ make</span><br><span class="line">$ cd src</span><br><span class="line">$ ./redis-server</span><br><span class="line">$ ./redis-server ../redis.conf</span><br><span class="line"></span><br><span class="line">$ ps -ef | grep redis</span><br><span class="line">root     <span class="number">112021</span>      <span class="number">1</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">02</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> ./redis-server *:<span class="number">6379</span></span><br><span class="line">root     <span class="number">112563</span>  <span class="number">82349</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">04</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep --color=auto redis</span><br></pre></td></tr></table></figure>

<p><code>redis.conf</code> 是默认的配置文件，可以根据需要使用自定义配置文件。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cd src</span><br><span class="line">$ ./redis-cli</span><br><span class="line">redis&gt; set foo bar</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Redis</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 磁盘分析工具 pt-diskstats</title>
    <url>/blog/2019/10/19/pt-diskstats/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 用户权限显示工具 pt-show-grants</title>
    <url>/blog/2019/10/19/pt-show-grants/</url>
    <content><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>显示 <code>mysql.user</code> 所有用户及权限</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul>
<li>先查找所有 <code>user</code> 和 <code>host</code></li>
<li>然后逐个执行 <code>show grants</code></li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pt-show-grants -u <span class="string">'xx'</span> -p <span class="string">'xx'</span> -S /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">-- Grants dumped by pt-show-grants</span><br><span class="line">-- Dumped from server Localhost via UNIX socket, MySQL <span class="number">5.7</span>.<span class="number">23</span>-log at <span class="number">2019</span>-<span class="number">10</span>-<span class="number">18</span> <span class="number">15</span>:<span class="number">56</span>:<span class="number">29</span></span><br><span class="line">-- Grants <span class="keyword">for</span> <span class="string">'hdm'</span><span class="string">@'%'</span></span><br><span class="line"><span class="string">CREATE USER IF NOT EXISTS 'hdm'@'%';</span></span><br><span class="line"><span class="string">ALTER USER 'hdm'@'%' IDENTIFIED WITH 'mysql_native_password' AS '*14533888C6CA3952B3957903FF7E69469C7E3A2B' REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK;</span></span><br><span class="line"><span class="string">GRANT PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SELECT, SHOW DATABASES ON *.* TO 'hdm'@'%';</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-- Grants for 'monitor'@'10.138.228.%'</span></span><br><span class="line"><span class="string">CREATE USER IF NOT EXISTS 'monitor'@'10.138.228.%';</span></span><br><span class="line"><span class="string">ALTER USER 'monitor'@'10.138.228.%' IDENTIFIED WITH 'mysql_native_password' AS '*67C7E9852A88EE023433F77C5C63AF9DD730667B' REQUIRE NONE PASSWORD EXPIRE DEFAULT ACCOUNT UNLOCK;</span></span><br><span class="line"><span class="string">GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'monitor'@'10.138.228.%';</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 索引分析工具 pt-index-usage</title>
    <url>/blog/2019/10/19/pt-index-usage/</url>
    <content><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>从日志当中分析索引的使用情况，检测多余的索引</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>通过 <code>EXPLAIN</code> 慢查询日志中的 <code>SQL</code>，然后用执行计划和数据库中的索引做对比，看哪些索引没有被利用</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pt-index-usage /<span class="keyword">data</span>/mysql/slow.log  -u <span class="string">'xx'</span> -p <span class="string">'xx'</span> -S /tmp/mysql.sock</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 复制异常修复工具 pt-slave-restart</title>
    <url>/blog/2019/10/19/pt-slave-restart/</url>
    <content><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><a href="https://www.percona.com/doc/percona-toolkit/LATEST/pt-slave-restart.html" target="_blank" rel="noopener"><strong>pt-slave-restart</strong></a>：是一个修复由于不同的错误而意外终止 <code>slave</code> 复制的工具，和配置参数 <a href="https://dev.mysql.com/doc/refman/5.7/en/replication-options-slave.html#sysvar_slave_skip_errors" target="_blank" rel="noopener">slave_skip_errors</a> 功能类似。</p>
<blockquote>
<p><strong>Warning</strong>：除非知道跳过操作的影响或后果，否则不要自动跳过任何错误，会影响数据一致性。</p>
</blockquote>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>它以指数变化的睡眠时间定期巡视检查 <code>slave</code> 复制状态，初始默认 <code>1s</code>，并试图跳过导致错误的语句。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Usage: pt-slave-restart [OPTIONS] [DSN]</span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">  --always               Start slaves even when there is no error（不建议使用此参数）</span><br><span class="line">  --ask-pass             Prompt <span class="keyword">for</span> a password when connecting to MySQL</span><br><span class="line">  --charset=s        -A  Default character set</span><br><span class="line">  --[no]check-relay-log  Check the last relay log file and position before</span><br><span class="line">                         checking <span class="keyword">for</span> slave errors (default yes)</span><br><span class="line">  --config=A             Read this comma-separated list of config files; <span class="keyword">if</span></span><br><span class="line">                         specified, this must be the first option on the</span><br><span class="line">                         command line</span><br><span class="line">  --daemonize            Fork to the background and detach from the shell</span><br><span class="line">  --database=s       -D  Database to use</span><br><span class="line">  --defaults-file=s  -F  Only read mysql options from the given file</span><br><span class="line">  --error-length=i       Max length of error message to print</span><br><span class="line">  --error-numbers=h      Only restart this comma-separated list of errors</span><br><span class="line">  --error-text=s         Only restart errors that match this pattern</span><br><span class="line">  --help                 Show help and <span class="keyword">exit</span></span><br><span class="line">  --host=s           -h  Connect to host</span><br><span class="line">  --log=s                Print all output to this file when daemonized</span><br><span class="line">  --master-uuid=s        When using GTID, an empty transaction should be</span><br><span class="line">                         created <span class="keyword">in</span> order to skip it</span><br><span class="line">  --max-sleep=f          Maximum sleep seconds (default <span class="number">64</span>)</span><br><span class="line">  --min-sleep=f          The minimum time pt-slave-restart will sleep before</span><br><span class="line">                         polling the slave again (default <span class="number">0.015625</span>)</span><br><span class="line">  --monitor              Whether to monitor the slave (default)</span><br><span class="line">  --password=s       -p  Password to use when connecting</span><br><span class="line">  --pid=s                Create the given PID file</span><br><span class="line">  --port=i           -P  Port number to use <span class="keyword">for</span> connection</span><br><span class="line">  --quiet            -q  Suppresses normal output (disables --verbose)</span><br><span class="line">  --recurse=i            Watch slaves of the specified server, up to the</span><br><span class="line">                         specified number of servers deep <span class="keyword">in</span> the hierarchy (</span><br><span class="line">                         default <span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">./pt-slave-restart -uroot -p<span class="string">'xx'</span> --error-numbers=<span class="number">1062</span></span><br><span class="line"><span class="number">2019</span>-<span class="number">05</span>-<span class="number">04</span>T00:<span class="number">59</span>:<span class="number">09</span> P=<span class="number">3306</span>,h=x.x.x.x,p=...,u=root relay-bin.<span class="number">000005</span>         <span class="number">369</span> <span class="number">1032</span> </span><br><span class="line"><span class="number">2019</span>-<span class="number">05</span>-<span class="number">04</span>T00:<span class="number">59</span>:<span class="number">20</span> P=<span class="number">3306</span>,h=x.x.x.x,p=...,u=root relay-bin.<span class="number">000005</span>         <span class="number">726</span> <span class="number">1032</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 慢日志分析工具 pt-query-digest</title>
    <url>/blog/2019/10/19/pt-query-digest/</url>
    <content><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>提供慢日志分析功能，与 <code>mysqldumpshow</code> 工具相比，<code>pt-query-digest</code> 工具的分析结果更具体，更完善。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><strong>第一部分：总体统计结果</strong></p>
<ul>
<li><strong>Overall</strong>：总共有多少条查询</li>
<li><strong>Time range</strong>：查询执行的时间范围</li>
<li><strong>unique</strong>：唯一查询数量，即对查询条件进行参数化以后，总共有多少个不同的查询</li>
<li><strong>total</strong>：总计   </li>
<li><strong>min</strong>：最小   </li>
<li><strong>max</strong>：最大  </li>
<li><strong>avg</strong>：平均</li>
<li><strong>95%</strong>：把所有值从小到大排列，位置位于 <code>95%</code> 的那个数，这个数一般最具有参考价值</li>
<li><strong>median</strong>：中位数，把所有值从小到大排列，位置位于中间那个数</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 8.7s user time, 170ms system time, 47.34M rss, 241.90M vsz</span></span><br><span class="line"><span class="comment"># Current date: Wed Oct 16 16:25:30 2019</span></span><br><span class="line"><span class="comment"># Hostname: console</span></span><br><span class="line"><span class="comment"># Files: slow.log</span></span><br><span class="line"><span class="comment"># Overall: 7.99k total, 894 unique, 0.00 QPS, 0.02x concurrency __________</span></span><br><span class="line"><span class="comment"># Time range: 2018-12-21T14:35:34 to 2019-10-16T07:09:56</span></span><br><span class="line"><span class="comment"># Attribute          total     min     max     avg     95%  stddev  median</span></span><br><span class="line"><span class="comment"># ============     ======= ======= ======= ======= ======= ======= =======</span></span><br><span class="line"><span class="comment"># Exec time        529092s      5s   6210s     66s    234s    211s     14s</span></span><br><span class="line"><span class="comment"># Lock time           808s       0    163s   101ms     5ms      3s   761us</span></span><br><span class="line"><span class="comment"># Rows sent        152.93M       0  15.14M  19.60k   1.39k 284.79k    0.99</span></span><br><span class="line"><span class="comment"># Rows examine     188.85G       0 867.98M  24.20M  72.18M  44.34M   3.68M</span></span><br><span class="line"><span class="comment"># Query size        31.32M       6  66.00k   4.01k  18.47k   5.60k  793.42</span></span><br></pre></td></tr></table></figure>

<p><strong>第二部分：查询分组统计结果</strong></p>
<ul>
<li><strong>Rank</strong>：所有语句的排名，默认按【time】降序排列，通过 <code>--order-by</code> 指定</li>
<li><strong>Query ID</strong>：语句 <code>ID</code></li>
<li><strong>Response</strong>：总的响应时间，单位为 <code>S</code></li>
<li><strong>Time</strong>：该查询在本次分析中总的时间占比</li>
<li><strong>Calls</strong>：执行次数，即本次分析总共有多少条这种类型的查询语句</li>
<li><strong>R/Call</strong>：平均每次执行的响应时间</li>
<li><strong>Item</strong>：查询对象</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Profile</span></span><br><span class="line"><span class="comment"># Rank Query ID                    Response time     Calls R/Call    V/M</span></span><br><span class="line"><span class="comment"># ==== =========================== ================= ===== ========= =====</span></span><br><span class="line"><span class="comment">#    1 0xFFF66E9B3D962FA319C806... 211420.4504 40.0%   260  813.1556 25.32 ROLLBACK</span></span><br><span class="line"><span class="comment">#    2 0x73AFBACFEBF3942B3B02FB...  33680.6071  6.4%   173  194.6856  0.26 INSERT SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT UNION SELECT d_etl_odsgvs_faglflext_all tdmetl.odsgvs_faglflext_all</span></span><br><span class="line"><span class="comment">#    3 0xE1EA5439ED76CBFAA1C5A3...  24517.0767  4.6%     4 6129.2692  1.79 SELECT v_gvs_zgvs_bseg_edw</span></span><br><span class="line"><span class="comment">#    4 0xE562308914915E2720E128...  21322.3718  4.0%  1282   16.6321  8.55 SELECT tdmetl.gvs_zgvs_bseg_edw</span></span><br><span class="line"><span class="comment">#    5 0x0159EC63419857F0EC9D5B...  17472.3139  3.3%    71  246.0889  1.03 SELECT v_edw_data</span></span><br><span class="line"><span class="comment">#    6 0x2DD4B63FCE7C5DEEE14F92...  14743.4445  2.8%   159   92.7261  0.73 UPDATE SELECT d_tax_moth_data</span></span><br><span class="line"><span class="comment">#    7 0x9C084CB3E04D24D29E8BE9...   9081.9772  1.7%    85  106.8468 90.61 DELETE tdmetl.gvs_zgvs_bseg_edw</span></span><br><span class="line"><span class="comment">#    8 0xF879E6613E39CC61E92478...   7834.1462  1.5%   307   25.5184 62... SELECT v_gvs_zgvs_bseg_edw</span></span><br><span class="line"><span class="comment">#    9 0x2B3FA3F89D3D4498CC6FFD...   7490.2099  1.4%    35  214.0060  2.56 INSERT SELECT gvs_zgvs_bseg_edw_hz tdmetl.gvs_zgvs_bseg_edw</span></span><br><span class="line"><span class="comment">#   10 0x6DBDA9B50953D60A486825...   6925.0820  1.3%    71   97.5364 25... INSERT SELECT d_tax_moth_data v_d_tax_profit_data</span></span><br></pre></td></tr></table></figure>

<p><strong>第三部分：每一种查询的详细统计结果</strong></p>
<ul>
<li><strong>ID</strong>：查询的 <code>ID</code> 号，和上图的 <code>Query ID</code> 对应</li>
<li><strong>Databases</strong>：数据库名</li>
<li><strong>Hosts</strong>：各个 <code>Host</code> 执行的次数占比</li>
<li><strong>Users</strong>：查询用户</li>
<li><strong>Query_time distribution</strong> ：查询时间分布，长短体现区间占比</li>
<li><strong>Tables</strong>：查询中涉及到的表</li>
<li><strong>Explain</strong>：<code>SQL</code> 语句</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Query 1: 0.00 QPS, 0.05x concurrency, ID 0xFFF66E9B3D962FA319C8068B5C1997CD at byte 3105049</span></span><br><span class="line"><span class="comment"># This item is included in the report because it matches --limit.</span></span><br><span class="line"><span class="comment"># Scores: V/M = 25.32</span></span><br><span class="line"><span class="comment"># Time range: 2019-02-15T18:37:47 to 2019-04-03T21:18:48</span></span><br><span class="line"><span class="comment"># Attribute    pct   total     min     max     avg     95%  stddev  median</span></span><br><span class="line"><span class="comment"># ============ === ======= ======= ======= ======= ======= ======= =======</span></span><br><span class="line"><span class="comment"># Count          3     260</span></span><br><span class="line"><span class="comment"># Exec time     39 211420s    322s   1078s    813s   1013s    143s    793s</span></span><br><span class="line"><span class="comment"># Lock time      0       0       0       0       0       0       0       0</span></span><br><span class="line"><span class="comment"># Rows sent      0       0       0       0       0       0       0       0</span></span><br><span class="line"><span class="comment"># Rows examine   0       0       0       0       0       0       0       0</span></span><br><span class="line"><span class="comment"># Query size     0   2.03k       8       8       8       8       0       8</span></span><br><span class="line"><span class="comment"># String:</span></span><br><span class="line"><span class="comment"># Databases    tdmetl</span></span><br><span class="line"><span class="comment"># Hosts        10.138.225.51 (140/53%), 10.138.225.43 (69/26%)... 3 more</span></span><br><span class="line"><span class="comment"># Users        tdmsetldev</span></span><br><span class="line"><span class="comment"># Query_time distribution</span></span><br><span class="line"><span class="comment">#   1us</span></span><br><span class="line"><span class="comment">#  10us</span></span><br><span class="line"><span class="comment"># 100us</span></span><br><span class="line"><span class="comment">#   1ms</span></span><br><span class="line"><span class="comment">#  10ms</span></span><br><span class="line"><span class="comment"># 100ms</span></span><br><span class="line"><span class="comment">#    1s</span></span><br><span class="line"><span class="comment">#  10s+  ################################################################</span></span><br><span class="line">rollback\G</span><br></pre></td></tr></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 分析全量慢查询日志</span></span><br><span class="line">$ pt-query-digest slow.log &gt; slow_report.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分析最近12个小时内的查询</span></span><br><span class="line">$ pt-query-digest --since=<span class="number">12</span>h  slow.log &gt; slow_report.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分析最近1个月内的查询</span></span><br><span class="line">$ pt-query-digest slow.log --since <span class="string">'2019-06-08 10:00:00'</span> --until <span class="string">'2019-07-08 10:00:00'</span> &gt; slow_report.log</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 在线修改表结构工具 pt-online-schema-change</title>
    <url>/blog/2019/10/19/pt-online-schema-change/</url>
    <content><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>支持不锁表在线修改表结构</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>以 <code>test.employees</code> 为例：</p>
<ul>
<li>创建新表，<code>test.employees_new</code> 表结构与 <code>test.employees</code> 一致</li>
<li><code>test.employees_new</code> 执行 SQL</li>
<li><code>test.employees</code> 添加触发器 (<code>DELETE/UPDATE/INSERT</code>)</li>
<li>批量从 <code>test.employees</code> 拷贝数据到 <code>test.employees_new</code>，拷贝过程中通过触发器自动更新</li>
<li>修改表名，<code>test.employees</code> 修改为 <code>test.employees_old</code>，<code>test.employees_new</code> 修改为 <code>test.employees</code></li>
<li>删除 <code>test.employees_old</code> 和触发器</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>参数说明</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">--host=xxx </span><br><span class="line">--user=xxx </span><br><span class="line">--password=xxx     <span class="comment"># 连接实例信息</span></span><br><span class="line">--user=            <span class="comment"># 连接mysql的用户名</span></span><br><span class="line">--password=        <span class="comment"># 连接mysql的密码</span></span><br><span class="line">--host=            <span class="comment"># 连接mysql的地址</span></span><br><span class="line">P=<span class="number">3306</span>             <span class="comment"># 连接mysql的端口号</span></span><br><span class="line">D=                 <span class="comment"># 连接mysql的库名</span></span><br><span class="line">t=                 <span class="comment"># 连接mysql的表名</span></span><br><span class="line">--alter            <span class="comment"># 修改表结构的语句</span></span><br><span class="line">--dry-run          <span class="comment"># 创建和修改新表</span></span><br><span class="line">--print            <span class="comment"># 打印信息</span></span><br><span class="line">--execute          <span class="comment"># 执行修改表结构 ，--dry-run与--execute必须指定一个，二者相互排斥</span></span><br><span class="line">--charset=utf8     <span class="comment"># 使用utf8编码，避免中文乱码</span></span><br><span class="line">--no-version-check <span class="comment"># 不检查版本，在阿里云服务器中一般加入此参数，否则会报错</span></span><br></pre></td></tr></table></figure>

<p><strong>添加索引</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pt-online-schema-change --user=root --password=<span class="string">'xx'</span> --socket=/<span class="keyword">data</span>/mysql-tdds/mysql.sock --alter <span class="string">"ADD INDEX idx_address(address)"</span> D=test,t=employees --print --execute</span><br></pre></td></tr></table></figure>

<p><strong>删除索引</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pt-online-schema-change --user=root --password=<span class="string">'xx'</span> --socket=/<span class="keyword">data</span>/mysql-tdds/mysql.sock --alter <span class="string">"DROP INDEX idx_address"</span> D=test,t=employees --print --execute</span><br><span class="line"></span><br><span class="line">Operation, tries, wait:</span><br><span class="line">  analyze_table, <span class="number">10</span>, <span class="number">1</span></span><br><span class="line">  copy_rows, <span class="number">10</span>, <span class="number">0.25</span></span><br><span class="line">  create_triggers, <span class="number">10</span>, <span class="number">1</span></span><br><span class="line">  drop_triggers, <span class="number">10</span>, <span class="number">1</span></span><br><span class="line">  swap_tables, <span class="number">10</span>, <span class="number">1</span></span><br><span class="line">  update_foreign_keys, <span class="number">10</span>, <span class="number">1</span></span><br><span class="line">Altering `test`.`employees`...</span><br><span class="line">Creating new table...</span><br><span class="line">CREATE TABLE `test`.`_employees_new` (</span><br><span class="line">  `id` bigint(<span class="number">20</span>) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` char(<span class="number">20</span>) NOT NULL DEFAULT <span class="string">''</span>,</span><br><span class="line">  `address` varchar(<span class="number">50</span>) DEFAULT NULL,</span><br><span class="line">  `age` tinyint(<span class="number">3</span>) unsigned NOT NULL DEFAULT <span class="string">'0'</span>,</span><br><span class="line">  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_address` (`address`)</span><br><span class="line">) /*!<span class="number">50100</span> TABLESPACE `innodb_file_per_table` */ ENGINE=InnoDB AUTO_INCREMENT=<span class="number">6</span> DEFAULT CHARSET=utf8</span><br><span class="line">Created new table test._employees_new OK.</span><br><span class="line">Altering new table...</span><br><span class="line">ALTER TABLE `test`.`_employees_new` DROP INDEX idx_address</span><br><span class="line">Altered `test`.`_employees_new` OK.</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Creating triggers...</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Created triggers OK.</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Copying approximately <span class="number">5</span> rows...</span><br><span class="line">INSERT LOW_PRIORITY IGNORE INTO `test`.`_employees_new` (`id`, `name`, `address`, `age`, `gmt_create`, `gmt_modified`) SELECT `id`, `name`, `address`, `age`, `gmt_create`, `gmt_modified` FROM `test`.`employees` LOCK <span class="keyword">IN</span> SHARE MODE /*pt-online-schema-change <span class="number">112205</span> copy table*/</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Copied rows OK.</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Analyzing new table...</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Swapping tables...</span><br><span class="line">RENAME TABLE `test`.`employees` TO `test`.`_employees_old`, `test`.`_employees_new` TO `test`.`employees`</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Swapped original and new tables OK.</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Dropping old table...</span><br><span class="line">DROP TABLE <span class="keyword">IF</span> EXISTS `test`.`_employees_old`</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Dropped old table `test`.`_employees_old` OK.</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Dropping triggers...</span><br><span class="line">DROP TRIGGER <span class="keyword">IF</span> EXISTS `test`.`pt_osc_test_employees_del`</span><br><span class="line">DROP TRIGGER <span class="keyword">IF</span> EXISTS `test`.`pt_osc_test_employees_upd`</span><br><span class="line">DROP TRIGGER <span class="keyword">IF</span> EXISTS `test`.`pt_osc_test_employees_ins`</span><br><span class="line"><span class="number">2019</span>-<span class="number">10</span>-<span class="number">22</span>T15:<span class="number">59</span>:<span class="number">32</span> Dropped triggers OK.</span><br><span class="line">Successfully altered `test`.`employees`.</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 归档工具 pt-archiver</title>
    <url>/blog/2019/10/19/pt-archiver/</url>
    <content><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>将 MySQL 数据库中表的记录归档到另外一个表或者文件</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-19-103800.png" alt="pt"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把数据归档至归档表</span></span><br><span class="line">pt-archiver --source h=<span class="number">10.138</span>.<span class="number">228.231</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'xxx'</span>,D=matomo,t=matomo_log_link_visit_action --charset=utf8 --dest h=<span class="number">10.138</span>.<span class="number">228.231</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'xxx'</span>,D=matomo,t=matomo_log_link_visit_action_history --where <span class="string">"server_time &lt; '2019-01-01'"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check</span><br><span class="line"></span><br><span class="line"><span class="comment"># h=10.138.228.231               -- 数据库实例地址</span></span><br><span class="line"><span class="comment"># P=3306                         -- 数据库实例端口</span></span><br><span class="line"><span class="comment"># u=sre                          -- 数据库实例用户</span></span><br><span class="line"><span class="comment"># p=xxx                          -- 数据库实例用户密码</span></span><br><span class="line"><span class="comment"># D=matomo                       -- 数据库实例数据库</span></span><br><span class="line"><span class="comment"># t=matomo_log_link_visit_action -- 数据库实例表名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --source                       -- 指定要被归档的数据源</span></span><br><span class="line"><span class="comment"># --charset=utf8                 -- 使用的字符集，需与表字符集一致</span></span><br><span class="line"><span class="comment"># --file                         -- 指定目标操作系统文件名</span></span><br><span class="line"><span class="comment"># --dest                         -- 指定归档到的目标表</span></span><br><span class="line"><span class="comment"># --where "id &gt; 3008"            -- 指定 where 过滤条件，过滤出要归档的数据</span></span><br><span class="line"><span class="comment"># --limit 1000                   -- 每条语句读取和归档的数据行数，默认是 1</span></span><br><span class="line"><span class="comment"># --commit-each                  -- 每次获取和归档数据后，commit提交</span></span><br><span class="line"><span class="comment"># --no-version-check             -- 不做版本检查</span></span><br><span class="line"><span class="comment"># --bulk-insert                  -- 批量插入数据</span></span><br><span class="line"><span class="comment"># --statistics                   -- 显示 pt-archiver 本次操作的统计信息。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每5000条删除1次，每隔2000行输出一次数据</span></span><br><span class="line">pt-archiver --source D=ibilling_pay_hupu,t=purchase_order --user=root --password=<span class="string">'root'</span> -S /tmp/mysql.sock --where <span class="string">"create_datetime &lt;= '2015-06-20 00:00:00'"</span> --purge --limit=<span class="number">5000</span> --progress <span class="number">2000</span> --why-quit --no-check-charset &gt; /opt/<span class="number">1</span>.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于把数据导出文件，不用删除原表中数据</span></span><br><span class="line">pt-archiver --source h=<span class="number">127.0</span>.<span class="number">0.1</span>,P=<span class="number">58886</span>,D=test,t=t_info_refresh --no-check-charset  --where <span class="string">'id &gt; 1'</span> --progress <span class="number">4000</span> --no-delete --file <span class="string">"/tmp/pt-archiver.sql"</span> --limit=<span class="number">10000</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit · 信息收集工具 pt-summary</title>
    <url>/blog/2019/10/18/pt-summary/</url>
    <content><![CDATA[<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pt-summary</span><br><span class="line"><span class="comment"># Percona Toolkit System Summary Report ######################</span></span><br><span class="line">        Date | <span class="number">2019</span>-<span class="number">10</span>-<span class="number">18</span> <span class="number">09</span>:<span class="number">41</span>:<span class="number">24</span> UTC (local TZ: CST +<span class="number">0800</span>)</span><br><span class="line">    Hostname | hrmk-Dubbo4</span><br><span class="line">      Uptime | <span class="number">182</span> days, <span class="number">20</span>:<span class="number">56</span>,  <span class="number">1</span> user,  load average: <span class="number">0.66</span>, <span class="number">0.69</span>, <span class="number">0.69</span></span><br><span class="line">      System | Dell Inc.; PowerEdge R730; vNot Specified (Rack Mount Chassis)</span><br><span class="line"> Service Tag | <span class="number">5</span>K6GBD2</span><br><span class="line">    Platform | Linux</span><br><span class="line">     Release | CentOS release <span class="number">6.10</span> (Final)</span><br><span class="line">      Kernel | <span class="number">2.6</span>.<span class="number">32</span>-<span class="number">431</span>.el6.x86_64</span><br><span class="line">Architecture | CPU = <span class="number">64</span>-bit, OS = <span class="number">64</span>-bit</span><br><span class="line">   Threading | NPTL <span class="number">2.12</span></span><br><span class="line">     SELinux | Enforcing</span><br><span class="line"> Virtualized | No virtualization detected</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Processor ##################################################</span></span><br><span class="line">  Processors | physical = <span class="number">2</span>, cores = <span class="number">12</span>, virtual = <span class="number">24</span>, hyperthreading = yes</span><br><span class="line">      Speeds | <span class="number">24</span>x2400.<span class="number">128</span></span><br><span class="line">      Models | <span class="number">24</span>xIntel(R) Xeon(R) CPU E5-<span class="number">2620</span> v3 @ <span class="number">2.40</span>GHz</span><br><span class="line">      Caches | <span class="number">24</span>x15360 KB</span><br><span class="line">      </span><br><span class="line"><span class="comment"># Memory #####################################################</span></span><br><span class="line">       Total | <span class="number">15.6</span>G</span><br><span class="line">        Free | <span class="number">217.5</span>M</span><br><span class="line">        Used | physical = <span class="number">15.4</span>G, swap allocated = <span class="number">7.8</span>G, swap used = <span class="number">96.0</span>k, virtual = <span class="number">15.4</span>G</span><br><span class="line">      Shared | <span class="number">1.2</span>M</span><br><span class="line">     Buffers | <span class="number">221.9</span>M</span><br><span class="line">      Caches | <span class="number">2.2</span>G</span><br><span class="line">       Dirty | <span class="number">344</span> kB</span><br><span class="line">     UsedRSS | <span class="number">12.4</span>G</span><br><span class="line">  Swappiness | <span class="number">60</span></span><br><span class="line"> DirtyPolicy | <span class="number">20</span>, <span class="number">10</span></span><br><span class="line"> DirtyStatus | <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Network Devices ############################################</span></span><br><span class="line">  Device    Speed     Duplex</span><br><span class="line">  ========= ========= =========</span><br><span class="line">  em2        <span class="number">1000</span>Mb/s   Full      </span><br><span class="line">  em3        Unknown!   Unknown!  </span><br><span class="line">  em4        <span class="number">1000</span>Mb/s   Full      </span><br><span class="line">  bond0      <span class="number">1000</span>Mb/s   Full      </span><br><span class="line">  virbr0-nic <span class="number">10</span>Mb/s     Full      </span><br><span class="line">  virbr0                          </span><br><span class="line">  em1        <span class="number">1000</span>Mb/s   Full</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>Percona Toolkit 系列</title>
    <url>/blog/2019/10/18/percona-toolkit/</url>
    <content><![CDATA[<h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p><a href="https://huiraoo.github.io/blog/2019/07/05/mysql-toolkit/">Percona Toolkit  · 简介安装</a> </p>
<h2 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── pt-align</span><br><span class="line">├── pt-archiver</span><br><span class="line">├── pt-config-diff</span><br><span class="line">├── pt-deadlock-logger</span><br><span class="line">├── pt-diskstats</span><br><span class="line">├── pt-duplicate-key-checker</span><br><span class="line">├── pt-fifo-split</span><br><span class="line">├── pt-find</span><br><span class="line">├── pt-fingerprint</span><br><span class="line">├── pt-fk-error-logger</span><br><span class="line">├── pt-heartbeat</span><br><span class="line">├── pt-index-usage</span><br><span class="line">├── pt-ioprofile</span><br><span class="line">├── pt-kill</span><br><span class="line">├── pt-mext</span><br><span class="line">├── pt-mongodb-query-digest</span><br><span class="line">├── pt-mongodb-summary</span><br><span class="line">├── pt-mysql-summary</span><br><span class="line">├── pt-online-schema-change</span><br><span class="line">├── pt-pmp</span><br><span class="line">├── pt-query-digest</span><br><span class="line">├── pt-secure-collect</span><br><span class="line">├── pt-show-grants</span><br><span class="line">├── pt-sift</span><br><span class="line">├── pt-slave-delay</span><br><span class="line">├── pt-slave-find</span><br><span class="line">├── pt-slave-restart</span><br><span class="line">├── pt-stalk</span><br><span class="line">├── pt-summary</span><br><span class="line">├── pt-table-checksum</span><br><span class="line">├── pt-table-sync</span><br><span class="line">├── pt-table-usage</span><br><span class="line">├── pt-upgrade</span><br><span class="line">├── pt-variable-advisor</span><br><span class="line">└── pt-visual-explain</span><br></pre></td></tr></table></figure>

<h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><ul>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-align/">Percona Toolkit · 格式化输出工具 pt-align</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-archiver/">Percona Toolkit · 归档工具 pt-archiver</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/18/pt-summary/">Percona Toolkit · 信息收集工具 pt-summary</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-config-diff/">Percona Toolkit · 配置对比工具 pt-config-diff</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-deadlock-logger/">Percona Toolkit · 死锁监控工具 pt-deadlock-logger</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-diskstats/">Percona Toolkit · 磁盘分析工具 pt-diskstats</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-duplicate-key-checker/">Percona Toolkit · 冗余索引检测工具 pt-duplicate-key-checker</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-index-usage/">Percona Toolkit · 索引分析工具 pt-index-usage</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-online-schema-change/">Percona Toolkit · 在线修改表结构工具 pt-online-schema-change</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-query-digest/">Percona Toolkit · 慢日志分析工具 pt-query-digest</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-show-grants/">Percona Toolkit · 用户权限显示工具 pt-show-grants</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-slave-restart/">Percona Toolkit · Slave 异常修复工具 pt-slave-restart</a></li>
</ul>
]]></content>
      <categories>
        <category>Percona Toolkit</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 配置阿里 Yum 源</title>
    <url>/blog/2019/10/18/update-yum/</url>
    <content><![CDATA[<p><strong>备份当前 Yum 源</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>

<p><strong>下载阿里 Yum 源</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CentOS 6</span></span><br><span class="line">$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-<span class="number">6</span>.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS 7</span></span><br><span class="line">$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-<span class="number">7</span>.repo</span><br></pre></td></tr></table></figure>

<p><strong>清理</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum clean all</span><br></pre></td></tr></table></figure>

<p><strong>更新缓存</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum makecache</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>Markdown 编写规范</title>
    <url>/blog/2019/10/18/markdown-standards/</url>
    <content><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>团队统一遵循约定的 <strong>Markdown 编写规范</strong>，目的是提高文档的可读性，降低团队成员之间的沟通成本。</p>
<h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><ul>
<li>后缀必须使用 <code>.md</code></li>
<li>文件名必须使用小写，多个单词之间使用 <code>-</code> 分隔</li>
<li>文件编码必须用 <code>UTF-8</code></li>
<li>章节标题必须以 <code>##</code> 开始，而不是 <code>#</code></li>
<li>章节标题和内容间必须有一个空行</li>
</ul>
<h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><ul>
<li>中文与英文、数字及 <code>@ # $ % ^ &amp; * . ( )</code> 等符号之间需要加空格</li>
<li>数字与单位之间需要加空格</li>
<li>链接前后需要加空格</li>
<li>中文标点与前后字符之间不需要加空格</li>
<li><code>° ／ %</code> 与数字之间不需要增加空格</li>
</ul>
<h3 id="中文符号"><a href="#中文符号" class="headerlink" title="中文符号"></a>中文符号</h3><ul>
<li>如果括号内有中文，则使用中文括号</li>
<li>如果括号中的内容全部都是英文，则使用半角英文括号</li>
<li>简体中文使用直角引号（「」）代替双引号（“”）</li>
<li>省略号使用「……」，而「。。。」仅用于表示停顿</li>
<li>专有名词使用正确的大小写，如 <code>GitHub</code></li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 数据归档</title>
    <url>/blog/2019/10/17/mysql-archiver/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>大表 <code>base_barcode_info</code> 数据量 <code>5000w+</code>，遇到很大的性能瓶颈，需要将表中的历史数据进行归档。</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><ol>
<li><p>安装 <a href="https://huiraoo.github.io/blog/2019/07/05/mysql-toolkit/"><strong>Percona Toolkit</strong></a></p>
</li>
<li><p>创建归档表 <code>base_barcode_info_history_20190801</code></p>
</li>
<li><p>使用 <a href="https://tool.lu/crontab/" target="_blank" rel="noopener"><strong>crontab</strong></a> 执行定时任务，<code>archiver.sh</code> 脚本</p>
</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 后台执行任务</span></span><br><span class="line">nohup sh archiver.sh &gt; myout.file <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># archiver.sh</span></span><br><span class="line">pt-archiver --source h=<span class="number">10.138</span>.<span class="number">232.85</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'xx'</span>,D=<span class="string">'csomo-barcode'</span>,t=base_barcode_info --charset=utf8 --dest  h=<span class="number">10.138</span>.<span class="number">232.85</span>,P=<span class="number">3306</span>,u=sre,p=<span class="string">'xx'</span>,D=<span class="string">'csomo-barcode'</span>,t=base_barcode_info_history_20190801 --where <span class="string">"barcode_request_id IN (SELECT id FROM base_barcode_request WHERE TYPE = '5' AND est &lt; '2019-08-01 00:00:00')"</span> --limit <span class="number">1000</span> --commit-each --bulk-insert --no-version-check</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看归档进度</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; use information_schema;</span><br><span class="line">mysql&gt; select table_name,table_rows from tables where TABLE_SCHEMA = 'csomo-barcode' and table_name='base_barcode_info_history_20190801';</span><br><span class="line">mysql&gt; select table_name,table_rows from tables where TABLE_SCHEMA = 'csomo-barcode' and table_name='base_barcode_info';</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>归档 <code>46598706</code> 花费约 <code>16</code> 小时</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fri Sep 13 08:19:34 CST 2019</span></span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| table_name                         | table_rows |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| base_barcode_info_history_20190801 |     <span class="number">0</span>      |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fri Sep 13 12:29:07 CST 2019</span></span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| table_name                         | table_rows |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| base_barcode_info_history_20190801 |   <span class="number">13462385</span> |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fri Sep 13 17:29:47 CST 2019</span></span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| table_name                         | table_rows |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| base_barcode_info_history_20190801 |   <span class="number">26300649</span> |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fri Sep 13 22:21:25 CST 2019</span></span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| table_name                         | table_rows |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| base_barcode_info_history_20190801 |   <span class="number">36529410</span> |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># ?</span></span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| table_name                         | table_rows |</span><br><span class="line">+------------------------------------+------------+</span><br><span class="line">| base_barcode_info_history_20190801 |   <span class="number">46598706</span> |</span><br><span class="line">+------------------------------------+------------+</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>创客专项提升课</title>
    <url>/blog/2019/10/13/training/</url>
    <content><![CDATA[<h2 id="课程一：沟通影响技术"><a href="#课程一：沟通影响技术" class="headerlink" title="课程一：沟通影响技术"></a>课程一：沟通影响技术</h2><p><strong>背景</strong>：在日常工作中，难免碰到冲突、误解、矛盾，你是否遇到以下沟通问题的误区：</p>
<ul>
<li>权利至上论：谁权力大、谁就说的算，不行就让领导出面吧。</li>
<li>利益至上论：大家各有各的利益，说了也没用，多说反而有害。</li>
<li>道理为王论：流程规定该由谁负责就是谁负责。</li>
</ul>
<p>为帮助走出沟通误区，提升合作效率，巩固合作关系，看清对方“被影响”的本质，掌握“影响”他人的原则和方法，成为优秀的影响者，有能力驾驭“挑战的”沟通。</p>
<p><strong>时间</strong>：2019年9月5日  09:00~17:00</p>
<p><strong>地点</strong>：海尔大学 B201</p>
<p><strong>老师</strong>：王辰阳</p>
<p><strong>学习收获</strong>：</p>
<p>① 自我介绍时，是拉近人与人距离最重要时机，期望达到的目标是“<strong>让人不讨厌</strong>”，王老师在介绍自己的时候，我觉得达到了这种目的，值得参考，他写了三个关键字：</p>
<ul>
<li>北（工）大，<code>5年</code></li>
<li>西门子，<code>10年</code></li>
<li>竞越，<code>15年</code></li>
</ul>
<p>用<strong>幽默、戏谑</strong>的语气介绍自己，并着重说明这 3 个关键词之间的关系，简明扼要地完成自我介绍。</p>
<p>② 咨询别人意见态度时，将第一人称改为第三人称</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">示例：你爱我吗？你觉得我怎么样？</span><br><span class="line">修改为：你觉得赵薇怎么样？你觉得他有什么优缺点？</span><br></pre></td></tr></table></figure>

<h2 id="课程二：业务面试官培训"><a href="#课程二：业务面试官培训" class="headerlink" title="课程二：业务面试官培训"></a><strong>课程二</strong>：业务面试官培训</h2><p><strong>培训时间</strong>：2019年8月20日 14:00-17:00</p>
<p><strong>地点</strong>：创牌一楼会议室 A09</p>
<p><strong>培训内容</strong>：</p>
<ul>
<li><strong>招聘面试基本含义</strong>：测评及面试的基本概念和历史，面试的基本态度及仪表要求，面试中常见的误差，面试对于企业的公关价值及意义。</li>
<li><strong>面谈的操作方法及技巧</strong>：BEI（行为事件访谈）需要注意的事项，如何识别虚假的 BEI（谎言识别）及事件访谈技巧。BEI 行为事件面试法最核心的概念即 “人过去表现出来的行为方式是人未来行为最可靠的预测指标”，从招聘“<strong>最优秀的人</strong>”转变落地为招聘“<strong>最适合的人</strong>”。</li>
<li><strong>面试的方法和技巧</strong>：不同情景下的常见面试方法概览（校园招聘&amp; 社会招聘 &amp; 内部竞聘 ），结构化面试的概念及六种问题类型，如何追问和识别虚假回答。</li>
<li><strong>基于岗位胜任力模型的面试评价</strong>：胜任特征的概念及由来，岗位胜任力模型与人才甄选的关系，面试选拔的依据和标准，常见的维度及行为观测点。</li>
<li><strong>如何阅读简历并进行有效提问</strong>：从简历中寻找与面试相关的几类信息，依靠简历面试的步骤，标准化面试招聘流程建议，面试的评分要点及技巧重申。</li>
</ul>
<p><strong>学习收获</strong>：</p>
<p>① 你最近读什么书？是一个好问题的切入点，通过书展开了解知识广度和深度。</p>
<p>② 在确认某件事情的真实性时，可以提问 “请举一个例子？”</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 测试数据集</title>
    <url>/blog/2019/10/13/mysql-dataset/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://dev.mysql.com/doc/employee/en/employees-introduction.html" target="_blank" rel="noopener">介绍</a> | <a href="https://github.com/datacharmer/test_db" target="_blank" rel="noopener">数据集</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>下载</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ wget https://github.com/datacharmer/test_db.git</span><br><span class="line">$ cd test_db</span><br></pre></td></tr></table></figure>

<p><strong>存储</strong>：编辑 <code>employees.sql</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">   set storage_engine = InnoDB;</span><br><span class="line">-- set storage_engine = MyISAM;</span><br><span class="line">-- set storage_engine = Falcon;</span><br><span class="line">-- set storage_engine = PBXT;</span><br><span class="line">-- set storage_engine = Maria;</span><br></pre></td></tr></table></figure>

<p><strong>导入</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysql -t -u<span class="string">'xx'</span> -p<span class="string">'xx'</span> &lt; employees.sql</span><br><span class="line">+-----------------------------+</span><br><span class="line">| INFO                        |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| CREATING DATABASE STRUCTURE |</span><br><span class="line">+-----------------------------+</span><br><span class="line">+------------------------+</span><br><span class="line">| INFO                   |</span><br><span class="line">+------------------------+</span><br><span class="line">| storage engine: InnoDB |</span><br><span class="line">+------------------------+</span><br><span class="line">+---------------------+</span><br><span class="line">| INFO                |</span><br><span class="line">+---------------------+</span><br><span class="line">| LOADING departments |</span><br><span class="line">+---------------------+</span><br><span class="line">+-------------------+</span><br><span class="line">| INFO              |</span><br><span class="line">+-------------------+</span><br><span class="line">| LOADING employees |</span><br><span class="line">+-------------------+</span><br><span class="line">+------------------+</span><br><span class="line">| INFO             |</span><br><span class="line">+------------------+</span><br><span class="line">| LOADING dept_emp |</span><br><span class="line">+------------------+</span><br><span class="line">+----------------------+</span><br><span class="line">| INFO                 |</span><br><span class="line">+----------------------+</span><br><span class="line">| LOADING dept_manager |</span><br><span class="line">+----------------------+</span><br><span class="line">+----------------+</span><br><span class="line">| INFO           |</span><br><span class="line">+----------------+</span><br><span class="line">| LOADING titles |</span><br><span class="line">+----------------+</span><br><span class="line">+------------------+</span><br><span class="line">| INFO             |</span><br><span class="line">+------------------+</span><br><span class="line">| LOADING salaries |</span><br><span class="line">+------------------+</span><br></pre></td></tr></table></figure>

<p><strong>数据结构</strong></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-13-182810.png" alt></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云 · RDS</title>
    <url>/blog/2019/10/10/aliyun-rds/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>介绍</strong>：阿里云 <code>RDS</code>（Relational Database Service）是一种<strong>稳定可靠</strong>、<strong>可弹性伸缩</strong>的在线数据库服务。</p>
<p><strong>功能</strong>：提供<strong>容灾</strong>、<strong>备份</strong>、<strong>恢复</strong>、<strong>监控</strong>、<strong>报警</strong>、<strong>高可用</strong>、<strong>迁移</strong>等全套解决方案，彻底解决数据库运维的烦恼。</p>
<p><strong>数据库</strong>：支持 <code>MySQL</code>、<code>SQL Server</code>、<code>PostgreSQL</code>、 <code>MariaDB</code> 等引擎。</p>
<p><strong>优势</strong>：便宜易用（按需变配，灵活计费）、高性能（最佳实践，CloudDBA）、灾备设计（自动备份，异地容灾）、高安全性（防 <code>DDoS</code> 攻击，链路加密，访问控制，安全审计）。</p>
<table>
<thead>
<tr>
<th align="left">对比项</th>
<th align="left">云数据库 RDS</th>
<th align="left">本地 IDC 自建</th>
</tr>
</thead>
<tbody><tr>
<td align="left">服务可用性</td>
<td align="left">高可用架构</td>
<td align="left">需自行搭建主备复制，保障高可用</td>
</tr>
<tr>
<td align="left">数据可靠性</td>
<td align="left">自动主备复制、数据备份、日志备份</td>
<td align="left">需自行热备、冷备</td>
</tr>
<tr>
<td align="left">系统安全性</td>
<td align="left">防 <code>DDoS</code> 攻击，及时修复各种数据库安全漏洞</td>
<td align="left">自行修复数据库安全漏洞</td>
</tr>
<tr>
<td align="left">数据库备份</td>
<td align="left">自动备份</td>
<td align="left">自行实现，需要寻找备份存储以及定期演练</td>
</tr>
<tr>
<td align="left">软硬件投入</td>
<td align="left">无软硬件投入，按需付费</td>
<td align="left">服务器成本相对较高</td>
</tr>
<tr>
<td align="left">系统托管</td>
<td align="left">无托管费用</td>
<td align="left">服务器有托管费用</td>
</tr>
<tr>
<td align="left">维护成本</td>
<td align="left">无需专职运维</td>
<td align="left">需要 DBA 专职运维</td>
</tr>
<tr>
<td align="left">部署扩容</td>
<td align="left">即时开通，弹性扩容</td>
<td align="left">需要硬件采购、安装部署等工作，周期较长</td>
</tr>
<tr>
<td align="left">资源利用率</td>
<td align="left">按实际结算，100% 利用率</td>
<td align="left">业务有高峰期和低峰期，资源利用率低</td>
</tr>
</tbody></table>
<p><strong>基本概念</strong>：</p>
<ul>
<li><strong>实例</strong>：一个独立占用物理内存的数据库服务进程，用户可以设置不同的内存大小、磁盘空间和数据库类型。</li>
<li><strong>数据库</strong>：在一个实例下创建的逻辑单元，一个实例可以创建多个数据库，数据库在实例内的命名唯一。</li>
<li><strong>地域</strong>：是指物理的数据中心。</li>
<li><strong>可用区</strong>：是指在同一地域内，电力和网络互相独立的物理区域。</li>
<li><strong>连接数</strong>：实例当前总连接数，包括活跃连接数和总连接数。</li>
<li><strong>IOPS</strong>：实例的每秒 <code>I/O</code> 请求次数，单位：次/秒，衡量随机访问的性能。</li>
</ul>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p><strong>选型</strong>（owner：架构师）-&gt;  申请（owner：项目经理）-&gt;  交付（owner：云管理）-&gt;  <strong>运维</strong>（owner：DBA）</p>
<h2 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h2><h3 id="产品系列"><a href="#产品系列" class="headerlink" title="产品系列"></a>产品系列</h3><table>
<thead>
<tr>
<th align="left">系列</th>
<th align="left">说明</th>
<th align="left">适用场景</th>
</tr>
</thead>
<tbody><tr>
<td align="left">基础版</td>
<td align="left">单节点实例，可实现超高的性价比，请参见<a href="https://help.aliyun.com/document_detail/48980.html#concept-nyq-cvw-5db" target="_blank" rel="noopener">基础版</a></td>
<td align="left">个人学习 / 开发测试</td>
</tr>
<tr>
<td align="left">高可用版</td>
<td align="left">一主一备高可用架构，适合 <code>80%</code> 以上用户场景</td>
<td align="left">大中型企业生产数据库</td>
</tr>
<tr>
<td align="left">三节点企业版</td>
<td align="left">一主两备三节点架构，提供金融级可靠性，请参见<a href="https://help.aliyun.com/document_detail/51701.html#concept-yqy-zvw-5db" target="_blank" rel="noopener">三节点企业版</a></td>
<td align="left">大型企业核心数据库</td>
</tr>
</tbody></table>
<p><strong>功能对比</strong></p>
<table>
<thead>
<tr>
<th align="left">功能</th>
<th align="left">基础版</th>
<th align="left">高可用版（推荐）</th>
<th align="left">三节点企业版（原金融版）</th>
</tr>
</thead>
<tbody><tr>
<td align="left"></td>
<td align="left">MySQL 5.7 / 8.0</td>
<td align="left">MySQL 5.5 / 5.6 / 5.7 / 8.0</td>
<td align="left">MySQL 5.6 / 5.7</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/102074.html#concept-sp4-jgl-jgb" target="_blank" rel="noopener">监控与报警</a></td>
<td align="left">支持</td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/43185.html#concept-pdr-k2f-vdb" target="_blank" rel="noopener">IP白名单</a></td>
<td align="left">支持</td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/98818.html#concept-l1m-xgn-ydb" target="_blank" rel="noopener">备份与恢复</a></td>
<td align="left">支持</td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96063.html#concept-lfl-xmn-wdb" target="_blank" rel="noopener">参数设置</a></td>
<td align="left">支持</td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96122.html#concept-ujc-hz4-ydb" target="_blank" rel="noopener">日志管理</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96054.html#task-ftz-42j-wdb" target="_blank" rel="noopener">主备库切换</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96120.html#concept-ack-rv4-ydb" target="_blank" rel="noopener">SSL</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96121.html#task-jrp-dw4-ydb" target="_blank" rel="noopener">透明数据加密</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96124.html#concept-fqw-r5x-wdb" target="_blank" rel="noopener">性能优化</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96053.html#concept-zwp-gdj-wdb" target="_blank" rel="noopener">迁移可用区</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96073.html#concept-ptl-fl4-wdb" target="_blank" rel="noopener">读写分离</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/26136.html#concept-cst-z45-vdb" target="_blank" rel="noopener">只读实例</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left"><strong>支持（另计费）</strong></td>
<td align="left"><strong>支持（另计费）</strong></td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/96123.html#task-msp-gz1-mfb" target="_blank" rel="noopener">SQL洞察</a></td>
<td align="left"><strong>不支持</strong></td>
<td align="left"><strong>支持（另计费）</strong></td>
<td align="left"><strong>支持（免费使用）</strong></td>
</tr>
</tbody></table>
<h3 id="存储类型"><a href="#存储类型" class="headerlink" title="存储类型"></a>存储类型</h3><table>
<thead>
<tr>
<th align="left">存储类型</th>
<th align="left">说明</th>
<th align="left">支持系列</th>
</tr>
</thead>
<tbody><tr>
<td align="left">本地 <code>SSD</code> 盘</td>
<td align="left">与数据库引擎位于同一节点，<code>I/O</code> 延时低</td>
<td align="left">高可用版 / 三节点企业版</td>
</tr>
<tr>
<td align="left"><code>SSD</code> 云盘</td>
<td align="left">基于分布式存储架构的弹性块存储设备，实现计算与存储分离</td>
<td align="left">基础版</td>
</tr>
<tr>
<td align="left"><code>ESSD</code> 云盘</td>
<td align="left">增强型 <code>SSD</code> 云盘，是阿里云全新推出的超高性能云盘产品</td>
<td align="left">高可用版 / 三节点企业版</td>
</tr>
</tbody></table>
<p><strong>特性对比</strong></p>
<table>
<thead>
<tr>
<th align="left">对比项</th>
<th align="left">本地 SSD 盘（推荐）</th>
<th align="left">SSD 云盘</th>
<th align="left">ESSD 云盘</th>
</tr>
</thead>
<tbody><tr>
<td align="left">I/O 性能</td>
<td align="left">★★★★★</td>
<td align="left">★★★★</td>
<td align="left">★★★★★</td>
</tr>
<tr>
<td align="left">功能完备度</td>
<td align="left">★★★★★</td>
<td align="left">★★★</td>
<td align="left">★★★</td>
</tr>
<tr>
<td align="left">规格配置灵活性</td>
<td align="left">★★★</td>
<td align="left">★★★★★</td>
<td align="left">★★★★★</td>
</tr>
<tr>
<td align="left">弹性扩展能力</td>
<td align="left">★★★</td>
<td align="left">★★★★★</td>
<td align="left">★★★★★</td>
</tr>
</tbody></table>
<p><strong>功能对比</strong></p>
<table>
<thead>
<tr>
<th align="left">对比项</th>
<th align="left">本地 SSD 盘</th>
<th align="left">SSD 云盘 / ESSD 云盘</th>
</tr>
</thead>
<tbody><tr>
<td align="left">最大存储容量</td>
<td align="left">6 TB</td>
<td align="left">6 TB</td>
</tr>
<tr>
<td align="left">网络类型</td>
<td align="left">经典网络和 <code>VPC</code></td>
<td align="left">经典网络和 <code>VPC</code></td>
</tr>
<tr>
<td align="left">弹性升降级</td>
<td align="left">支持，时间为小时级别，取决于数据量大小</td>
<td align="left">支持，一般只需要 <code>10</code> 分钟</td>
</tr>
<tr>
<td align="left">迁移可用区</td>
<td align="left">支持</td>
<td align="left">开发中</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/26136.html#concept-cst-z45-vdb" target="_blank" rel="noopener">只读实例</a></td>
<td align="left">支持</td>
<td align="left">部分引擎支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/51073.html#concept-ptl-fl4-wdb" target="_blank" rel="noopener">读写分离</a></td>
<td align="left">支持</td>
<td align="left">部分引擎支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/26197.html#concept-njf-cr4-ydb" target="_blank" rel="noopener">SQL审计</a></td>
<td align="left">支持</td>
<td align="left">开发中</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/59980.html#concept-wpx-tqn-wdb" target="_blank" rel="noopener">CloudDBA</a></td>
<td align="left">支持</td>
<td align="left">部分引擎支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/32474.html#concept-ack-rv4-ydb" target="_blank" rel="noopener">SSL加密</a> 和 <a href="https://help.aliyun.com/document_detail/33510.html#concept-jrp-dw4-ydb" target="_blank" rel="noopener">TDE</a></td>
<td align="left">支持</td>
<td align="left">部分引擎支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/26206.html#concept-l1m-xgn-ydb" target="_blank" rel="noopener">备份方式</a></td>
<td align="left">物理 &amp; 逻辑备份</td>
<td align="left">快照备份</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/44088.html#concept-vrh-qp4-ydb" target="_blank" rel="noopener">按备份集恢复</a></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/44088.html#concept-vrh-qp4-ydb" target="_blank" rel="noopener">按时间点恢复</a></td>
<td align="left">支持</td>
<td align="left">支持</td>
</tr>
</tbody></table>
<h3 id="实例规格"><a href="#实例规格" class="headerlink" title="实例规格"></a>实例规格</h3><p>通用型 vs 独享型</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-11-163310.png" alt></p>
<table>
<thead>
<tr>
<th align="left">规格族</th>
<th align="left">规格代码</th>
<th align="left">CPU / 内存</th>
<th align="left">存储空间</th>
<th align="left">最大连接数</th>
<th align="left">IOPS</th>
<th align="left">包月价</th>
</tr>
</thead>
<tbody><tr>
<td align="left">通用型</td>
<td align="left">rds.mysql.c1.xlarge</td>
<td align="left">8 核 32GB</td>
<td align="left">500GB</td>
<td align="left">8000</td>
<td align="left">12000</td>
<td align="left">￥1480.00</td>
</tr>
<tr>
<td align="left"><strong>独享型（推荐）</strong></td>
<td align="left">mysql.x4.xlarge.2</td>
<td align="left">8 核 32GB</td>
<td align="left">500GB</td>
<td align="left">5000</td>
<td align="left">9000</td>
<td align="left">￥1800.00</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="left">规格代码</th>
<th align="left">CPU核数</th>
<th align="left">内存（GB）</th>
<th align="left">连接数</th>
<th align="left">IOPS</th>
<th align="left">TPS</th>
<th align="left">QPS</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.x8.medium.2</td>
<td align="left">2</td>
<td align="left">16</td>
<td align="left">2500</td>
<td align="left">4500</td>
<td align="left">391</td>
<td align="left">7054</td>
</tr>
<tr>
<td align="left">mysql.x8.large.2</td>
<td align="left">4</td>
<td align="left">32</td>
<td align="left">5000</td>
<td align="left">9000</td>
<td align="left">794</td>
<td align="left">14297</td>
</tr>
<tr>
<td align="left">mysql.x8.xlarge.2</td>
<td align="left">8</td>
<td align="left">64</td>
<td align="left">10000</td>
<td align="left">18000</td>
<td align="left">1541</td>
<td align="left">27751</td>
</tr>
<tr>
<td align="left">mysql.x8.2xlarge.2</td>
<td align="left">16</td>
<td align="left">128</td>
<td align="left">20000</td>
<td align="left">36000</td>
<td align="left">2672</td>
<td align="left">48102</td>
</tr>
<tr>
<td align="left">rds.mysql.st.d13</td>
<td align="left">30</td>
<td align="left">220</td>
<td align="left">64000</td>
<td align="left">20000</td>
<td align="left">3693</td>
<td align="left">65508</td>
</tr>
</tbody></table>
<h3 id="网络类型"><a href="#网络类型" class="headerlink" title="网络类型"></a>网络类型</h3><ul>
<li><strong>经典网络</strong>：实例之间不通过网络进行隔离，只能依靠实例自身的白名单策略来阻挡非法访问。</li>
<li><strong>专有网络</strong>： <code>VPC</code> 是一种隔离的网络环境，安全性和性能均高于传统的经典网络，<strong>推荐使用专有网络</strong>。</li>
</ul>
<h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><table>
<thead>
<tr>
<th>选项</th>
<th>配置</th>
</tr>
</thead>
<tbody><tr>
<td>地域</td>
<td>华北 1（青岛）</td>
</tr>
<tr>
<td>数据库版本</td>
<td>MySQL 5.7</td>
</tr>
<tr>
<td>系列</td>
<td>高可用版</td>
</tr>
<tr>
<td>存储类型</td>
<td>本地 SSD 盘</td>
</tr>
<tr>
<td>可用区</td>
<td>可用区 C / 可用区 B</td>
</tr>
<tr>
<td>网络类型</td>
<td>专有网络</td>
</tr>
<tr>
<td>规格</td>
<td>8 核 32G（独享套餐）</td>
</tr>
<tr>
<td>存储空间</td>
<td>500GB</td>
</tr>
</tbody></table>
<h2 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h2><h3 id="开通服务"><a href="#开通服务" class="headerlink" title="开通服务"></a>开通服务</h3><p><strong>登录</strong>：<a href="https://signin.aliyun.com/login.htm" target="_blank" rel="noopener">入口</a></p>
<p><strong>RAM账号</strong>：raohui@1596633715004367.onaliyun.com</p>
<h3 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-11-092550.png" alt></p>
<p><strong>创建实例</strong>：云管理团队提供</p>
<p><strong>设置白名单</strong>：将通用白名单模式切换为高安全白名单模式，拥有更高的安全性</p>
<table>
<thead>
<tr>
<th>网络类型</th>
<th>白名单</th>
</tr>
</thead>
<tbody><tr>
<td>专有网络</td>
<td>10.138.0.0/16,10.153.0.0/16,10.163.0.0/16,10.133.0.0/16,10.190.0.0/16</td>
</tr>
</tbody></table>
<p><strong>创建数据库</strong>：推荐库名与应用名称尽量一致，由小写字母、数字、下划线或中划线组成，默认字符集 <code>utf8</code></p>
<p><strong>创建账号</strong></p>
<table>
<thead>
<tr>
<th>账号类型</th>
<th>说明</th>
<th>权限</th>
</tr>
</thead>
<tbody><tr>
<td>高权限账号</td>
<td>拥有实例下所有数据库的所有权限，一个实例中只能创建一个</td>
<td><a href="https://help.aliyun.com/document_detail/96089.html?spm=a2c4g.11186623.6.674.41cb2f36ofYQv8#section-qgv-4q5-tfb" target="_blank" rel="noopener">列表</a></td>
</tr>
<tr>
<td>普通账号</td>
<td>四种类型权限：<strong>只读</strong> / <strong>读写</strong> / 仅DDL / 仅DML</td>
<td><a href="https://help.aliyun.com/document_detail/96089.html?spm=a2c4g.11186623.6.674.41cb2f36ofYQv8#section-qgv-4q5-tfb" target="_blank" rel="noopener">列表</a></td>
</tr>
</tbody></table>
<p><strong>密码</strong>：由大写字母、小写字母、数字、特殊字符中的任意三种组成，特殊字符为 <code>!@#$%^&amp;*()_+-=</code></p>
<h3 id="监控告警"><a href="#监控告警" class="headerlink" title="监控告警"></a>监控告警</h3><p><strong>监控</strong></p>
<table>
<thead>
<tr>
<th align="left">实例类型</th>
<th align="left">5秒/次</th>
<th align="left">60秒/次</th>
<th align="left">300秒/次</th>
</tr>
</thead>
<tbody><tr>
<td align="left">基础版</td>
<td align="left">不支持</td>
<td align="left">免费支持</td>
<td align="left"><strong>默认配置</strong></td>
</tr>
<tr>
<td align="left">高可用版、三节点企业版：内存 &lt; 8G</td>
<td align="left">不支持</td>
<td align="left">免费支持</td>
<td align="left"><strong>默认配置</strong></td>
</tr>
<tr>
<td align="left">高可用版、三节点企业版：内存 &gt;= 8G</td>
<td align="left">付费支持</td>
<td align="left"><strong>默认配置</strong></td>
<td align="left">免费支持</td>
</tr>
</tbody></table>
<p><strong>告警</strong>：<a href="https://huiraoo.github.io/blog/2019/10/09/mysql-hdm/">统一告警</a>，需要自行<a href="https://help.aliyun.com/document_detail/96113.html?spm=a2c4g.11186623.2.26.5a2849eat7zURd#concept-ir2-twp-wdb" target="_blank" rel="noopener">设置报警规则</a></p>
<h3 id="备份恢复"><a href="#备份恢复" class="headerlink" title="备份恢复"></a>备份恢复</h3><table>
<thead>
<tr>
<th>备份方式</th>
<th>默认</th>
<th>存储</th>
<th>恢复</th>
<th>计费</th>
</tr>
</thead>
<tbody><tr>
<td>默认备份</td>
<td>开启</td>
<td>实例所在地域</td>
<td><a href="https://help.aliyun.com/document_detail/96147.html?spm=a2c4g.11186623.2.18.1f4148ceRRiyUY#concept-vrh-qp4-ydb" target="_blank" rel="noopener">当前地域的新实例或原实例</a></td>
<td>免费额度 = 50% * 存储空间</td>
</tr>
<tr>
<td>跨地域备份</td>
<td>关闭</td>
<td>另一个地域</td>
<td>源地域或目的地域的新实例</td>
<td>存储 0.001元/GB/小时 + <a href="https://help.aliyun.com/document_detail/70005.html?spm=a2c4g.11186623.2.19.1f4148ceRRiyUY#h2-rds-3" target="_blank" rel="noopener">流量费</a></td>
</tr>
</tbody></table>
<p>默认备份</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-12-093300.png" alt></p>
<h3 id="异地容灾"><a href="#异地容灾" class="headerlink" title="异地容灾"></a>异地容灾</h3><p><strong>场景</strong>：对于数据可靠性有强需求的业务场景或是有监管需求的金融业务场景。</p>
<ul>
<li><a href="https://help.aliyun.com/document_detail/26137.html?spm=a2c4g.11186623.2.11.438719bbr36Auk#concept-bpb-gw5-vdb" target="_blank" rel="noopener">灾备实例</a>：通过<a href="https://help.aliyun.com/document_detail/26592.html" target="_blank" rel="noopener">数据传输服务</a>（<code>DTS</code>）实现主实例和异地灾备实例之间的实时同步，灾备实例与主实例配置完全相同，当主实例所在区域发生突发性自然灾害等状况，主节点（<code>Master</code>）和备节点（<code>Slave</code>）均无法连接时，可将异地灾备实例切换为主实例，在应用端修改数据库链接地址后，即可快速恢复应用的业务访问，<strong>计费：灾备实例 + DTS</strong>。</li>
<li><a href="https://help.aliyun.com/document_detail/120824.html?spm=a2c4g.11186623.2.12.438719bbxQlAAm#concept-405443" target="_blank" rel="noopener">跨地域备份</a>：自动将本地备份文件复制到另一个地域的 <code>OSS</code> 上，文件可保留 <code>7~1825</code> 天，即最多保留 <code>5</code> 年，<strong>计费：存储（0.001元/GB/小时） + <a href="https://help.aliyun.com/document_detail/70005.html?spm=a2c4g.11186623.2.19.1f4148ceRRiyUY#h2-rds-3" target="_blank" rel="noopener">流量费</a>。</strong></li>
</ul>
<h3 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h3><p>购买时建议选择<strong>高可用版</strong>，或更高的<strong>三节点企业版</strong>，高可用版实例有一个备实例，三节点企业版实例有两个备实例，主备实例的数据会实时同步，业务只能访问主实例，备实例仅作为备份形式存在，不提供业务访问。</p>
<ul>
<li><strong>自动切换</strong>：实例默认为自动切换，当主实例出现故障无法访问时，会实现秒级自动切换到备实例。</li>
<li><strong>手动切换</strong>：即使自动切换是开启状态，也可以手动进行主备切换。</li>
</ul>
<p>单可用区</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-12-094143.png" alt></p>
<p>多可用区</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-12-094215.png" alt></p>
<h3 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h3><p><strong>场景</strong>：在对数据库有少量写请求，但有大量读请求的应用场景下，单个实例可能无法承受读取压力，甚至对业务产生影响，为了分担数据库压力，创建<a href="https://help.aliyun.com/document_detail/26136.html?spm=a2c4g.11186623.6.599.179411b2DWRQex" target="_blank" rel="noopener">只读实例</a>，满足大量的数据库读取需求，增加应用的吞吐量。</p>
<p><strong>原理</strong>：创建只读实例时会从备实例复制数据，数据与主实例一致，主实例的数据更新也会在主实例完成操作后立即自动同步到所有只读实例，也可以在只读实例上设置<a href="https://help.aliyun.com/document_detail/96056.html#task-dk2-kjq-p2b" target="_blank" rel="noopener">只读实例延时复制</a>。</p>
<p>只读实例 vs 主备实例 vs 灾备实例</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-12-101600.png" alt></p>
<h3 id="数据安全"><a href="#数据安全" class="headerlink" title="数据安全"></a>数据安全</h3><p>提供了多样化的安全加固功能来保障用户数据的安全，其中包括但不限于：</p>
<p>① <strong>网络</strong>：<code>IP</code> 白名单、<code>VPC</code> 网络、<code>SSL</code>（安全套接层协议）</p>
<p>② <strong>存储</strong>：<code>TDE</code>（透明数据加密）、自动备份</p>
<p>③ <strong>容灾</strong>：同城容灾（多可用区实例）、异地容灾（两地多中心)</p>
<p><strong>白名单</strong>：可以让实例得到高级别的访问安全保护，建议定期维护。</p>
<ul>
<li>默认的 <code>IP</code> 白名单只包含默认地址 <code>127.0.0.1</code>，表示任何设备均无法访问该 <code>RDS</code> 实例</li>
<li><code>0.0.0.0/0</code> 表示允许任何设备访问 <code>RDS</code> 实例，请谨慎使用</li>
<li>高安全白名单模式下，经典网络白名单分组适用于公网访问，如果有公网设备要访问 <code>RDS</code> 实例，请将公网设备 <code>IP</code> 地址添加到经典网络白名单分组</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-12-103244.png" alt></p>
<p><strong>SSL加密</strong>：<code>SSL</code> 在传输层对网络连接进行加密，能提升通信链路数据的安全性和完整性，但会同时增加网络连接响应时间，开通 <code>SSL</code> 加密后，应用或者客户端连接 <code>RDS</code> 时需要配置 <code>SSL CA</code> 证书。</p>
<p><strong>透明数据加密 TDE</strong>：TDE（Transparent Data Encryption）可对数据文件执行实时 <code>I/O</code> 加密和解密，数据在写入磁盘之前进行加密，从磁盘读入内存时进行解密。<code>TDE</code> 不会增加数据文件的大小，开发人员无需更改任何应用程序，即可使用 <code>TDE</code> 功能。</p>
<p><strong>云盘加密</strong>：阿里云免费提供云盘加密功能，基于块存储对整个数据盘进行加密，即使数据备份泄露也无法解密，最大限度保护数据安全，而且加密不会影响业务，应用程序也无需修改。</p>
<h3 id="诊断优化"><a href="#诊断优化" class="headerlink" title="诊断优化"></a>诊断优化</h3><p><strong>日志管理</strong>：错误日志、慢日志、主备切换日志，帮助故障定位分析</p>
<ul>
<li><p><strong>错误日志</strong>：记录 <code>1</code> 个月内数据库运行出错的日志。</p>
</li>
<li><p><strong>慢日志</strong>：对 <code>1</code> 个月内数据库中执行时间超过 <code>1</code> 秒（可以在<a href="https://help.aliyun.com/document_detail/96063.html#concept-lfl-xmn-wdb" target="_blank" rel="noopener">参数设置</a> 中修改 <code>long_query_time</code> 来设置）的 <code>SQL</code> 语句进行统计汇总，控制台每分钟更新一次，实时的慢日志明细可以查看 <code>mysql.slow_log</code> 表。</p>
</li>
<li><p><strong>主备切换日志</strong>：该功能适用于高可用版、三节点企业版。</p>
</li>
</ul>
<p><strong>优化分析</strong>：CloudDBA（<a href="https://help.aliyun.com/document_detail/128450.html?spm=a2c4g.11186623.6.738.2c523e41D3xODK" target="_blank" rel="noopener">慢SQL</a>、<a href="https://help.aliyun.com/document_detail/128449.html?spm=a2c4g.11186623.6.737.277517b6vOn3F3" target="_blank" rel="noopener">实时会话</a>、<a href="https://help.aliyun.com/document_detail/128456.html?spm=a2c4g.11186623.6.744.684d491fBOr7tL" target="_blank" rel="noopener">SQL优化</a>、<a href="https://help.aliyun.com/document_detail/128452.html?spm=a2c4g.11186623.6.740.34ca35a6nvMLEO" target="_blank" rel="noopener">空间分析</a>、<a href="https://help.aliyun.com/document_detail/128455.html?spm=a2c4g.11186623.6.743.222b650aIRkmEW" target="_blank" rel="noopener">死锁</a>、<a href="https://help.aliyun.com/document_detail/128453.html?spm=a2c4g.11186623.6.741.2ff835a6XmFXQu" target="_blank" rel="noopener">诊断报告</a>）</p>
]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云 · 数据库网关</title>
    <url>/blog/2019/10/10/aliyun-dbgateway/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>数据库网关</strong>（Database Gateway，<code>DG</code>）无需本地开通公网端口，将本地数据库与云服务连接起来，且可以与阿里云产品（如：数据传输服务 <code>DTS</code>，数据库备份 <code>DBS</code>，数据管理 <code>DMS</code>，混合数据库管理 <code>HDM</code> 等）集成使用，提供安全、可靠、低成本的私网数据库接入能力。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>通过数据库网关，可以使用应用程序或云服务访问并管理本地 <code>IDC</code> 数据库和其他云厂商数据库。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-10-161400.png" alt></p>
<p><strong>工作原理</strong>：</p>
<p>① 本地安装一个<strong>数据库网关代理</strong>（database gateway agent）</p>
<p>② 网关代理负责与<strong>数据库网关云端服务</strong>（database gateway cloud service）建立安全的、可信任的通道，不同账号、不同网关所建立的通道彼此隔离</p>
<p>③ 通道建立后，当在云端使用数据库产品（如 <code>HDM</code>、<code>DBS</code>）需要访问该网络内的本地数据库时，数据库产品会通过已建立好的通道，访问至本地网络</p>
<h2 id="DBGateway"><a href="#DBGateway" class="headerlink" title="DBGateway"></a>DBGateway</h2><p>是 <code>HDM</code> 的一个组件，部署在用户环境中的 <code>Daemon</code> 程序，它负责进行数据库性能数据的采集、计算，不读取用户业务数据，并且通过加密压缩的方式进行通信。</p>
<p><strong>目录结构</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── bin</span><br><span class="line">│   ├── dbgateway</span><br><span class="line">│   └── dbgateway-manager</span><br><span class="line">├── conf</span><br><span class="line">│   ├── dbgateway.conf</span><br><span class="line">│   └── server.crt</span><br><span class="line">└── log</span><br><span class="line">    ├── dbgateway.err</span><br><span class="line">    ├── dbgateway.log</span><br><span class="line">    └── dbgateway_manager.log</span><br></pre></td></tr></table></figure>

<p><strong>常用命令</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重启 </span></span><br><span class="line">/opt/dbgateway/bin/dbgateway-manager -d restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 </span></span><br><span class="line">/opt/dbgateway/bin/dbgateway-manager -d start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止 </span></span><br><span class="line">/opt/dbgateway/bin/dbgateway-manager -d stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">rm -rf /opt/dbgateway</span><br></pre></td></tr></table></figure>

<h2 id="API参考"><a href="#API参考" class="headerlink" title="API参考"></a>API参考</h2><table>
<thead>
<tr>
<th align="left">API</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123415.html#concept-861901" target="_blank" rel="noopener">CreateGateway</a></td>
<td align="left">创建网关</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123570.html#concept-878728" target="_blank" rel="noopener">ModifyGateway</a></td>
<td align="left">修改网关</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123572.html#concept-878734" target="_blank" rel="noopener">DeleteGateway</a></td>
<td align="left">删除网关</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123575.html#concept-878745" target="_blank" rel="noopener">StopGateway</a></td>
<td align="left">停止网关</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123579.html#concept-878753" target="_blank" rel="noopener">CreateGatewayVerifyCode</a></td>
<td align="left">生成线下安装网关时需要的验证码</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123581.html#concept-878756" target="_blank" rel="noopener">DownloadGatewayProgram</a></td>
<td align="left">返回网关程序的下载地址</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123590.html#concept-878811" target="_blank" rel="noopener">ConnectDatabase</a></td>
<td align="left">通过网关连接数据库</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123703.html#concept-895452" target="_blank" rel="noopener">GetUserDatabases</a></td>
<td align="left">返回用户数据库列表信息</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123602.html#concept-878845" target="_blank" rel="noopener">AddDatabase</a></td>
<td align="left">添加数据库</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123604.html#concept-878851" target="_blank" rel="noopener">ModifyDatabase</a></td>
<td align="left">修改数据库</td>
</tr>
<tr>
<td align="left"><a href="https://help.aliyun.com/document_detail/123600.html#concept-878841" target="_blank" rel="noopener">DeleteDatabase</a></td>
<td align="left">删除数据库</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云 · HDM</title>
    <url>/blog/2019/10/09/aliyun-hdm/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>混合云数据库管理 （Hybrid Cloud Database Management， 简称 <a href="https://www.aliyun.com/product/hdm" target="_blank" rel="noopener"><strong>HDM</strong></a>) ，帮助企业打通混合云数据库架构，提供<strong>多环境</strong>、<strong>多数据库</strong>的统一<strong>监控</strong>、<strong>报警</strong>、<strong>运维</strong>、<strong>管理</strong>的能力，<a href="https://help.aliyun.com/product/63907.html?spm=a2c4g.750001.list.48.4cc17b13Z8O4eh" target="_blank" rel="noopener">帮助文档</a>。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-09-162000.png" alt></p>
<p><strong>核心功能</strong>：集群管理、统一监控、统一告警、<code>Dashboard</code>、故障诊断、性能优化、安全审计、诊断报告等</p>
<p><strong>目前支持数据库</strong>：<code>MySQL</code>、<code>Redis</code>、<code>MongoDB</code>、<code>PostgreSQL</code> </p>
<p><strong>支持环境</strong>：</p>
<table>
<thead>
<tr>
<th align="left">环境</th>
<th align="center">统一接入</th>
<th align="right">统一监控</th>
<th align="right">统一告警</th>
<th align="right">集群管理</th>
</tr>
</thead>
<tbody><tr>
<td align="left">阿里云 <code>RDS</code></td>
<td align="center">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
</tr>
<tr>
<td align="left">阿里云 <code>ECS</code> 自建数据库</td>
<td align="center">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
</tr>
<tr>
<td align="left">本地 <code>IDC</code> 自建数据库</td>
<td align="center">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
</tr>
<tr>
<td align="left">其他云数据库</td>
<td align="center">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
<td align="right">支持</td>
</tr>
</tbody></table>
<p><strong>目标用户</strong>：DBA</p>
<p><strong>登录地址</strong>：<a href="https://signin.aliyun.com/login.htm" target="_blank" rel="noopener">入口</a></p>
<p><strong>RAM账号</strong>：sre@1596633715004367.onaliyun.com</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><h3 id="开通服务"><a href="#开通服务" class="headerlink" title="开通服务"></a>开通服务</h3><p><a href="https://help.aliyun.com/knowledge_detail/66674.html?spm=a2c4g.11186623.2.12.7ac677adzLmyV7" target="_blank" rel="noopener">手册</a></p>
<h3 id="实例接入"><a href="#实例接入" class="headerlink" title="实例接入"></a>实例接入</h3><p><strong>接入方式</strong>：<a href="https://help.aliyun.com/document_detail/65405.html?spm=a2c4g.11186623.6.552.58c5b105ScOBwq" target="_blank" rel="noopener">阿里云 RDS</a>、<a href="https://help.aliyun.com/document_detail/65407.html?spm=a2c4g.11186623.6.553.6aa210edll0oBP" target="_blank" rel="noopener">阿里云 ECS 自建数据库</a>、<a href="https://help.aliyun.com/document_detail/65406.html?spm=a2c4g.11186623.6.554.29e19c69mPchPY" target="_blank" rel="noopener">本地 IDC 自建数据库</a>、<a href="https://help.aliyun.com/document_detail/99480.html?spm=a2c4g.11186623.6.555.51a5cf58DNb8ol" target="_blank" rel="noopener">账号直连</a></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-09-172707.png" alt></p>
<p><strong>功能对比</strong>：</p>
<table>
<thead>
<tr>
<th align="left">功能</th>
<th align="right">直连接入</th>
<th align="center">集中模式接入</th>
<th align="center">主机模式接入（推荐）</th>
</tr>
</thead>
<tbody><tr>
<td align="left">数据库监控指标</td>
<td align="right">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">实时性能</td>
<td align="right">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">实时会话</td>
<td align="right">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">空间分析</td>
<td align="right">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">SQL诊断</td>
<td align="right">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">慢请求分析</td>
<td align="right">支持</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">主机监控指标</td>
<td align="right"><em>不支持</em></td>
<td align="center"><em>不支持</em></td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">请求诊断</td>
<td align="right"><em>不支持</em></td>
<td align="center"><em>不支持</em></td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">全量请求分析</td>
<td align="right"><em>不支持</em></td>
<td align="center"><em>不支持</em></td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">请求响应时间</td>
<td align="right"><em>不支持</em></td>
<td align="center"><em>不支持</em></td>
<td align="center">支持</td>
</tr>
<tr>
<td align="left">安全审计</td>
<td align="right"><em>不支持</em></td>
<td align="center"><em>不支持</em></td>
<td align="center">支持</td>
</tr>
</tbody></table>
<p><strong>接入步骤</strong>：</p>
<blockquote>
<p>第一步：选择网络类型</p>
</blockquote>
<ul>
<li>如果是有公网的自建数据库，请选择“公网（经典网络）”。</li>
<li>如果是通过专线／<code>VPN</code> 方式连接阿里云 <code>VPC</code> 的本地 <code>IDC</code> 或者其他云，请选择“专有网络”。</li>
</ul>
<blockquote>
<p>第二步：部署网关</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">sudo wget -O install-dbgateway http://hdm-dbgateway-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/DBGateway/install-dbgateway &amp;&amp; sudo /bin/bash install-dbgateway --id idc_iQn5Df7QC5docekj --token <span class="number">70</span>EE4B0C444E215700BEFD8B14DB026EF6A958FBE42DACDEE304FC91880A933D --endpoint master-hdm-cn-hangzhou.aliyuncs.com --region default --native</span><br></pre></td></tr></table></figure>

<blockquote>
<p>第三步：授权验证</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'hdm'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="keyword">PASSWORD</span> <span class="string">'Hdm@123!'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>, PROCESS, <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>, <span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'hdm'</span>@<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> *.*  <span class="keyword">TO</span> <span class="string">'hdm'</span>@<span class="string">'%'</span>;</span><br></pre></td></tr></table></figure>

<p><strong>三种网络连接方式</strong>：</p>
<p><strong>专线</strong></p>
<ul>
<li>专线是指阿里云接入点和本地数据中心之间的网络线路的抽象。</li>
<li>您需要通过一条租用的运营商专线将本地 <code>IDC</code> 连接到阿里云接入点，建立专线连接。</li>
<li>物理专线的私网连接不通过公网，因此与传统的公网相比，专线连接更加安全、可靠、速度更快、延迟更低。</li>
</ul>
<p><strong>VPN</strong></p>
<p><code>VPN</code> 网关是一款基于互联网通信技术，通过加密通道将企业数据中心和阿里云专有网络安全可靠地连接起来的服务。</p>
<p><strong>互联网</strong></p>
<p>本地 <code>IDC</code> 直接通过互联网和阿里云公有云互联，<code>HDM</code> 会对数据访问链路进行加密，用户无需担心安全问题。</p>
<h3 id="统一监控"><a href="#统一监控" class="headerlink" title="统一监控"></a>统一监控</h3><h4 id="MySQL-Server"><a href="#MySQL-Server" class="headerlink" title="MySQL Server"></a>MySQL Server</h4><p><strong>TPS/QPS</strong></p>
<p>QPS (Queries Per Second)，每秒 <code>SQL</code> 语句执行次数</p>
<p>TPS (Transactions Per Second)，每秒事务操作次数</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.tps</td>
<td align="left">Per Second</td>
<td align="left">计算公式：(Com_commit + Com_rollback) / Uptime</td>
</tr>
<tr>
<td align="left">mysql.qps</td>
<td align="left">Per Second</td>
<td align="left">计算公式：Questions / Uptime</td>
</tr>
</tbody></table>
<p><strong>会话连接</strong></p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.threads_created</td>
<td align="left">Count</td>
<td align="left">当前新创建的线程</td>
</tr>
<tr>
<td align="left">mysql.threads_cached</td>
<td align="left">Count</td>
<td align="left">当前 <code>cached</code> 线程</td>
</tr>
<tr>
<td align="left"><strong>mysql.threads_connected</strong></td>
<td align="left">Count</td>
<td align="left">当前全部线程数</td>
</tr>
<tr>
<td align="left">mysql.threads_rejected</td>
<td align="left">Count</td>
<td align="left">当前 <code>rejected</code> 线程</td>
</tr>
<tr>
<td align="left"><strong>mysql.threads_running</strong></td>
<td align="left">Count</td>
<td align="left">当前活跃线程数</td>
</tr>
</tbody></table>
<p><strong>执行次数</strong></p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.insert_ps</td>
<td align="left">Per Second</td>
<td align="left">平均每秒 <code>insert</code> 语句执行次数</td>
</tr>
<tr>
<td align="left">mysql.select_ps</td>
<td align="left">Per Second</td>
<td align="left">平均每秒 <code>select</code> 语句执行次数</td>
</tr>
<tr>
<td align="left">mysql.update_ps</td>
<td align="left">Per Second</td>
<td align="left">平均每秒 <code>update</code> 语句执行次数</td>
</tr>
<tr>
<td align="left">mysql.delete_ps</td>
<td align="left">Per Second</td>
<td align="left">平均每秒 <code>delete</code> 语句执行次数</td>
</tr>
<tr>
<td align="left">mysql.replace_ps</td>
<td align="left">Per Second</td>
<td align="left">平均每秒 <code>replace</code> 语句执行次数</td>
</tr>
</tbody></table>
<p><strong>流量吞吐</strong>（单位：<code>KB</code>）</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.bytes_received</td>
<td align="left">KByte</td>
<td align="left">平均每秒从所有客户端接收到的字节数</td>
</tr>
<tr>
<td align="left">mysql.bytes_sent</td>
<td align="left">KByte</td>
<td align="left">平均每秒发送给所有客户端的字节数</td>
</tr>
</tbody></table>
<h4 id="InnoDB-存储引擎"><a href="#InnoDB-存储引擎" class="headerlink" title="InnoDB 存储引擎"></a>InnoDB 存储引擎</h4><p><strong>InnoDB Buffer Pool 命中率</strong>（%）</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.innodb_bp_dirty_pct</td>
<td align="left">%</td>
<td align="left">脏页比率：Innodb_buffer_pool_pages_dirty / Innodb_buffer_pool_pages_data * 100%</td>
</tr>
<tr>
<td align="left">mysql.innodb_bp_hit</td>
<td align="left">%</td>
<td align="left">读缓存命中率：(Innodb_buffer_pool_read_requests - Innodb_buffer_pool_reads) / Innodb_buffer_pool_read_requests * 100%</td>
</tr>
<tr>
<td align="left"><strong>mysql.innodb_bp_usage_pct</strong></td>
<td align="left">%</td>
<td align="left">使用率：innodb_buffer_pool_pages_data / ( innodb_buffer_pool_pages_data + innodb_buffer_pool_pages_free ) * 100%</td>
</tr>
</tbody></table>
<p><strong>InnoDB Data 读写吞吐量</strong>（单位：<code>KB</code>）</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.innodb_data_written</td>
<td align="left">KByte</td>
<td align="left"><code>InnoDB</code> 平均每秒写字节数</td>
</tr>
<tr>
<td align="left">mysql.innodb_data_read</td>
<td align="left">KByte</td>
<td align="left"><code>InnoDB</code> 平均每秒读字节数</td>
</tr>
</tbody></table>
<p><strong>InnoDB Row Operations</strong></p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.innodb_rows_deleted</td>
<td align="left">Per Second</td>
<td align="left"><code>InnoDB</code> 平均每秒删除的行数</td>
</tr>
<tr>
<td align="left">mysql.innodb_rows_read</td>
<td align="left">Per Second</td>
<td align="left"><code>InnoDB</code> 平均每秒读取的行数</td>
</tr>
<tr>
<td align="left">mysql.innodb_rows_inserted</td>
<td align="left">Per Second</td>
<td align="left"><code>InnoDB</code> 平均每秒插入的行数</td>
</tr>
<tr>
<td align="left">mysql.innodb_rows_updated</td>
<td align="left">Per Second</td>
<td align="left"><code>InnoDB</code> 平均每秒更新的行数</td>
</tr>
</tbody></table>
<h4 id="MySQL-服务进程"><a href="#MySQL-服务进程" class="headerlink" title="MySQL 服务进程"></a>MySQL 服务进程</h4><p><strong>MySQL CPU 利用率</strong>（%）</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.cpu_usage</td>
<td align="left">%</td>
<td align="left">MySQL 服务进程 <code>CPU</code> 使用率（ <code>200%</code> 代表使用 2 个 <code>CPU Core</code>）</td>
</tr>
</tbody></table>
<p><strong>MySQL 内存使用量</strong>（单位：<code>GB</code>）</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.mem_used</td>
<td align="left">GByte</td>
<td align="left">MySQL 服务进程内存使用量</td>
</tr>
</tbody></table>
<p><strong>MySQL 存储空间使用量</strong>（单位：<code>GB</code>）</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">mysql.storage.data.used</td>
<td align="left">GByte</td>
<td align="left">数据文件目录的空间使用量</td>
</tr>
<tr>
<td align="left">mysql.storage.log.used</td>
<td align="left">GByte</td>
<td align="left">日志文件目录的空间使用量</td>
</tr>
</tbody></table>
<h4 id="主机"><a href="#主机" class="headerlink" title="主机"></a>主机</h4><p><strong>主机 Load 负载</strong></p>
<p>在 <code>UNIX</code> 系统中，系统负载是对当前 <code>CPU</code> 工作量的度量，被定义为特定时间间隔内运行队列中的平均线程数对于单个 <code>CPU</code>，有人认为如果 <code>Load</code> 超过 <code>0.7</code> 就算是超出正常范围了，这个值越低越好，负载过高会导致机器无法处理其他请求及操作，甚至导致宕机。</p>
<table>
<thead>
<tr>
<th align="left">指标</th>
<th align="left">单位</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">load1</td>
<td align="left">Count</td>
<td align="left">主机负载 <code>load1</code></td>
</tr>
</tbody></table>
<p><strong>主机 CPU 利用率</strong>（%）</p>
<table>
<thead>
<tr>
<th>指标</th>
<th>单位</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>host.cpu.user_usage</td>
<td>Count</td>
<td>系统 <code>CPU user</code> 利用率</td>
</tr>
<tr>
<td>host.cpu.si_usage</td>
<td>Count</td>
<td>系统 <code>CPU</code> 软中断利用率</td>
</tr>
<tr>
<td><strong>host.cpu.usage</strong></td>
<td>Count</td>
<td>系统 <code>CPU</code> 利用率</td>
</tr>
<tr>
<td>host.cpu.hi_usage</td>
<td>Count</td>
<td>系统 <code>CPU</code> 硬中断利用率</td>
</tr>
<tr>
<td>host.cpu.iowait_usage</td>
<td>Count</td>
<td>系统 <code>CPU iowait</code> 利用率</td>
</tr>
<tr>
<td>host.cpu.sys_usage</td>
<td>Count</td>
<td>系统 <code>CPU sys</code> 利用率</td>
</tr>
</tbody></table>
<p><strong>主机内存使用量</strong>（单位：<code>MB</code>）</p>
<table>
<thead>
<tr>
<th>指标</th>
<th>单位</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>mem.buffers</td>
<td>MByte</td>
<td>系统 <code>IO Buffer</code> 占用内存大小</td>
</tr>
<tr>
<td><strong>mem.used</strong></td>
<td>MByte</td>
<td>系统已用内存</td>
</tr>
<tr>
<td>mem.cached</td>
<td>MByte</td>
<td>系统 <code>Page Cache</code> 占用内存大小</td>
</tr>
<tr>
<td>gw.pidstat.mem_used</td>
<td>MByte</td>
<td><code>DBGateway</code> 内存使用量</td>
</tr>
<tr>
<td>mem.swap_used</td>
<td>MByte</td>
<td>系统 <code>swap</code> 使用大小</td>
</tr>
<tr>
<td><strong>mem.total</strong></td>
<td>MByte</td>
<td>系统总可用内存</td>
</tr>
</tbody></table>
<p><strong>主机网络吞吐</strong>（单位：<code>KB</code>）</p>
<table>
<thead>
<tr>
<th>指标</th>
<th>单位</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>net.recv</td>
<td>KByte</td>
<td>网卡每秒接收数据量</td>
</tr>
<tr>
<td>net.send</td>
<td>KByte</td>
<td>网卡每秒发送数据量</td>
</tr>
</tbody></table>
<h3 id="统一告警"><a href="#统一告警" class="headerlink" title="统一告警"></a>统一告警</h3><p><strong>告警功能</strong>：配置模版、触发规则、屏蔽告警、解除屏蔽、告警订阅等</p>
<p><strong>告警配置</strong>：告警模板  -&gt;  告警联系组  -&gt;  关联资源，告警模板默认配置 <code>8</code> 条告警，可自定义</p>
<table>
<thead>
<tr>
<th>告警项</th>
<th>告警规则</th>
<th>发送间隔</th>
<th>告警类型</th>
<th>告警对象</th>
<th>通知方式</th>
</tr>
</thead>
<tbody><tr>
<td>主机 <code>CPU</code> 使用率</td>
<td>连续 <code>3</code> 次 ≥  <code>90</code></td>
<td><code>30</code> 分钟</td>
<td>阈值告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
<tr>
<td>主机内存使用率</td>
<td>连续 <code>3</code> 次 ≥  <code>95</code></td>
<td><code>30</code> 分钟</td>
<td>阈值告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
<tr>
<td>主机网络发送带宽使用率</td>
<td>连续 <code>3</code> 次 ≥  <code>95</code></td>
<td><code>30</code> 分钟</td>
<td>阈值告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
<tr>
<td>主机网络接收带宽使用率</td>
<td>连续 <code>3</code> 次 ≥  <code>95</code></td>
<td><code>30</code> 分钟</td>
<td>阈值告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
<tr>
<td>数据库无法连接</td>
<td>连续 <code>3</code> 次</td>
<td><code>30</code> 分钟</td>
<td>事件告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
<tr>
<td><code>MySQL</code> 复制中断</td>
<td>连续 <code>3</code> 次</td>
<td><code>30</code> 分钟</td>
<td>事件告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
<tr>
<td><code>MySQL</code> 复制延迟</td>
<td>连续 <code>3</code> 次 ≥  <code>1800</code></td>
<td><code>30</code> 分钟</td>
<td>阈值告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
<tr>
<td><code>MySQL</code> 活跃会话数</td>
<td>连续 <code>3</code> 次 ≥  <code>100</code></td>
<td><code>30</code> 分钟</td>
<td>阈值告警</td>
<td>联系组</td>
<td>短信 / 邮件 / 钉钉</td>
</tr>
</tbody></table>
<h3 id="问题诊断"><a href="#问题诊断" class="headerlink" title="问题诊断"></a>问题诊断</h3><p><strong>实例会话</strong>：原理是执行 <code>show processlist</code>，查看活跃会话和全部会话，可快速诊断阻塞的 <code>SQL</code>，紧急情况下先结束会话，释放资源。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-10-112617.png" alt></p>
<p><strong>拓扑结构</strong></p>
<blockquote>
<p>注意：目前实例拓扑仅支持 <code>MySQL</code></p>
</blockquote>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-25-140100.png" alt></p>
<p><strong>性能快照</strong></p>
<p>与告警规则关联，通过自动触发方式产生性能快照，保存异常现场，方便 DBA 排查数据库异常。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">场景示例：</span><br><span class="line">MySQL数据库凌晨<span class="number">1</span>点发生了CPU <span class="number">90</span>%的告警，导致正常业务响应时间变长，但是等DBA登录数据库上进行排查，异常已经消失，从监控历史上只能看到CPU飙高、活跃会话增长，没有慢SQL。在这种缺少数据、缺少现场的情况下，没有办法确认根本原因，同样的问题可能会持续发生，影响业务可用性。</span><br></pre></td></tr></table></figure>

<h3 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h3><p><strong>慢 SQL</strong>：架构设计、SQL分析  [<a href="https://help.aliyun.com/document_detail/87374.html?spm=a2c4g.11186623.6.577.5e2f690dVvEL0F" target="_blank" rel="noopener">样本</a> | <a href="https://help.aliyun.com/document_detail/102635.html?spm=a2c4g.11186623.6.568.62631a4cLlP0XJ" target="_blank" rel="noopener">优化</a>]</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-10-111910.png" alt></p>
<p><strong>死锁</strong></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-10-10-145357.png" alt></p>
<p>可通过以下手段降低死锁发生的概率：</p>
<ul>
<li>如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会；</li>
<li>为表添加合理的索引，如果不走索引将会为表的每一行记录加锁，死锁的概率就会大大增大；</li>
<li>避免大事务，尽量将大事务拆成多个小事务来处理；大事务占用资源多，耗时长，与其他事务冲突的概率也会变高；</li>
<li>在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；</li>
<li>对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率。</li>
</ul>
<p><strong>空间分析</strong>：可以查看每张表的占用空间、索引空间、碎片率等，点击表名可以查看表结构和索引，异常条件：</p>
<ul>
<li>实例的空间使用率大于 <code>90%</code>。</li>
<li>实例的库表总空间（物理）剩余可用天数估计不足 <code>7</code> 天。</li>
<li>实例可回收空间大于 <code>60GB</code>，且碎片率大于 <code>5%</code>。</li>
<li>单表大于 <code>6G</code>，并且碎片率大于 <code>30%</code>。</li>
<li>单表大于 <code>50GB</code>。</li>
<li>单表行数大于 <code>500w</code>，且平均行长大于 <code>10KB</code>。</li>
</ul>
<h3 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h3><p><code>HDM</code> 的安全审计功能，采用旁路的技术，采集并分析对数据库服务器的各类操作行为，实时地、智能地解析对数据库服务器的各种操作，自动识别<strong>高危 SQL</strong>、<strong>SQL 注入</strong>、<strong>新增访问来源</strong>等风险。</p>
<p><strong>高危 SQL</strong></p>
<p>在 <code>HDM</code> 中，会根据预设的规则库，自动识别三种类型的高危 <code>SQL</code> ：</p>
<p>① <code>DDL</code>（新建表、修改表结构、修改索引、重命名表等操作)；</p>
<p>② 全表更新（例如全表 <code>Update</code> 、全表 <code>Delete</code> 等)；</p>
<p>③ 大请求，默认规则是满足下面三个条件中的任意一个：</p>
<ul>
<li>扫描行数 &gt;= <code>100w</code></li>
<li>返回行数 &gt;= <code>10w</code></li>
<li>更新行数 &gt;= <code>10w</code></li>
</ul>
<p><strong>SQL 注入</strong></p>
<p>所谓 <code>SQL</code> 注入，就是通过把 <code>SQL</code> 命令插入到 <code>Web</code> 表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 <code>SQL</code> 命令，严重危害数据库的健康。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'xx'</span> <span class="keyword">FROM</span> <span class="string">'xx'</span> <span class="keyword">WHERE</span> <span class="number">1</span> = <span class="number">1</span> <span class="keyword">AND</span> <span class="number">1</span> = <span class="number">1</span></span><br><span class="line">- <span class="keyword">Where</span> 子句中连续出现两个常量运算表达式</span><br><span class="line">- <span class="keyword">Where</span> 子句中有部分条件总为真</span><br></pre></td></tr></table></figure>

<p><strong>新增访问来源</strong></p>
<p>和历史的访问来源纪录进行对比，自动识别新增的访问来源，帮助用户确认是否存在未知的机器在访问或者读取数据库，默认规则是过去<strong>七天</strong>没有出现过的访问来源，即为新增访问来源。</p>
<h3 id="诊断报告"><a href="#诊断报告" class="headerlink" title="诊断报告"></a>诊断报告</h3><p><strong>功能</strong>：支持用户<strong>创建</strong>、<strong>查看</strong>、<strong>下载</strong>诊断报告</p>
<p><strong>要求</strong>：诊断时间必须小于 <code>24小时</code></p>
<p><strong>内容</strong>：实例信息、健康状况（<code>CPU</code> / 连接数 / 活跃会话 / <code>QPS</code> / <code>TPS</code>）、告警列表、活跃会话列表、Top5 慢 SQL、Top5 表空间、死锁分析、性能趋势（<code>CPU</code> / 网络 / 内存 / <code>QPS and TPS</code> / 会话 / 空间变化）</p>
<h3 id="容量评估"><a href="#容量评估" class="headerlink" title="容量评估"></a>容量评估</h3><blockquote>
<p>限制：目前仅支持 <code>MySQL RDS</code></p>
</blockquote>
<p><strong>功能</strong>：容量建议 | 容量评估（<code>CPU</code> / 内存 / <code>IOPS</code> / 活跃会话 / 存储空间）</p>
<h2 id="FA-amp-Q"><a href="#FA-amp-Q" class="headerlink" title="FA&amp;Q"></a>FA&amp;Q</h2><p>① 有些数据库服务器未连接外网，<code>dbgateway</code> 无法下载，实例如何接入？</p>
<p>通过搭建代理服务器 <a href="http://www.squid-cache.org/" target="_blank" rel="noopener"><strong>Squid</strong></a> 进行下载，原理如下图：</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-09-073606.jpg" alt="squid"></p>
<p><strong>搭建代理服务器</strong></p>
<blockquote>
<p>青岛代理服务器地址：<code>10.133.0.53:3128</code></p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装squid</span></span><br><span class="line">yum -y install squid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置自启动</span></span><br><span class="line">systemctl enable squid.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置squid</span></span><br><span class="line">vim /etc/squid/squid.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动squid</span></span><br><span class="line">systemctl start squid.service</span><br></pre></td></tr></table></figure>

<p><strong>使用代理接入HDM</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 增加代理</span></span><br><span class="line">echo  <span class="string">"</span></span><br><span class="line"><span class="string">http_proxy=10.133.0.53:3128</span></span><br><span class="line"><span class="string">https_proxy=10.133.0.53:3128</span></span><br><span class="line"><span class="string">ssl_proxy=10.133.0.53:3128</span></span><br><span class="line"><span class="string">tls_proxy=10.133.0.53:3128</span></span><br><span class="line"><span class="string">ftp_proxy=10.133.0.53:3128</span></span><br><span class="line"><span class="string">tcp_proxy=10.133.0.53:3128</span></span><br><span class="line"><span class="string">export http_proxy</span></span><br><span class="line"><span class="string">export https_proxy</span></span><br><span class="line"><span class="string">export ssl_proxy</span></span><br><span class="line"><span class="string">export ftp_proxy</span></span><br><span class="line"><span class="string">export tcp_proxy</span></span><br><span class="line"><span class="string">export tls_proxy"</span> &gt;&gt; /etc/profile ;  source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改wget代理配置文件</span></span><br><span class="line">echo <span class="string">"</span></span><br><span class="line"><span class="string">https_proxy=http://10.133.0.53:3128/</span></span><br><span class="line"><span class="string">http_proxy=http://10.133.0.53:3128/</span></span><br><span class="line"><span class="string">ftp_proxy=http://10.133.0.53:3128/"</span> &gt;&gt; /etc/wgetrc ;  source /etc/wgetrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载install-dbgateway</span></span><br><span class="line">sudo wget -O install-dbgateway http://hdm-dbgateway-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/DBGateway/install-dbgateway &amp;&amp; sudo /bin/bash install-dbgateway --id idc_zqSS2oMpeyKubndD --token <span class="number">3</span>E24C01713C83B7328F9A2F4C411078DC820E63FAFBC058F6635FAC5B0B4B7F2 --endpoint master-hdm-cn-hangzhou.aliyuncs.com --region default --native</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改install-dbgateway</span></span><br><span class="line">注释以下代码</span><br><span class="line">curl -v --connect-timeout <span class="number">3</span> --silent $&#123;endpoint&#125;:<span class="number">80</span> --output -</span><br><span class="line"><span class="keyword">if</span> [ $? != <span class="number">0</span> -a $? != <span class="number">52</span> ]; then</span><br><span class="line">       echo <span class="string">"Error! Can not connect to $&#123;endpoint&#125;:80, please check your network environment."</span></span><br><span class="line">       <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成</span></span><br><span class="line">sudo /bin/bash install-dbgateway --id idc_zqSS2oMpeyKubndD --token <span class="number">3</span>E24C01713C83B7328F9A2F4C411078DC820E63FAFBC058F6635FAC5B0B4B7F2 --endpoint master-hdm-cn-hangzhou.aliyuncs.com --region default --native</span><br><span class="line"></span><br><span class="line">-------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置代理</span></span><br><span class="line">echo  <span class="string">"</span></span><br><span class="line"><span class="string">http_proxy=http://qd-aliyun-proxy.haier.net:3128</span></span><br><span class="line"><span class="string">https_proxy=http://qd-aliyun-proxy.haier.net:3128</span></span><br><span class="line"><span class="string">ssl_proxy=http://qd-aliyun-proxy.haier.net:3128</span></span><br><span class="line"><span class="string">tls_proxy=http://qd-aliyun-proxy.haier.net:3128</span></span><br><span class="line"><span class="string">ftp_proxy=http://qd-aliyun-proxy.haier.net:3128</span></span><br><span class="line"><span class="string">tcp_proxy=http://qd-aliyun-proxy.haier.net:3128</span></span><br><span class="line"><span class="string">export http_proxy</span></span><br><span class="line"><span class="string">export https_proxy</span></span><br><span class="line"><span class="string">export ssl_proxy</span></span><br><span class="line"><span class="string">export ftp_proxy</span></span><br><span class="line"><span class="string">export tcp_proxy</span></span><br><span class="line"><span class="string">export tls_proxy"</span> &gt;&gt; /etc/profile ;  source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置wget代理</span></span><br><span class="line">echo <span class="string">"</span></span><br><span class="line"><span class="string">https_proxy=http://qd-aliyun-proxy.haier.net:3128/</span></span><br><span class="line"><span class="string">http_proxy=http://qd-aliyun-proxy.haier.net:3128/</span></span><br><span class="line"><span class="string">ftp_proxy=http://qd-aliyun-proxy.haier.net:3128/"</span> &gt;&gt; /etc/wgetrc ;  source /etc/wgetrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载install-dbgateway</span></span><br><span class="line">sudo wget -O install-dbgateway http://hdm-dbgateway-cn-qingdao.vpc100-oss-cn-qingdao.aliyuncs.com/DBGateway/install-dbgateway &amp;&amp; sudo /bin/bash install-dbgateway --id vpc-m5e6olft3vnne1ug6rdcd --token <span class="number">3359</span>FC7C28FB5B29459803F85B808D6D37B16B64FB2D56F485E632868E3C5798 --endpoint master-hdm-inner.cn-qingdao.aliyuncs.com --region cn-qingdao --native</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改install-dbgateway</span></span><br><span class="line">注释以下代码</span><br><span class="line">curl -v --connect-timeout <span class="number">3</span> --silent $&#123;endpoint&#125;:<span class="number">80</span> --output -</span><br><span class="line"><span class="keyword">if</span> [ $? != <span class="number">0</span> -a $? != <span class="number">52</span> ]; then</span><br><span class="line">       echo <span class="string">"Error! Can not connect to $&#123;endpoint&#125;:80, please check your network environment."</span></span><br><span class="line">       <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成</span></span><br><span class="line">sudo /bin/bash install-dbgateway --id vpc-m5e6olft3vnne1ug6rdcd --token <span class="number">3359</span>FC7C28FB5B29459803F85B808D6D37B16B64FB2D56F485E632868E3C5798 --endpoint master-hdm-inner.cn-qingdao.aliyuncs.com --region cn-qingdao --native</span><br></pre></td></tr></table></figure>

<p>② 实例接入后，显示的 <code>IP</code> 不是真实的业务 <code>IP</code> ？</p>
<p>经与阿里云开发沟通，新版本在 <code>/opt/dbgateway/conf/dbgateway.conf</code> 中添加 <code>gateway.local.ip=</code>  配置项，<code>dbgateway</code> 优先使用配置中的 <code>ip</code> 。</p>
<p>③ 服务器断电启动后，<code>dbgateway</code> 服务未自动重启？</p>
<p>暂不支持</p>
]]></content>
      <categories>
        <category>阿里云</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 数据目录</title>
    <url>/blog/2019/09/29/mysql-datadir/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>文件系统</strong>：操作系统用来管理磁盘的功能，像 <code>InnoDB</code>、 <code>MyISAM</code> 这样的存储引擎都是把表存储在文件系统上。</p>
<p><strong>安装目录</strong>：用来存储关于控制客户端程序和服务器程序的命令（如 <code>mysql</code>，<code>mysqld</code>，<code>mysqld_safe</code> 等）。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like 'basedir';</span><br><span class="line">+<span class="comment">---------------+-------------------------------------+</span></span><br><span class="line">| Variable_name | Value                               |</span><br><span class="line">+<span class="comment">---------------+-------------------------------------+</span></span><br><span class="line">| basedir       | /usr/local/mysql-5.7.23-el7-x86_64/ |</span><br><span class="line">+<span class="comment">---------------+-------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>数据目录</strong>：用来存储 <code>MySQL</code> 在运行过程中产生的数据。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like 'datadir';</span><br><span class="line">+<span class="comment">---------------+-------------------+</span></span><br><span class="line">| Variable_name | Value             |</span><br><span class="line">+<span class="comment">---------------+-------------------+</span></span><br><span class="line">| datadir       | /data/mysql-tdds/ |</span><br><span class="line">+<span class="comment">---------------+-------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>系统数据库</strong></p>
<ul>
<li><p><code>mysql</code></p>
<p>它存储了 <code>MySQL</code> 的用户账户和权限信息，一些存储过程、事件的定义信息，一些运行过程中产生的日志信息，一些帮助信息以及时区信息等。</p>
</li>
<li><p><code>information_schema</code></p>
<p>存储了 <code>MySQL</code> 服务器维护的所有其他数据库的信息，比如有表、视图、触发器、列、索引等信息，这些并不是真实的用户数据，而是一些描述性信息，有时候也称之为元数据。</p>
</li>
<li><p><code>performance_schema</code></p>
<p>存储了 <code>MySQL</code> 服务器运行过程中的一些状态信息，算是对 <code>MySQL</code> 服务器的一个性能监控。包括统计最近执行了哪些语句，在执行过程的每个阶段都花费了多长时间，内存的使用情况等。</p>
</li>
<li><p><code>sys</code></p>
<p>主要是通过视图的形式把 <code>information_schema</code> 和 <code>performance_schema</code> 结合起来，让程序员可以更方便的了解 <code>MySQL</code> 服务器的一些性能。</p>
</li>
</ul>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>每个数据库都对应数据目录下的一个子目录，或者说对应一个文件夹。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| employees          |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test               |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── auto.cnf</span><br><span class="line">├── error.log</span><br><span class="line">├── ib_buffer_pool</span><br><span class="line">├── ibdata1</span><br><span class="line">├── ib_logfile0</span><br><span class="line">├── ib_logfile1</span><br><span class="line">├── ibtmp1</span><br><span class="line">├── mysql</span><br><span class="line">├── mysql-binlog.<span class="number">000615</span></span><br><span class="line">├── mysql-binlog.<span class="number">000616</span></span><br><span class="line">├── mysql-binlog.<span class="number">000617</span></span><br><span class="line">├── ...</span><br><span class="line">├── mysql-binlog.index</span><br><span class="line">├── mysql.pid</span><br><span class="line">├── mysql.sock</span><br><span class="line">├── mysql.sock.lock</span><br><span class="line">├── performance_schema</span><br><span class="line">├── slow.log</span><br><span class="line">├── slow_query.log</span><br><span class="line">├── sys</span><br><span class="line">└── tdm</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>ibdata1</strong>：系统表的空间文件，<code>undo</code> 信息保存在系统文件 <code>ibdata1</code> 。</li>
<li><strong>ib_logfile0</strong>：保存 <code>InnoDB</code> 引擎表的事务日志信息，其文件大小尺寸固定，不可以改变。</li>
<li><strong>*.index</strong>：索引文件，用于记录哪些日志文件正在被使用。</li>
<li><strong>mysql-binlog.*</strong>：记录数据库所有的 <code>DDL</code> 和 <code>DML</code>（除了数据查询语句）语句事件。 </li>
</ul>
<h3 id="表"><a href="#表" class="headerlink" title="表"></a>表</h3><p><strong>InnoDB表</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── db.opt</span><br><span class="line">├── test.frm</span><br><span class="line">└── test.ibd</span><br><span class="line"></span><br><span class="line"><span class="comment"># db.opt：这个文件中包含了该数据库的各种属性，例如：数据库的字符集和比较规则</span></span><br><span class="line">default-character-set=utf8</span><br><span class="line">default-collation=utf8_general_ci</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表结构文件：存储表名称、列类型、约束条件、字符集等专门用于描述表结构的文件</span></span><br><span class="line">test.frm</span><br><span class="line"></span><br><span class="line"><span class="comment"># InnoDB表数据存储文件</span></span><br><span class="line">test.ibd</span><br></pre></td></tr></table></figure>

<p><strong>系统表空间（system tablespace）</strong></p>
<p><code>ibdata1</code> 是一个自扩展文件，默认 <code>12M</code>，配置文件可配置任意大小，不够用的时候会自己增加文件大小</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">innodb_data_home_dir  = /<span class="keyword">data</span>/mysql</span><br><span class="line">innodb_data_file_path = ibdata1:<span class="number">1</span>G:autoextend</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Tips：从 <code>MySQL 5.5.7</code> 到 <code>MySQL 5.6.6</code> 之间的各个版本中，我们表中的数据都会被默认存储到这个<strong>系统表空间</strong></p>
</blockquote>
<p><strong>独立表空间（file-per-table tablespace）</strong></p>
<p>在 <code>MySQL 5.6.6</code> 以及之后的版本，<code>InnoDB</code> 并不会默认的把各个表的数据存储到系统表空间中，而是为每一个表建立一个独立表空间。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">test.ibd  <span class="comment"># 用来存储test表中的数据和索引</span></span><br></pre></td></tr></table></figure>

<p><strong>innodb_file_per_table</strong>：指定使用系统表空间还是独立表空间来存储数据，该参数只对新建的表起作用，对于已经分配了表空间的表并不起作用。</p>
<ul>
<li><p>当 <code>innodb_file_per_table</code> 的值为 <code>0</code> 时，代表使用系统表空间</p>
</li>
<li><p>当 <code>innodb_file_per_table</code> 的值为 <code>1</code> 时，代表使用独立表空间</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like 'innodb_file_per_table';</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br><span class="line">| Variable_name         | Value |</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br><span class="line">| innodb_file_per_table | ON    |</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test表从独立表空间移动到系统表空间</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">test</span> <span class="keyword">TABLESPACE</span> innodb_system;</span><br><span class="line"></span><br><span class="line"><span class="comment"># test表从系统表空间移动到独立表空间</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">test</span> <span class="keyword">TABLESPACE</span> innodb_file_per_table;</span><br></pre></td></tr></table></figure>

<p><strong>MyISAM表</strong></p>
<p><code>MyISAM</code> 并没有什么所谓的表空间一说，表数据都存放到对应的数据库子目录下，在 <code>MyISAM</code> 中的索引全部都是二级索引，该存储引擎的数据和索引是分开存放的，所以在文件系统中也是使用不同的文件来存储数据文件和索引文件。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">test.frm  <span class="comment"># 表结构文件</span></span><br><span class="line">test.MYD  <span class="comment"># 表数据文件</span></span><br><span class="line">test.MYI  <span class="comment"># 表索引文件</span></span><br></pre></td></tr></table></figure>

<h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>视图是虚拟的表，也就是某个查询语句的一个别名而已，所以在存储视图的时候是不需要存储真实的数据的，只需要把它的结构存储起来就行了。和表一样描述视图结构的文件也会被存储到所属数据库对应的子目录下边，只会存储一个 <code>视图名.frm</code> 的文件。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── db.opt</span><br><span class="line">├── host_summary_by_file_io.frm</span><br><span class="line">├── host_summary_by_file_io_type.frm</span><br><span class="line">├── host_summary_by_stages.frm</span><br><span class="line">├── host_summary_by_statement_latency.frm</span><br><span class="line">├── host_summary_by_statement_type.frm</span><br><span class="line">├── host_summary.frm</span><br><span class="line">├── innodb_buffer_stats_by_schema.frm</span><br><span class="line">├── innodb_buffer_stats_by_table.frm</span><br><span class="line">└── innodb_lock_waits.frm</span><br></pre></td></tr></table></figure>

<h3 id="其他文件"><a href="#其他文件" class="headerlink" title="其他文件"></a>其他文件</h3><p>数据目录除了存储数据文件以外，还包括为了更好运行程序的一些额外文件，主要包括这几种类型的文件：</p>
<p><strong>进程文件</strong></p>
<p><code>MySQL</code> 服务器会把自己的进程 <code>ID</code> 写入到一个文件中 <code>mysql.pid</code></p>
<p><strong>日志文件</strong></p>
<p>在 <code>mysqld</code> 服务运行过程中，会产生各种各样的日志，例如：查询日志、错误日志、二进制日志、<code>redo</code> 日志等</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · InnoDB 存储引擎</title>
    <url>/blog/2019/09/26/mysql-innodb/</url>
    <content><![CDATA[<h2 id="InnoDB-页"><a href="#InnoDB-页" class="headerlink" title="InnoDB 页"></a>InnoDB 页</h2><p><code>InnoDB</code> 是一个将表中的数据存储到磁盘上的存储引擎，而真正处理数据的过程是发生在内存中的，所以需要把磁盘中的数据加载到内存中，如果是处理写入或修改请求的话，还需要把内存中的内容刷新到磁盘上。而我们知道读写磁盘的速度非常慢，和内存读写差了几个数量级，所以当我们想从表中获取某些记录时，<code>InnoDB</code> 存储引擎需要一条一条的把记录从磁盘上读出来么？不，那样会慢死，<code>InnoDB</code> 采取的方式是：将数据划分为若干个页，以页作为磁盘和内存之间交互的基本单位，<code>InnoDB</code> 中页的大小一般为 <code>16KB</code>。也就是在一般情况下，一次最少从磁盘中读取 <code>16KB</code> 的内容到内存中，一次最少把内存中的 <code>16KB</code> 内容刷新到磁盘中。</p>
<blockquote>
<p><strong>小结</strong></p>
</blockquote>
<ul>
<li><p>页是 <code>MySQL</code> 中磁盘和内存交互的基本单位，也是 <code>MySQL</code> 是管理存储空间的基本单位</p>
</li>
<li><p>指定和修改行格式的语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (列的信息) ROW_FORMAT=行格式名称</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 ROW_FORMAT=行格式名称</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>InnoDB</code> 目前定义了 4 种行格式：<code>Compact</code>、<code>Redundant</code>、<code>Dynamic</code>、<code>Compressed</code></p>
</li>
<li><p>一个页一般是 <code>16KB</code>，当记录中的数据太多，当前页放不下的时候，会把多余的数据存储到其他页中，这种现象称为<strong>行溢出</strong>。</p>
</li>
</ul>
<h2 id="InnoDB-数据页结构"><a href="#InnoDB-数据页结构" class="headerlink" title="InnoDB 数据页结构"></a>InnoDB 数据页结构</h2><p>InnoDB 为了不同的目的而设计了不同类型的页，我们把用于存放记录的页叫做<strong>数据页</strong>。</p>
<p>一个数据页可以被大致划分为 7 个部分：</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-26-152320.png" alt></p>
<ul>
<li><code>File Header</code>，表示页的一些通用信息，占固定的 <code>38</code> 字节。</li>
<li><code>Page Header</code>，表示数据页专有的一些信息，占固定的 <code>56</code> 个字节。</li>
<li><code>Infimum + Supremum</code>，两个虚拟的伪记录，分别表示页中的最小和最大记录，占固定的<code>26</code>个字节。</li>
<li><code>User Records</code>：真实存储我们插入的记录的部分，大小不固定。</li>
<li><code>Free Space</code>：页中尚未使用的部分，大小不确定。</li>
<li><code>Page Directory</code>：页中的某些记录相对位置，也就是各个槽在页面中的地址偏移量，大小不固定，插入的记录越多，这个部分占用的空间越多。</li>
<li><code>File Trailer</code>：用于检验页是否完整的部分，占用固定的 <code>8</code> 个字节。</li>
</ul>
<p>每个记录的头信息中都有一个 <code>next_record</code> 属性，从而使页中的所有记录串联成一个单链表。</p>
<p><code>InnoDB</code> 会把页中的记录划分为若干个组，每个组的最后一个记录的地址偏移量作为一个<strong>槽</strong>，存放在 <code>Page Directory</code> 中，所以在一个页中根据主键查找记录是非常快的，分成两步：</p>
<ul>
<li>通过二分法确定该记录所在的槽</li>
<li>通过记录的next_record属性遍历该槽所在的组中的各个记录</li>
</ul>
<p>每个数据页的 <code>File Header</code> 部分都有上一个和下一个页的编号，所以所有的数据页会组成一个双链表。</p>
<p>为保证从内存中同步到磁盘的页的完整性，在页的首部和尾部都会存储页中数据的校验和和页面最后修改时对应的 <code>LSN</code> 值，如果首部和尾部的校验和和 <code>LSN</code> 值校验不成功的话，就说明同步过程出现了问题。</p>
<p>页和记录的关系：</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-26-152840.png" alt></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 字符集</title>
    <url>/blog/2019/09/25/mysql-character/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>字符集</strong>：计算机中只能存储二进制数据，那字符串该如何存储字符串呢？是靠建立字符与二进制数据的映射关系，将一个字符映射成一个二进制数据的过程叫做<strong>编码</strong>，将一个二进制数据映射到一个字符的过程叫做<strong>解码</strong>，抽象出一个<strong>字符集</strong>的概念来描述某个字符范围的编码规则。</p>
<p><strong>比较规则</strong>：英文名为 <code>collation</code>，用于比较两个字符的大小。</p>
<p><strong>常用字符集</strong></p>
<ul>
<li><p><code>ASCII</code> 字符集</p>
<p>共收录 <code>128</code> 个字符，包括空格、标点符号、数字、大小写字母和一些不可见字符。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">'L'</span> -&gt;  <span class="number">01001100</span>（十六进制：<span class="number">0</span>x4C，十进制：<span class="number">76</span>）</span><br><span class="line"><span class="string">'M'</span> -&gt;  <span class="number">01001101</span>（十六进制：<span class="number">0</span>x4D，十进制：<span class="number">77</span>）</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>ISO 8859-1</code> 字符集</p>
<p>共收录 <code>256</code> 个字符，是在 <code>ASCII</code> 字符集的基础上又扩充了 <code>128</code> 个西欧常用字符（包括德法两国的字母），这个字符集也有一个别名 <code>latin1</code>。</p>
</li>
<li><p><code>utf8</code> 字符集</p>
<p>收录地球上能想到的所有字符，而且还在不断扩充。这种字符集兼容 <code>ASCII</code> 字符集，采用变长编码方式，编码一个字符需要使用 <code>1～4</code> 个字节，比方说这样：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">'L'</span> -&gt;  <span class="number">01001100</span>（十六进制：<span class="number">0</span>x4C）</span><br><span class="line"><span class="string">'啊'</span> -&gt;  <span class="number">111001011001010110001010</span>（十六进制：<span class="number">0</span>xE5958A）</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Tips： <code>utf8</code> 只是 <code>Unicode</code> 字符集的一种编码方案，<code>Unicode</code> 字符集可以用 <code>utf8</code>、<code>utf16</code>、<code>utf32</code> 这几种编码方案，<code>utf8</code> 使用 <code>1～4</code> 个字节编码一个字符。</p>
</blockquote>
</li>
</ul>
<p><strong>查看字符集（character set/charset）</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show charset like <span class="string">'utf8%'</span>;</span><br><span class="line">+---------+---------------+--------------------+--------+</span><br><span class="line">| Charset | Description   | Default collation  | Maxlen |</span><br><span class="line">+---------+---------------+--------------------+--------+</span><br><span class="line">| utf8    | UTF-<span class="number">8</span> Unicode | utf8_general_ci    |      <span class="number">3</span> |</span><br><span class="line">| utf8mb4 | UTF-<span class="number">8</span> Unicode | utf8mb4_general_ci |      <span class="number">4</span> |</span><br><span class="line">+---------+---------------+--------------------+--------+</span><br></pre></td></tr></table></figure>

<p><strong>查看比较规则（collation）</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show collation like <span class="string">'utf8%general_ci'</span>;</span><br><span class="line">+--------------------+---------+----+---------+----------+---------+</span><br><span class="line">| Collation          | Charset | Id | Default | Compiled | Sortlen |</span><br><span class="line">+--------------------+---------+----+---------+----------+---------+</span><br><span class="line">| utf8_general_ci    | utf8    | <span class="number">33</span> | Yes     | Yes      |       <span class="number">1</span> |</span><br><span class="line">| utf8mb4_general_ci | utf8mb4 | <span class="number">45</span> | Yes     | Yes      |       <span class="number">1</span> |</span><br><span class="line">+--------------------+---------+----+---------+----------+---------+</span><br></pre></td></tr></table></figure>

<p><code>utf8</code> 字符集默认的比较规则是 <code>utf8_general_ci</code>，它是一种通用的比较规则，<code>_ci</code> 结尾，表示不区分大小写。</p>
<h2 id="字符集和比较规则"><a href="#字符集和比较规则" class="headerlink" title="字符集和比较规则"></a>字符集和比较规则</h2><p><code>MySQL</code> 有四个级别的字符集和比较规则，分别是：</p>
<ul>
<li>服务器级别</li>
<li>数据库级别</li>
<li>表级别</li>
<li>列级别</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'character%'</span>;</span><br><span class="line">+--------------------------+----------------------------------------------------+</span><br><span class="line">| Variable_name            | Value                                              |</span><br><span class="line">+--------------------------+----------------------------------------------------+</span><br><span class="line">| character_set_client     | utf8                                               |</span><br><span class="line">| character_set_connection | utf8                                               |</span><br><span class="line">| character_set_database   | utf8                                               |</span><br><span class="line">| character_set_filesystem | binary                                             |</span><br><span class="line">| character_set_results    | utf8                                               |</span><br><span class="line">| character_set_server     | latin1                                             |</span><br><span class="line">| character_set_system     | utf8                                               |</span><br><span class="line">| character_sets_dir       | /usr/local/mysql-<span class="number">5.7</span>.<span class="number">23</span>-el7-x86_64/share/charsets/ |</span><br><span class="line">+--------------------------+----------------------------------------------------+</span><br></pre></td></tr></table></figure>

<ul>
<li>character_set_server： 默认的内部操作字符集</li>
<li>character_set_client： 服务器解码请求时使用的字符集</li>
<li>character_set_connection：连接层字符集</li>
<li>character_set_results： 服务器向客户端返回数据时使用的字符集</li>
<li>character_set_database： 当前选中数据库的默认字符集</li>
<li>character_set_system： 系统元数据(字段名等)字符集</li>
</ul>
<h3 id="服务器级别"><a href="#服务器级别" class="headerlink" title="服务器级别"></a>服务器级别</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 控制参数</span></span><br><span class="line">character_set_server</span><br><span class="line">collation_server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件设置</span></span><br><span class="line">[client]</span><br><span class="line">default-character-<span class="keyword">set</span>  = utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"><span class="keyword">default</span>-<span class="built_in">character</span>-<span class="keyword">set</span>  = utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="built_in">character</span>-<span class="keyword">set</span>-<span class="keyword">server</span>   = utf8</span><br><span class="line"><span class="keyword">collation</span>-<span class="keyword">server</span>       = utf8_general_ci</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看方法</span></span><br><span class="line">mysql&gt; <span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'character_set_server'</span>;</span><br><span class="line">+<span class="comment">----------------------+--------+</span></span><br><span class="line">| Variable_name        | Value  |</span><br><span class="line">+<span class="comment">----------------------+--------+</span></span><br><span class="line">| character_set_server | utf8   |</span><br><span class="line">+<span class="comment">----------------------+--------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'collation_server'</span>;</span><br><span class="line">+<span class="comment">------------------+-------------------+</span></span><br><span class="line">| Variable_name    | Value             |</span><br><span class="line">+<span class="comment">------------------+-------------------+</span></span><br><span class="line">| collation_server | utf8_general_ci   |</span><br><span class="line">+<span class="comment">------------------+-------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h3 id="数据库级别"><a href="#数据库级别" class="headerlink" title="数据库级别"></a>数据库级别</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 控制参数</span></span><br><span class="line">character_set_database</span><br><span class="line">collation_database</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建语法</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名</span><br><span class="line">    [[<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集名称]</span><br><span class="line">    [[<span class="keyword">DEFAULT</span>] <span class="keyword">COLLATE</span> 比较规则名称];</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> 数据库名</span><br><span class="line">    [[<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集名称]</span><br><span class="line">    [[<span class="keyword">DEFAULT</span>] <span class="keyword">COLLATE</span> 比较规则名称];</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 查看方法</span></span><br><span class="line">mysql&gt; use test;</span><br><span class="line">mysql&gt; SELECT @@character_set_database, @@collation_database;</span><br><span class="line">+<span class="comment">--------------------------+----------------------+</span></span><br><span class="line">| @@character_set_database | @@collation_database |</span><br><span class="line">+<span class="comment">--------------------------+----------------------+</span></span><br><span class="line">| utf8                     | utf8_general_ci      |</span><br><span class="line">+<span class="comment">--------------------------+----------------------+</span></span><br></pre></td></tr></table></figure>

<p><strong>规则</strong></p>
<ul>
<li>创建数据库时，指定了 <code>CHARACTER SET</code> 或 <code>COLLATE</code>，则以对应的字符集、比较规则为准。</li>
<li>创建数据库时，没有指定字符集、排序规则，则以 <code>character_set_server</code>、<code>collation_server</code> 为准。</li>
<li><code>character_set_database</code> 和 <code>collation_database</code> 这两个系统变量是只读的，不能通过修改这两个变量的值而改变当前数据库的字符集和比较规则。</li>
</ul>
<h3 id="表级别"><a href="#表级别" class="headerlink" title="表级别"></a>表级别</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建语法</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名 (列的信息)</span><br><span class="line">    [[<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集名称]</span><br><span class="line">    [<span class="keyword">COLLATE</span> 比较规则名称]]</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line">    [[<span class="keyword">DEFAULT</span>] <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集名称]</span><br><span class="line">    [<span class="keyword">COLLATE</span> 比较规则名称]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看方法</span></span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> <span class="keyword">test</span>\G</span><br><span class="line">*************************** <span class="number">1.</span> <span class="keyword">row</span> ***************************</span><br><span class="line">           <span class="keyword">Name</span>: <span class="keyword">test</span></span><br><span class="line">         <span class="keyword">Engine</span>: <span class="keyword">InnoDB</span></span><br><span class="line">        <span class="keyword">Version</span>: <span class="number">10</span></span><br><span class="line">     Row_format: Dynamic</span><br><span class="line">           <span class="keyword">Rows</span>: <span class="number">5</span></span><br><span class="line"> Avg_row_length: <span class="number">3276</span></span><br><span class="line">    Data_length: <span class="number">16384</span></span><br><span class="line">Max_data_length: <span class="number">0</span></span><br><span class="line">   Index_length: <span class="number">0</span></span><br><span class="line">      Data_free: <span class="number">0</span></span><br><span class="line"> Auto_increment: <span class="number">6</span></span><br><span class="line">    Create_time: <span class="number">2019</span><span class="number">-09</span><span class="number">-24</span> <span class="number">18</span>:<span class="number">00</span>:<span class="number">54</span></span><br><span class="line">    Update_time: <span class="literal">NULL</span></span><br><span class="line">     Check_time: <span class="literal">NULL</span></span><br><span class="line">      <span class="keyword">Collation</span>: utf8_general_ci</span><br><span class="line">       <span class="keyword">Checksum</span>: <span class="literal">NULL</span></span><br><span class="line"> Create_options: </span><br><span class="line">        <span class="keyword">Comment</span>:</span><br></pre></td></tr></table></figure>

<p><strong>规则</strong></p>
<ul>
<li>明确了 <code>charset_name</code>、<code>collation_name</code>，则采用 <code>charset_name</code>、<code>collation_name</code>。</li>
<li><code>charset_name</code>、<code>collation_name</code> 均未明确，则采用数据库的字符集、比较规则设置。</li>
</ul>
<h3 id="列级别"><a href="#列级别" class="headerlink" title="列级别"></a>列级别</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建语法</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">    列名 字符串类型 [<span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集名称] [<span class="keyword">COLLATE</span> 比较规则名称],</span><br><span class="line">    其他列...</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 列名 字符串类型 [<span class="built_in">CHARACTER</span> <span class="keyword">SET</span> 字符集名称] [<span class="keyword">COLLATE</span> 比较规则名称];</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看方法</span></span><br><span class="line">mysql&gt; SELECT CHARACTER_SET_NAME, COLLATION_NAME FROM information_schema.COLUMNS WHERE TABLE_SCHEMA="test" AND TABLE_NAME="test" AND COLUMN_NAME="name";</span><br><span class="line">+<span class="comment">--------------------+-----------------+</span></span><br><span class="line">| CHARACTER_SET_NAME | COLLATION_NAME  |</span><br><span class="line">+<span class="comment">--------------------+-----------------+</span></span><br><span class="line">| utf8               | utf8_general_ci |</span><br><span class="line">+<span class="comment">--------------------+-----------------+</span></span><br></pre></td></tr></table></figure>

<p><strong>规则</strong></p>
<ul>
<li>明确了 <code>charset_name</code>、<code>collation_name</code> 均明确，则采用 <code>charset_name</code>、<code>collation_name</code> 为准。</li>
<li><code>charset_name</code>、<code>collation_name</code> 均未明确，则以表的字符集、比较规则为准。</li>
</ul>
<blockquote>
<p><strong>小结</strong></p>
</blockquote>
<ul>
<li>如果创建或修改列时没有显式的指定字符集和比较规则，则该列默认用表的字符集和比较规则</li>
<li>如果创建或修改表时没有显式的指定字符集和比较规则，则该表默认用数据库的字符集和比较规则</li>
<li>如果创建或修改数据库时没有显式的指定字符集和比较规则，则该数据库默认用服务器的字符集和比较规则</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li><strong>字符集</strong>是某个字符范围的编码规则。</li>
<li><strong>比较规则</strong>是针对某个字符集中的字符比较大小的一种规则。</li>
<li>MySQL 中一个字符集可以有若干种比较规则，其中有一个默认的比较规则。</li>
<li>MySQL 有四个级别的字符集和比较规则，优先级排序：列 &gt; 表 &gt; 库 &gt; 服务器。</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 配置文件</title>
    <url>/blog/2019/09/25/mysql-config/</url>
    <content><![CDATA[<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>MySQL 默认配置文件：<code>/etc/my.cnf</code>，自动 <a href="https://imysql.com/my_cnf_generator" target="_blank" rel="noopener">生成工具</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">port                      = <span class="number">3306</span></span><br><span class="line">socket                    = /<span class="keyword">data</span>/mysql/mysql.sock</span><br><span class="line">default-character-set     = utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set     = utf8</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port                      = <span class="number">3306</span></span><br><span class="line">basedir                   = /usr/local/mysql</span><br><span class="line">datadir                   = /<span class="keyword">data</span>/mysql</span><br><span class="line">socket                    = /<span class="keyword">data</span>/mysql/mysql.sock</span><br><span class="line">pid-file                  = /<span class="keyword">data</span>/mysql/mysql.pid</span><br><span class="line">character-set-server      = utf8</span><br><span class="line">collation-server          = utf8_general_ci</span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line"><span class="comment"># LOG</span></span><br><span class="line">slow_query_log            = <span class="number">1</span></span><br><span class="line">long_query_time           = <span class="number">5</span></span><br><span class="line">log_error                 = /<span class="keyword">data</span>/mysql/error.log</span><br><span class="line">slow_query_log_file       = /<span class="keyword">data</span>/mysql/slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># INNODB</span></span><br><span class="line">innodb_data_home_dir      = /<span class="keyword">data</span>/mysql</span><br><span class="line">innodb_buffer_pool_size   = <span class="number">10240</span>M</span><br><span class="line">innodb_log_file_size      = <span class="number">2</span>G</span><br><span class="line">innodb_data_file_path     = ibdata1:<span class="number">1</span>G:autoextend</span><br><span class="line">innodb_buffer_pool_instances = <span class="number">4</span></span><br><span class="line">innodb_max_undo_log_size  = <span class="number">4</span>G</span><br><span class="line"></span><br><span class="line"><span class="comment"># OTHER</span></span><br><span class="line">back_log                  = <span class="number">1024</span></span><br><span class="line">max_connections           = <span class="number">1000</span></span><br><span class="line">interactive_timeout       = <span class="number">600</span></span><br><span class="line">wait_timeout              = <span class="number">600</span></span><br><span class="line">sort_buffer_size          = <span class="number">16</span>M</span><br><span class="line">join_buffer_size          = <span class="number">16</span>M</span><br><span class="line">lower_case_table_names    = <span class="number">1</span></span><br><span class="line">log_timestamps            = SYSTEM</span><br><span class="line">explicit_defaults_for_timestamp = <span class="number">1</span></span><br><span class="line">log_queries_not_using_indexes   = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">server-id                 = <span class="number">3306100</span></span><br><span class="line">log-bin                   = /<span class="keyword">data</span>/mysql/mysql-bin</span><br><span class="line">sync_binlog               = <span class="number">1</span></span><br><span class="line">max_binlog_size           = <span class="number">1024</span>M</span><br><span class="line">binlog-format             = row</span><br><span class="line">expire_logs_days          = <span class="number">7</span></span><br></pre></td></tr></table></figure>

<ul>
<li>[<strong>mysql</strong>]：该部分由 <code>MySQL</code> 命令行客户端读取</li>
<li>[<strong>client</strong>]：该部分由所有连接的客户端读取（包括 <code>mysql cli</code>）</li>
<li>[<strong>mysqld</strong>]：该部分由 <code>MySQL</code> 服务器读取</li>
<li>[<strong>mysqldump</strong>]：该部分由 <code>mysqldump</code> 命令读取</li>
<li>[<strong>mysqld_safe</strong>]：该部分由 <code>mysqld_safe</code> 命令读取</li>
</ul>
<h2 id="参数类型"><a href="#参数类型" class="headerlink" title="参数类型"></a>参数类型</h2><ul>
<li><strong>静态参数</strong>：重启 <code>MySQL</code> 服务后才能使之生效。</li>
<li><strong>动态参数</strong>：可以在不重新启动 <code>MySQL</code> 服务的情况下立即生效。</li>
</ul>
<h2 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h2><ul>
<li>MySQL · 配置参数 · innodb_buffer_pool_size</li>
<li>MySQL · 配置参数 · max_connections</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 参数选择 · varchar vs char</title>
    <url>/blog/2019/09/24/mysql-stringtype/</url>
    <content><![CDATA[<p><strong>CHAR</strong> ：是一种<strong>定长字符串</strong>类型，并且必须在圆括号内用一个大小修饰符来定义，这个大小修饰符的范围从 0～255。比指定长度大的值将被截短，而比指定长度小的值将会用空格作填补。</p>
<p><strong>VARCHAR</strong> ：是一种<strong>可变长度</strong>的字符串类型，并且也必须带有一个范围指示器。</p>
<table>
<thead>
<tr>
<th align="left">Value</th>
<th align="left">CHAR(4)</th>
<th align="left">Storage Required</th>
<th align="left">VARCHAR(4)</th>
<th align="left">Storage Required</th>
</tr>
</thead>
<tbody><tr>
<td align="left">‘’</td>
<td align="left">‘’</td>
<td align="left">4 bytes</td>
<td align="left">‘’</td>
<td align="left">1 byte</td>
</tr>
<tr>
<td align="left">‘ab’</td>
<td align="left">‘ab’</td>
<td align="left">4 bytes</td>
<td align="left">‘ab’</td>
<td align="left">3 bytes</td>
</tr>
<tr>
<td align="left">‘abcd’</td>
<td align="left">‘abcd’</td>
<td align="left">4 bytes</td>
<td align="left">‘abcd’</td>
<td align="left">5 bytes</td>
</tr>
<tr>
<td align="left">‘abcdefgh’</td>
<td align="left">‘abcd’</td>
<td align="left">4 bytes</td>
<td align="left">‘abcd’</td>
<td align="left">5 bytes</td>
</tr>
</tbody></table>
<p><strong>性能对比</strong></p>
<p>char &gt; varchar</p>
<p><strong>选择</strong></p>
<p>选择最小的数据范围，因为这样可以大大减少磁盘空间及磁盘 I/O 读写开销，<strong>减少内存占用，减少CPU占用率</strong></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 参数选择 · datetime vs timestamp</title>
    <url>/blog/2019/09/24/mysql-timetype/</url>
    <content><![CDATA[<p>MySQL 中常用的两种时间储存类型分别是 <code>datetime</code> 和 <code>timestamp</code>，建表时该如何选择呢？</p>
<p><strong>占用空间</strong></p>
<table>
<thead>
<tr>
<th align="left">类型</th>
<th align="left">占据字节</th>
<th align="left">表示形式</th>
</tr>
</thead>
<tbody><tr>
<td align="left">datetime</td>
<td align="left">8 字节</td>
<td align="left">yyyy-mm-dd hh:mm:ss</td>
</tr>
<tr>
<td align="left">timestamp</td>
<td align="left">4 字节</td>
<td align="left">yyyy-mm-dd hh:mm:ss</td>
</tr>
</tbody></table>
<p><strong>表示范围</strong></p>
<table>
<thead>
<tr>
<th align="left">类型</th>
<th align="left">表示范围</th>
</tr>
</thead>
<tbody><tr>
<td align="left">datetime</td>
<td align="left">‘1000-01-01 00:00:00.000000’ to ‘9999-12-31 23:59:59.999999’</td>
</tr>
<tr>
<td align="left">timestamp</td>
<td align="left">‘1970-01-01 00:00:01.000000’ to ‘2038-01-19 03:14:07.999999’</td>
</tr>
</tbody></table>
<p><strong>时区</strong></p>
<ul>
<li><p><code>timestamp</code> 占 4 个字节，而且是以 <code>utc</code> 格式储存，它会自动检索当前时区并进行转换，存和取可能不一样。</p>
</li>
<li><p><code>datetime</code> 占 8 个字节储存，不会进行时区的检索，存和取一样。</p>
</li>
<li><p>区别：如果存进去的是 <code>NULL</code>，<code>timestamp</code> 会自动储存当前时间，而 <code>datetime</code> 会储存 <code>NULL</code>。</p>
</li>
</ul>
<p><strong>测试</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建测试表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> timedemo(st <span class="built_in">timestamp</span>,dt datetime);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> timedemo <span class="keyword">values</span> (<span class="literal">null</span>,<span class="literal">null</span>), (<span class="keyword">now</span>(),<span class="keyword">now</span>()), (<span class="string">'20161001193450'</span>,<span class="string">'20161001193450'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># timestamp 会自动储存当前时间，而 datetime 会储存 NULL</span></span><br><span class="line">mysql&gt; select * from timedemo;</span><br><span class="line">+<span class="comment">---------------------+---------------------+</span></span><br><span class="line">| st                  | dt                  |</span><br><span class="line">+<span class="comment">---------------------+---------------------+</span></span><br><span class="line">| 2019-09-24 14:00:15 | NULL                |</span><br><span class="line">| 2019-09-24 14:00:15 | 2019-09-24 14:00:15 |</span><br><span class="line">| 2016-10-01 19:34:50 | 2016-10-01 19:34:50 |</span><br><span class="line">+<span class="comment">---------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将时区修改为东9区，会发现 timestamp 比 datetime 多一小时</span></span><br><span class="line">mysql&gt; set time_zone='+9:00';</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like "time_zone";</span><br><span class="line">+<span class="comment">---------------+--------+</span></span><br><span class="line">| Variable_name | Value  |</span><br><span class="line">+<span class="comment">---------------+--------+</span></span><br><span class="line">| time_zone     | +09:00 |</span><br><span class="line">+<span class="comment">---------------+--------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> timedemo;</span><br><span class="line">+<span class="comment">---------------------+---------------------+</span></span><br><span class="line">| st                  | dt                  |</span><br><span class="line">+<span class="comment">---------------------+---------------------+</span></span><br><span class="line">| 2019-09-24 15:00:15 | NULL                |</span><br><span class="line">| 2019-09-24 15:00:15 | 2019-09-24 14:00:15 |</span><br><span class="line">| 2016-10-01 20:34:50 | 2016-10-01 19:34:50 |</span><br><span class="line">+<span class="comment">---------------------+---------------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p><strong>选择</strong></p>
<ul>
<li>如果在时间上要超过 <code>Linux</code> 时间的，或者服务器时区不一样的就建议选择 <code>datetime</code>。</li>
<li>如果是想要使用自动插入时间或者自动更新时间功能，可以使用 <code>timestamp</code>。</li>
<li>存储年使用 <code>year</code>，存储日期使用 <code>date</code>，存储时间使用 <code>datetime</code>。</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 运维实践 · 在线搭建从库</title>
    <url>/blog/2019/09/20/mysql-practice-slave/</url>
    <content><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>常见有以下两种：</p>
<ul>
<li>主从复制中断，主 <code>binlog</code> 缺失，需要重新搭建从库</li>
<li>单主模式，升级为主从模式</li>
</ul>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>使用 Percona XtraBackup 工具不停机不锁表在线搭建从库。</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><ul>
<li>主从服务器，<a href="https://huiraoo.github.io/blog/2019/06/18/mysql-xtrabackup/"><strong>安装 XtraBackup</strong></a></li>
</ul>
<ul>
<li><p><a href="https://huiraoo.github.io/blog/2019/07/08/linux-ssh/"><strong>配置主从互信</strong></a></p>
</li>
<li><p>备份主库</p>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ innobackupex --defaults-file=/etc/my.cnf --user=<span class="string">'xx'</span> --password=<span class="string">'xx'</span> --no-timestamp /<span class="keyword">data</span>/backup</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Tips：备份目录要依据服务器磁盘分配，否则会占满磁盘，影响业务。</p>
</blockquote>
<ul>
<li>传输到从库</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ scp -r /<span class="keyword">data</span>/backup/* root@x.x.x.x:/<span class="keyword">data</span>/backup</span><br></pre></td></tr></table></figure>

<ul>
<li>恢复数据</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysqladmin -uroot -p<span class="string">'xx'</span> shutdown</span><br><span class="line">$ innobackupex --apply-log /<span class="keyword">data</span>/backup</span><br><span class="line">$ mv mysql mysql_bak</span><br><span class="line">$ mkdir mysql</span><br><span class="line">$ innobackupex --copy-back /<span class="keyword">data</span>/backup</span><br><span class="line">$ chown -R mysql:mysql mysql</span><br><span class="line">$ /usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf --user=mysql &gt;/dev/null &amp;</span><br></pre></td></tr></table></figure>

<ul>
<li>建立复制关系</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cat xtrabackup_binlog_info</span><br><span class="line">mysql-binlog.<span class="number">000297</span>	<span class="number">900834433</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置同步</span></span><br><span class="line">CHANGE MASTER TO </span><br><span class="line">MASTER_HOST=<span class="string">'x.x.x.x'</span>,</span><br><span class="line">MASTER_USER=<span class="string">'repl'</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">'xx'</span>,</span><br><span class="line">MASTER_PORT=<span class="number">3306</span>,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'mysql-bin.000297'</span>, </span><br><span class="line">MASTER_LOG_POS=<span class="number">900834433</span>,</span><br><span class="line">MASTER_CONNECT_RETRY=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启同步</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主库检查参数</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| mysql-bin.<span class="number">001958</span> | <span class="number">32629730</span> |              |                  |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库检查参数</span></span><br><span class="line">show slave status\G</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例分析 · 主从复制中断</title>
    <url>/blog/2019/09/20/mysql-case-replication/</url>
    <content><![CDATA[<h2 id="备库找不到主库-binlog-文件"><a href="#备库找不到主库-binlog-文件" class="headerlink" title="备库找不到主库 binlog 文件"></a>备库找不到主库 binlog 文件</h2><h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-20-015800.png" alt="image-20190920095751451"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span><br><span class="line">************************* <span class="number">1</span>. row ***************************</span><br><span class="line">               Slave_IO_State: </span><br><span class="line">                  Master_Host: <span class="number">10.135</span>.<span class="number">22.70</span></span><br><span class="line">                  Master_User: repluser</span><br><span class="line">                  Master_Port: <span class="number">3308</span></span><br><span class="line">                Connect_Retry: <span class="number">10</span></span><br><span class="line">              Master_Log_File: mysql-bin.<span class="number">001935</span></span><br><span class="line">          Read_Master_Log_Pos: <span class="number">6587</span></span><br><span class="line">               Relay_Log_File: relay-log.<span class="number">001487</span></span><br><span class="line">                Relay_Log_Pos: <span class="number">4</span></span><br><span class="line">        Relay_Master_Log_File: mysql-bin.<span class="number">001935</span></span><br><span class="line">             Slave_IO_Running: No</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">                           .....</span><br><span class="line">        Seconds_Behind_Master: NULL</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: <span class="number">1236</span></span><br><span class="line">                Last_IO_Error: Got fatal error <span class="number">1236</span> from master when reading <span class="keyword">data</span> from binary log: <span class="string">'Could not find first log file name in binary log index file'</span></span><br><span class="line">               Last_SQL_Errno: <span class="number">0</span></span><br><span class="line">               Last_SQL_Error:</span><br></pre></td></tr></table></figure>

<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>该错误发生在从库 <code>io</code> 进程从主库拉取日志时，发现主库的 <code>mysql_bin.index</code> 文件中第一个文件不存在，出现此类报错可能有两个原因：</p>
<ul>
<li><code>Slave</code> 由于某种原因停了好长一段是时间，当你重启 <code>Slave</code> 复制的时候，在主库上找不到相应的 <code>binlog</code> 。</li>
<li>由于某些设置主库上的 <code>binlog</code> 被删除了，导致从库获取不到对应的 <code>binlog</code>。</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[root@hop02 mzjh]<span class="comment"># ll | grep mysql-bin</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073742013</span> Sep <span class="number">12</span> <span class="number">14</span>:<span class="number">55</span> mysql-bin.<span class="number">001948</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073742073</span> Sep <span class="number">13</span> <span class="number">11</span>:<span class="number">53</span> mysql-bin.<span class="number">001949</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073742120</span> Sep <span class="number">14</span> <span class="number">08</span>:<span class="number">39</span> mysql-bin.<span class="number">001950</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073859355</span> Sep <span class="number">15</span> <span class="number">06</span>:<span class="number">21</span> mysql-bin.<span class="number">001951</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1074054892</span> Sep <span class="number">16</span> <span class="number">06</span>:<span class="number">18</span> mysql-bin.<span class="number">001952</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1075243641</span> Sep <span class="number">17</span> <span class="number">06</span>:<span class="number">18</span> mysql-bin.<span class="number">001953</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1074801420</span> Sep <span class="number">18</span> <span class="number">06</span>:<span class="number">16</span> mysql-bin.<span class="number">001954</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1075257243</span> Sep <span class="number">19</span> <span class="number">06</span>:<span class="number">16</span> mysql-bin.<span class="number">001955</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql   <span class="number">619405162</span> Sep <span class="number">19</span> <span class="number">13</span>:<span class="number">32</span> mysql-bin.<span class="number">001956</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1072898197</span> Sep <span class="number">20</span> <span class="number">09</span>:<span class="number">44</span> mysql-bin.<span class="number">001957</span></span><br><span class="line">-rw-r-----. <span class="number">1</span> mysql mysql         <span class="number">190</span> Sep <span class="number">19</span> <span class="number">13</span>:<span class="number">32</span> mysql-bin.index</span><br></pre></td></tr></table></figure>

<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>为了避免数据丢失，需要重新搭建 <code>Slave</code></p>
<blockquote>
<p><strong>Tips</strong>：不要使用 <code>rm -rf</code> 命令删除 <code>binlog</code> 日志文件</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; PURGE MASTER LOGS TO <span class="string">'mysql-bin.001950′</span></span><br></pre></td></tr></table></figure>

<h2 id="主库空间问题，日志被截断"><a href="#主库空间问题，日志被截断" class="headerlink" title="主库空间问题，日志被截断"></a>主库空间问题，日志被截断</h2><h3 id="现象-1"><a href="#现象-1" class="headerlink" title="现象"></a>现象</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** <span class="number">1</span>. row ***************************</span><br><span class="line">               Slave_IO_State: </span><br><span class="line">                  Master_Host: <span class="number">10.138</span>.<span class="number">22.10</span></span><br><span class="line">                  Master_User: repluser</span><br><span class="line">                  Master_Port: <span class="number">3306</span></span><br><span class="line">                Connect_Retry: <span class="number">60</span></span><br><span class="line">              Master_Log_File: mysql-bin.<span class="number">006130</span></span><br><span class="line">          Read_Master_Log_Pos: <span class="number">733347710</span></span><br><span class="line">               Relay_Log_File: dzspdb2-relay-bin.<span class="number">014727</span></span><br><span class="line">                Relay_Log_Pos: <span class="number">253</span></span><br><span class="line">        Relay_Master_Log_File: mysql-bin.<span class="number">006130</span></span><br><span class="line">             Slave_IO_Running: No</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">                           .....</span><br><span class="line">        Seconds_Behind_Master: NULL</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: <span class="number">1236</span></span><br><span class="line">                Last_IO_Error: Got fatal error <span class="number">1236</span> from master when reading <span class="keyword">data</span> from binary log: <span class="string">'binlog truncated in the middle of event; consider out of disk space on master; the first event '</span>mysql-bin.<span class="number">006130</span><span class="string">' at 733347710, the last event read from '</span>./mysql-bin.<span class="number">006130</span><span class="string">' at 733347710, the last byte read from '</span>./mysql-bin.<span class="number">006130</span><span class="string">' at 733347840.'</span></span><br><span class="line">               Last_SQL_Errno: <span class="number">0</span></span><br><span class="line">               Last_SQL_Error:</span><br></pre></td></tr></table></figure>

<h3 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h3><p>该错误和主库的空间和 <code>sync_binlog</code> 配置有关，当主库 <code>sync_binlog = N</code> 不等于 1 且磁盘空间满时，MySQL 每写 N 次 <code>binlog</code>，系统才会同步到磁盘，但是由于存储日志的磁盘空间满而导致 MySQL 没有将日志完全写入磁盘，<code>binlog event</code> 被截断，从库读取该 <code>binlog</code> 时就会报错 <code>binlog truncated in the middle of event</code>。</p>
<h3 id="解决-1"><a href="#解决-1" class="headerlink" title="解决"></a>解决</h3><p> 在从库重新指向到主库下一个可用的 <code>binlog</code> 并且从初始化的位置开始：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">stop slave;</span><br><span class="line">change master to master_log_file = <span class="string">'mysql-bin.006131'</span>, master_log_pos = <span class="number">4</span>;</span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure>

<h2 id="主从数据不一致"><a href="#主从数据不一致" class="headerlink" title="主从数据不一致"></a>主从数据不一致</h2><h3 id="现象-2"><a href="#现象-2" class="headerlink" title="现象"></a>现象</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** <span class="number">1</span>. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: <span class="number">10.138</span>.<span class="number">232.83</span></span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: <span class="number">3306</span></span><br><span class="line">                Connect_Retry: <span class="number">10</span></span><br><span class="line">              Master_Log_File: mysql-bin.<span class="number">001283</span></span><br><span class="line">          Read_Master_Log_Pos: <span class="number">397428472</span></span><br><span class="line">               Relay_Log_File: relay-log.<span class="number">000010</span></span><br><span class="line">                Relay_Log_Pos: <span class="number">661219485</span></span><br><span class="line">        Relay_Master_Log_File: mysql-bin.<span class="number">000528</span></span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: No</span><br><span class="line">                           .....</span><br><span class="line">                   Last_Error: Could not execute Update_rows event on table cosmo-aps.bns_aps_versiontolineinfo; Error writing file <span class="string">'/data/mysql/tmp/MLpTCcJu'</span> (Errcode: <span class="number">28</span> - No space left on device), Error_code: <span class="number">3</span>; Error writing file <span class="string">'mysql-bin'</span> (errno: <span class="number">28</span> - No space left on device), Error_code: <span class="number">1026</span>; handler error HA_ERR_RBR_LOGGING_FAILED; the event<span class="string">'s master log mysql-bin.000528, end_log_pos 674303230</span></span><br><span class="line"><span class="string">                           .....</span></span><br><span class="line"><span class="string">        Seconds_Behind_Master: NULL</span></span><br></pre></td></tr></table></figure>

<h3 id="原因-2"><a href="#原因-2" class="headerlink" title="原因"></a>原因</h3><ul>
<li><code>Master</code> 和 <code>Slave</code> 数据不一致导致</li>
<li><code>Slave</code> 服务器重启，事务回滚造成</li>
</ul>
<h3 id="解决-2"><a href="#解决-2" class="headerlink" title="解决"></a>解决</h3><ul>
<li>手动跳过</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mysql&gt; stop slave ;</span><br><span class="line">mysql&gt; set global sql_slave_skip_counter=<span class="number">1</span>;</span><br><span class="line">mysql&gt; start slave ;</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-slave-restart/">pt-slave-restart</a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 容灾</title>
    <url>/blog/2019/09/04/mysql-disaster/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>数据是企业的生命线，<code>PSI</code> 线上系统数据基本都存储在青岛本地机房，缺少异地容灾能力，当出现机房级灾难场景下（如：地震、海啸、火灾等），业务连续性受到极大的影响，损失不可估量。如下图所示，目前 <code>PSI</code> 已具备前两类故障场景的覆盖能力，需要构建覆盖第三类故障场景能力，全方位保障业务数据安全，有备无患。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-25-135300.png" alt></p>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul>
<li>保证极端场景下业务数据可恢复</li>
<li><code>RPO</code> &lt; 2 小时，<code>RTO</code> &lt; 24 小时</li>
</ul>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p><strong>设计方案</strong>：如下图所示，重要系统生产数据（青岛本地机房：电信机房、联通机房、移动机房…）同步至红岛灾备数据中心，特别重要系统数据压缩存储上传至阿里云 <code>OSS</code>。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-25-135600.png" alt></p>
<p><strong>实施方案</strong>：从库实例再搭建一个从实例形成级联结构，对数据进行实时同步，主要为避免增加主库负载。</p>
<p><strong>实例拓扑：</strong></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-25-140100.png" alt></p>
<p><strong>系统监控：</strong></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-25-140200.png" alt></p>
<ul>
<li><p>主实例：<code>TDDS_M</code></p>
</li>
<li><p>从实例：<code>TDDS_S</code></p>
</li>
<li><p>灾备实例：<code>TDDS_D</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>容器</title>
    <url>/blog/2019/08/28/docker/</url>
    <content><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ systemctl start docker  // 启动docker</span><br><span class="line">$ systemctl stop docker   // 关闭docker</span><br><span class="line">$ docker restart xxx      // 重启一个容器</span><br><span class="line">$ docker stop xxx         // 停止一个容器</span><br><span class="line">$ docker rm xxx           // 删除一个容器</span><br><span class="line">$ docker rm -f xxx        // 强制删除一个容器</span><br><span class="line">$ docker log xxx          // 查看容器日志</span><br><span class="line">$ docker ps -a            // 查看容器信息</span><br><span class="line">$ docker search xxx       // 查看镜像</span><br></pre></td></tr></table></figure>

<h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><p><a href="http://asdfghjkl.xyz/2019/04/25/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90Kubernetes/" target="_blank" rel="noopener">深入剖析 Kubernetes</a></p>
]]></content>
      <categories>
        <category>容器</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 用户权限</title>
    <url>/blog/2019/08/27/mysql-privilege/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>Privilege</th>
<th>Grant Table Column</th>
<th>Context</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_all" target="_blank" rel="noopener"><code>ALL PRIVILEGES</code></a></td>
<td>Synonym for “all privileges”</td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_alter" target="_blank" rel="noopener"><code>ALTER</code></a></td>
<td><code>Alter_priv</code></td>
<td>Tables</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_alter-routine" target="_blank" rel="noopener"><code>ALTER ROUTINE</code></a></td>
<td><code>Alter_routine_priv</code></td>
<td>Stored routines</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create" target="_blank" rel="noopener"><code>CREATE</code></a></td>
<td><code>Create_priv</code></td>
<td>Databases, tables, or indexes</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-routine" target="_blank" rel="noopener"><code>CREATE ROUTINE</code></a></td>
<td><code>Create_routine_priv</code></td>
<td>Stored routines</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-tablespace" target="_blank" rel="noopener"><code>CREATE TABLESPACE</code></a></td>
<td><code>Create_tablespace_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-temporary-tables" target="_blank" rel="noopener"><code>CREATE TEMPORARY TABLES</code></a></td>
<td><code>Create_tmp_table_priv</code></td>
<td>Tables</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-user" target="_blank" rel="noopener"><code>CREATE USER</code></a></td>
<td><code>Create_user_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_create-view" target="_blank" rel="noopener"><code>CREATE VIEW</code></a></td>
<td><code>Create_view_priv</code></td>
<td>Views</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_delete" target="_blank" rel="noopener"><code>DELETE</code></a></td>
<td><code>Delete_priv</code></td>
<td>Tables</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_drop" target="_blank" rel="noopener"><code>DROP</code></a></td>
<td><code>Drop_priv</code></td>
<td>Databases, tables, or views</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_event" target="_blank" rel="noopener"><code>EVENT</code></a></td>
<td><code>Event_priv</code></td>
<td>Databases</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_execute" target="_blank" rel="noopener"><code>EXECUTE</code></a></td>
<td><code>Execute_priv</code></td>
<td>Stored routines</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_file" target="_blank" rel="noopener"><code>FILE</code></a></td>
<td><code>File_priv</code></td>
<td>File access on server host</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_grant-option" target="_blank" rel="noopener"><code>GRANT OPTION</code></a></td>
<td><code>Grant_priv</code></td>
<td>Databases, tables, or stored routines</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_index" target="_blank" rel="noopener"><code>INDEX</code></a></td>
<td><code>Index_priv</code></td>
<td>Tables</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_insert" target="_blank" rel="noopener"><code>INSERT</code></a></td>
<td><code>Insert_priv</code></td>
<td>Tables or columns</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_lock-tables" target="_blank" rel="noopener"><code>LOCK TABLES</code></a></td>
<td><code>Lock_tables_priv</code></td>
<td>Databases</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_process" target="_blank" rel="noopener"><code>PROCESS</code></a></td>
<td><code>Process_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_proxy" target="_blank" rel="noopener"><code>PROXY</code></a></td>
<td>See <code>proxies_priv</code> table</td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_references" target="_blank" rel="noopener"><code>REFERENCES</code></a></td>
<td><code>References_priv</code></td>
<td>Databases or tables</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_reload" target="_blank" rel="noopener"><code>RELOAD</code></a></td>
<td><code>Reload_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_replication-client" target="_blank" rel="noopener"><code>REPLICATION CLIENT</code></a></td>
<td><code>Repl_client_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_replication-slave" target="_blank" rel="noopener"><code>REPLICATION SLAVE</code></a></td>
<td><code>Repl_slave_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_select" target="_blank" rel="noopener"><code>SELECT</code></a></td>
<td><code>Select_priv</code></td>
<td>Tables or columns</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_show-databases" target="_blank" rel="noopener"><code>SHOW DATABASES</code></a></td>
<td><code>Show_db_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_show-view" target="_blank" rel="noopener"><code>SHOW VIEW</code></a></td>
<td><code>Show_view_priv</code></td>
<td>Views</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_shutdown" target="_blank" rel="noopener"><code>SHUTDOWN</code></a></td>
<td><code>Shutdown_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_super" target="_blank" rel="noopener"><code>SUPER</code></a></td>
<td><code>Super_priv</code></td>
<td>Server administration</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_trigger" target="_blank" rel="noopener"><code>TRIGGER</code></a></td>
<td><code>Trigger_priv</code></td>
<td>Tables</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_update" target="_blank" rel="noopener"><code>UPDATE</code></a></td>
<td><code>Update_priv</code></td>
<td>Tables or columns</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#priv_usage" target="_blank" rel="noopener"><code>USAGE</code></a></td>
<td>Synonym for “no privileges”</td>
<td>Server administration</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 索引</title>
    <url>/blog/2019/08/21/mysql-index/</url>
    <content><![CDATA[<p>创建一个测试数据库和数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> db_test <span class="keyword">default</span> <span class="keyword">charset</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci; </span><br><span class="line"><span class="keyword">use</span> db_test;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> payment (  </span><br><span class="line">    <span class="keyword">id</span>         <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,  </span><br><span class="line">    staff_id  <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,  </span><br><span class="line">    customer_id <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,  </span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure>

<p>利用存储过程插入 1000w 行随机数据（表引擎可以先设置为 MyISAM，然后改为 InnoDB）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> add_payment;  </span><br><span class="line">DELIMITER //</span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">PROCEDURE</span> add_payment(<span class="keyword">in</span> <span class="keyword">num</span> <span class="built_in">INT</span>)</span><br><span class="line">    <span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> <span class="keyword">rowid</span> <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">SET</span> @exesql = <span class="string">'INSERT INTO payment(staff_id, customer_id) values (?, ?)'</span>;</span><br><span class="line">        WHILE rowid &lt; num DO</span><br><span class="line">            <span class="keyword">SET</span> @staff_id = (<span class="number">1</span> + <span class="keyword">FLOOR</span>(<span class="number">5000</span>*<span class="keyword">RAND</span>()) ); </span><br><span class="line">            <span class="keyword">SET</span> @customer_id = (<span class="number">1</span> + <span class="keyword">FLOOR</span>(<span class="number">500000</span>*<span class="keyword">RAND</span>()));</span><br><span class="line">            <span class="keyword">SET</span> <span class="keyword">rowid</span> = <span class="keyword">rowid</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">prepare</span> stmt <span class="keyword">FROM</span> @exesql;</span><br><span class="line">            <span class="keyword">EXECUTE</span> stmt <span class="keyword">USING</span> @staff_id, @customer_id;            </span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">    <span class="keyword">END</span> //</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>

<p>如何选择索引？</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(<span class="keyword">DISTINCT</span> <span class="keyword">col</span>), <span class="keyword">count</span>(*) <span class="keyword">from</span> t_batch\G;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 锁机制</title>
    <url>/blog/2019/08/21/mysql-lock/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>锁</strong>：是计算机协调多个进程或线程并发访问某一资源的机制。</p>
<p><strong>MySQL锁机制</strong>：相对其他数据库而言，MySQL 的锁机制比较简单，其最显著的特点是不同的存储引擎支持不同的锁机制。MyISAM 和 MEMORY 存储引擎采用的是表级锁（table-level locking）；InnoDB 存储引擎既支持行级锁（row-level locking），也支持表级锁，但默认情况下是采用行级锁。</p>
<p>①  表级锁：开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高,并发度最低。  </p>
<p>②  行级锁：开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低,并发度也最高。</p>
<p>从上述特点可见，很难笼统地说哪种锁更好，只能就具体应用的特点来说哪种锁更合适！仅从锁的角度来说：表级锁更适合于以查询为主，只有少量按索引条件更新数据的应用，如 Web 应用；而行级锁则更适合于有大量按索引条件并发更新少量不同数据，同时又有并发查询的应用，如一些在线事务处理（OLTP）系统。由于 BDB 已经被 InnoDB 取代，即将成为历史（所以现在基本都在使用 InnoDB 存储引擎）。</p>
<p>如何查看表锁情况？可查看两个变量：</p>
<p><strong>Table_locks_immediate</strong>：立刻获得表锁的次数</p>
<p><strong>Table_locks_waited</strong>：需要等待表锁的次数，如果等待表锁的次数占比较大，说明表锁可能是潜在瓶颈。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show status like 'Table_locks%';</span><br><span class="line">+<span class="comment">-----------------------+---------+</span></span><br><span class="line">| Variable_name         | Value   |</span><br><span class="line">+<span class="comment">-----------------------+---------+</span></span><br><span class="line">| Table_locks_immediate | 1789993 |</span><br><span class="line">| Table_locks_waited    | 0       |</span><br><span class="line">+<span class="comment">-----------------------+---------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>表级锁的两种模式：</p>
<ul>
<li><p>表共享读锁（Table Read Lock）</p>
</li>
<li><p>表独占写锁（Table Write Lock）</p>
</li>
</ul>
<h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p>如果 InnoDB_row_lock_waits 和 InnoDB_row_lock_time_avg 的值比较高，表示锁争用情况比较严重。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show status like 'InnoDB_row_lock%';</span><br><span class="line">+<span class="comment">-------------------------------+-------+</span></span><br><span class="line">| Variable_name                 | Value |</span><br><span class="line">+<span class="comment">-------------------------------+-------+</span></span><br><span class="line">| Innodb_row_lock_current_waits | 0     |</span><br><span class="line">| Innodb_row_lock_time          | 0     |</span><br><span class="line">| Innodb_row_lock_time_avg      | 0     |</span><br><span class="line">| Innodb_row_lock_time_max      | 0     |</span><br><span class="line">| Innodb_row_lock_waits         | 0     |</span><br><span class="line">+<span class="comment">-------------------------------+-------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>InnoDB 实现了一下两种类型的行锁：  </p>
<ul>
<li>共享锁(S)：允许一个事务去多一行，阻止其它事务获得相同数据集的排他锁。  </li>
<li>排他锁(X): 允许获得排他锁的事务更新数据，阻止其它事务获得相同数据集的共享锁和排他写锁。</li>
</ul>
<p>另外，为了允许行锁和表锁共存，实现多粒度锁机制，InnoDB 还有两种内部使用的意向锁（Intention Locks），这两种意向锁都是表锁。（感觉与MyISAM 的表锁机制类似）  </p>
<ul>
<li>意向共享锁（IS）：事务打算给数据行加行共享锁，事务在给一个数据行加共享锁前必须先取得该表的 IS 锁。  </li>
<li>意向排他锁（IX）：事务打算给数据行加行排他锁，事务在给一个数据行加排他锁前必须先取得该表的 IX 锁。</li>
</ul>
<p><strong>InnoDB行锁模式兼容性列表</strong>：</p>
<table>
<thead>
<tr>
<th align="left">请求锁模式矩阵结果表示是否兼容 当前锁模式</th>
<th align="left">X</th>
<th align="left">IX</th>
<th align="left">S</th>
<th align="left">IS</th>
</tr>
</thead>
<tbody><tr>
<td align="left">X</td>
<td align="left">冲突</td>
<td align="left">冲突</td>
<td align="left">冲突</td>
<td align="left">冲突</td>
</tr>
<tr>
<td align="left">IX</td>
<td align="left">冲突</td>
<td align="left">兼容</td>
<td align="left">冲突</td>
<td align="left">兼容</td>
</tr>
<tr>
<td align="left">S</td>
<td align="left">冲突</td>
<td align="left">冲突</td>
<td align="left">兼容</td>
<td align="left">兼容</td>
</tr>
<tr>
<td align="left">IS</td>
<td align="left">冲突</td>
<td align="left">兼容</td>
<td align="left">兼容</td>
<td align="left">兼容</td>
</tr>
</tbody></table>
<h3 id="死锁（DeadLock"><a href="#死锁（DeadLock" class="headerlink" title="死锁（DeadLock)"></a>死锁（DeadLock)</h3><h3 id="避免死锁的方法"><a href="#避免死锁的方法" class="headerlink" title="避免死锁的方法"></a><strong>避免死锁的方法</strong></h3><ol>
<li>在应用中，如果不同的程序会并发存取多个表，应尽量约定以相同的顺序来访问表，这样可以大大降低产生死锁的机会。在下面的例子中，由于两个 session 访问两个表的顺序不同，发生死锁的机会就非常高！但如果以相同的顺序来访问，死锁就可以避免。  </li>
<li>在程序以批量方式处理数据的时候，如果事先对数据排序，保证每个线程按固定的顺序来处理记录，也可以大大降低出现死锁的可能。  </li>
<li>在事务中，如果要更新记录，应该直接申请足够级别的锁，即排他锁，而不应先申请共享锁，更新时再申请排他锁，因为当用户申请排他锁时，其他事务可能又已经获得了相同记录的共享锁，从而造成锁冲突，甚至死锁。  </li>
<li>在 REPEATABLE-READ 隔离级别下，如果两个线程同时对相同条件记录用 SELECT…FOR UPDATE 加排他锁，在没有符合该条件记录情况下，两个线程都会加锁成功。程序发现记录尚不存在，就试图插入一条新记录，如果两个线程都这么做，就会出现死锁。这种情况下，将隔离级别改成 READ COMMITTED，就可避免问题。  </li>
<li>当隔离级别为 READ COMMITTED 时，如果两个线程都先执行 SELECT…FOR UPDATE，判断是否存在符合条件的记录，如果没有，就插入记录。此时，只有一个线程能插入成功，另一个线程会出现锁等待，当第 1 个线程提交后，第 2 个线程会因主键重出错，但虽然这个线程出错了，却会获得一个排他锁！这时如果有第 3 个线程又来申请排他锁，也会出现死锁。</li>
</ol>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>数据仓库</title>
    <url>/blog/2019/07/31/data-warehouse/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>意义</strong>：</p>
<p><img src="/blog/.io//raohui/Pictures/2019-08-28-134124.png" alt></p>
<p><strong>作用</strong>：</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134125.png" alt></p>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="数据中心"><a href="#数据中心" class="headerlink" title="数据中心"></a>数据中心</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134126.png" alt></p>
<ul>
<li><p><strong>DB</strong>：数据来源，可以为MySQL、SQLserver、文件日志等。</p>
</li>
<li><p><strong>ETL</strong>：将数据从来源迁移到目标的几个过程，抽取、转换、加载三个过程。</p>
</li>
<li><p><strong>ODS</strong>：操作性数据，作为数据库到数据仓库的一种过渡。</p>
</li>
<li><p><strong>DW</strong> ：数据仓库，数据的归宿，这些数据一般不会被修改。</p>
</li>
<li><p><strong>DM</strong>：数据集市，从数据仓库中独立出来的一部分数据，也可称为部门数据或主题数据，面向应用。</p>
</li>
</ul>
<h3 id="数据库-vs-数据仓库"><a href="#数据库-vs-数据仓库" class="headerlink" title="数据库 vs 数据仓库"></a>数据库 vs 数据仓库</h3><ul>
<li><strong>数据库：</strong>任何结构化数据集合，允许用户访问和管理数据库。</li>
<li><strong>数据仓库</strong>：面向主题的，集成的，相对稳定的，反映历史变化的数据集合，用于支持管理决策。</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134127.png" alt></p>
<p>百度数据仓库服务 <a href="http://di.baidu.com/product/palo" target="_blank" rel="noopener">Palo</a></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134128.png" alt></p>
<h2 id="主流数据仓库"><a href="#主流数据仓库" class="headerlink" title="主流数据仓库"></a>主流数据仓库</h2><ul>
<li><a href="https://www.teradata.com.cn/" target="_blank" rel="noopener">Teradata</a>：连续 15 年 Gartner 领导者象限</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134128.jpg" alt></p>
<ul>
<li><a href="http://hive.apache.org/" target="_blank" rel="noopener">Hive</a>：</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134129.jpg" alt></p>
<p>确切地说，Hive 是基于 Hadoop 的数据仓库工具，可以对存储在 <strong>HDFS</strong> 上的文件数据集进行查询和分析处理。Hive 对外提供了类似于 SQL 语言的查询语言 HiveQL，在做查询时将 HQL 语句转换成 <strong>MapReduce</strong> 任务，在Hadoop 层进行执行。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134130.png" alt></p>
<ul>
<li><p><strong>HDFS</strong>：Hadoop 的分布式文件系统，在这里作为数据仓库的存储层。图中的 Data Node 就是 HDFS 的众多工作节点。</p>
</li>
<li><p><strong>MapReduce</strong>：一种针对海量数据的并行计算模型，可以简单理解为对多个数据分片的数据转换和合并。</p>
</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134131.png" alt></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p><strong>1. 主题性</strong>：不同于传统数据库对应于某一个或多个项目，数据仓库根据使用者实际需求，将不同数据源的数据在一个较高的抽象层次上做整合，所有数据都围绕某一<strong>主题</strong>来组织</p>
<p><strong>2. 集成性</strong>：数据仓库中存储的数据是来源于多个数据源的集成，原始数据来自不同的数据源，存储方式各不相同。要整合成为最终的数据集合，需要从数据源经过一系列抽取、清洗、转换的过程。</p>
<p><strong>3. 稳定性</strong>：数据仓库中保存的数据是一系列历史快照，不允许被修改。用户只能通过分析工具进行查询和分析。</p>
<p><strong>4. 时变性</strong>：数据仓库会定期接收新的集成数据，反应出最新的数据变化。这和特点并不矛盾。</p>
<p>数据仓库架构图</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134132.png" alt></p>
<p><a href="https://bigdata.163yun.com/mammut" target="_blank" rel="noopener">网易猛犸</a></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134133.png" alt></p>
<p>数据仓库建设</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134134.png" alt></p>
<ul>
<li><a href="https://segmentfault.com/a/1190000012822942" target="_blank" rel="noopener">数据仓库简述</a></li>
<li><a href="https://segmentfault.com/a/1190000017287122" target="_blank" rel="noopener">为什么建设数据仓库？</a></li>
<li><a href="https://segmentfault.com/a/1190000017194045" target="_blank" rel="noopener">如何搭建企业数据仓库</a>？</li>
<li><a href="https://segmentfault.com/a/1190000019499144" target="_blank" rel="noopener">宜人贷实践</a></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>2019 年书单</title>
    <url>/blog/2019/07/31/mysql-ilearning/</url>
    <content><![CDATA[<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><ul>
<li><p><a href="https://book.douban.com/subject/3354490/" target="_blank" rel="noopener">《MySQL 必知必会》</a></p>
</li>
<li><p><a href="https://dev.mysql.com/doc/refman/5.7/en/" target="_blank" rel="noopener">《MySQL 官方手册》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/30376056/" target="_blank" rel="noopener">《MySQL 8 Cookbook（中文版）》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/23008813/" target="_blank" rel="noopener">《高性能MySQL（第3版）》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/24708143/" target="_blank" rel="noopener">《MySQL技术内幕：InnoDB存储引擎（第2版）》</a></p>
</li>
</ul>
<h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><ul>
<li><p><a href="https://book.douban.com/subject/3652388/" target="_blank" rel="noopener">《程序员的自我修养》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/5387402/" target="_blank" rel="noopener">《程序员的修炼之道》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/1477390/" target="_blank" rel="noopener">《代码大全》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/3004255/" target="_blank" rel="noopener">《编程之美》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/3227098/" target="_blank" rel="noopener">《编程珠玑》</a></p>
</li>
<li><p><a href="https://book.douban.com/subject/4262627/" target="_blank" rel="noopener">《重构》</a></p>
</li>
</ul>
<h2 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h2><ul>
<li><a href="https://book.douban.com/subject/1230413/" target="_blank" rel="noopener">《深入理解计算机系统》</a></li>
<li><a href="https://book.douban.com/subject/24737674/" target="_blank" rel="noopener">《图解TCP/IP》</a> </li>
</ul>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><ul>
<li><a href="https://book.douban.com/subject/1786387/" target="_blank" rel="noopener">《影响力》</a></li>
<li><a href="https://book.douban.com/subject/6709809/" target="_blank" rel="noopener">《暗时间》</a></li>
</ul>
<h2 id="修炼"><a href="#修炼" class="headerlink" title="修炼"></a>修炼</h2><p><strong>工程师 - 高级工程师 - 技术专家 - 初级架构师 - 中级架构师 - 高级架构师</strong></p>
<p><strong>工程师阶段</strong>：基础技能积累阶段（基础知识、编程语言、编程工具）</p>
<p><strong>高级工程师</strong>：积累方案设计经验并能独立完成开发（需求设计、方案设计、编码实现）</p>
<p><strong>技术专家</strong>：拓展技术宽度</p>
<p><strong>初级架构师</strong>：能够独立完成一个系统的架构设计</p>
<p><strong>中级架构师</strong>：能够完成复杂系统的架构设计</p>
<p><strong>高级架构师</strong>：创造新的架构模式</p>
<p><strong>软件发布全流程</strong></p>
<ul>
<li>需求分析（需求梳理 =&gt; 产品定义）</li>
<li>系统设计（子系统划分 =&gt; 模块定义）</li>
<li>模块设计（模块详细设计）</li>
<li>编码实现</li>
<li>单元测试</li>
<li>代码评审</li>
<li>集成测试</li>
<li>灰度发布</li>
<li>正式发布</li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · DBA 工具</title>
    <url>/blog/2019/07/31/mysql-tools/</url>
    <content><![CDATA[<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p><a href="https://www.heidisql.com/" target="_blank" rel="noopener">HeidiSQL</a></p>
<p><a href="https://www.navicat.com.cn/products/navicat-for-mysql" target="_blank" rel="noopener">Navicat</a></p>
<p><a href="http://www.sequelpro.com/" target="_blank" rel="noopener">Sequel Pro</a></p>
<p><a href="http://www.mysql.com/products/workbench/" target="_blank" rel="noopener">MySQL Workbench</a></p>
<h2 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h2><p><a href="http://www.percona.com/software/percona-toolkit" target="_blank" rel="noopener">Percona-Toolkit</a></p>
<p><a href="https://huiraoo.github.io/blog/2019/06/18/mysql-xtrabackup/">XtraBackup</a></p>
<h2 id="压测"><a href="#压测" class="headerlink" title="压测"></a>压测</h2><p><a href="https://github.com/akopytov/sysbench" target="_blank" rel="noopener">sysbench</a></p>
<p><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqlslap.html" target="_blank" rel="noopener">mysqlslap</a></p>
<p><a href="https://github.com/Percona-Lab/tpcc-mysql" target="_blank" rel="noopener">tpcc-mysql</a></p>
<h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p><a href="https://downloads.mysql.com/archives/proxy/" target="_blank" rel="noopener">MySQL Proxy</a></p>
<p><a href="https://github.com/Qihoo360/Atlas" target="_blank" rel="noopener">Atlas</a></p>
<p><a href="http://www.mycat.io/" target="_blank" rel="noopener">Mycat</a></p>
<h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p><a href="https://redash.io/" target="_blank" rel="noopener">Redash</a></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · SQL 审核工具对比</title>
    <url>/blog/2019/07/26/mysql-examine/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th></th>
<th>SOAR</th>
<th>sqlcheck</th>
<th>pt-query-advisor</th>
<th>SQL Advisor</th>
<th>Inception</th>
<th>sqlautoreview</th>
</tr>
</thead>
<tbody><tr>
<td>启发式建议</td>
<td>√</td>
<td>√</td>
<td>√</td>
<td>×</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>索引建议</td>
<td>√</td>
<td>×</td>
<td>×</td>
<td>√</td>
<td>×</td>
<td>√</td>
</tr>
<tr>
<td>查询重写</td>
<td>√</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
</tr>
<tr>
<td>执行计划展示</td>
<td>√</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
</tr>
<tr>
<td>Profiling</td>
<td>√</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
</tr>
<tr>
<td>Trace</td>
<td>√</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
</tr>
<tr>
<td>SQL在线执行</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>√</td>
<td>×</td>
</tr>
<tr>
<td>数据备份</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>×</td>
<td>√</td>
<td>×</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 最佳实践</title>
    <url>/blog/2019/07/25/mysql-best-practices/</url>
    <content><![CDATA[<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ul>
<li><a href="https://huiraoo.github.io/blog/2019/10/17/mysql-archiver/">MySQL · 数据归档</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/21/mysql-delete-bigtable/">MySQL · 快速删除大表</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/21/mysql-modify-dbname/">MySQL · 修改数据库名</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/19/pt-online-schema-change/">MySQL · 在线修改索引</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/21/mysql-rollback/">MySQL · 使用 binlog2sql 工具快速回滚误操作</a></li>
<li><a href="https://huiraoo.github.io/blog/2019/10/22/mysql-migration/">MySQL · 使用 XtraBackup 迁移数据库</a></li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 简介</title>
    <url>/blog/2019/07/25/mysql-guide/</url>
    <content><![CDATA[<h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><ul>
<li>1979年，Monty Widenius 写了最初的版本</li>
<li>1996年，发布 1.0 版本</li>
<li>1995-2000年，MySQL AB 成立</li>
<li>2000年4月，集成 MyISAM 和 Replication</li>
<li>2001年，Heikki Tuuri 向 MySQL 建议集成 InnoDB</li>
<li>2005年，发布 5.0 版本（提供了视图、存储过程等功能）</li>
<li><strong>2008年，MySQL AB 被 Sun 收购，出价 10 亿美元</strong></li>
<li><strong>2009年，推出 5.1 版本，同年 4 月，Oracle 收购 Sun</strong></li>
<li>2010年12月，推出 5.5 GA 版本，InnoDB 改为默认存储引擎</li>
<li>2013年2月，推出 5.6 GA 版本</li>
<li>2015年10月，推出 5.7 GA 版本</li>
<li>2018年5月，推出 8.0 GA 版本</li>
</ul>
<h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p><strong>优点</strong></p>
<ul>
<li>免费</li>
<li>开源（源码、社区工具丰富）</li>
<li>简单（部署简单、门槛低、上手快）</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>优化器对复杂 SQL 支持不好</li>
<li>大规模集群方案不成熟，主要指中间件</li>
<li>备份和恢复方案还是比较复杂，需要依赖外部组件</li>
<li>缺少分库分表解决方案</li>
</ul>
<h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><ul>
<li>MySQL 社区版</li>
<li>Percona</li>
<li>MariaDB</li>
<li>MySQL 企业版</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>MySQL Standard Edition</th>
<th>MySQL Enterprise Edition</th>
<th>MySQL Cluster CGE</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.mysql.com/cn/support/" target="_blank" rel="noopener"><strong>Oracle Premier Support</strong></a></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>24x7 Support</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Unlimited Support Incidents</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Knowledge Base</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Maintenance Releases</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/support/consultative.html" target="_blank" rel="noopener">MySQL Consultative Support</a></td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Features</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/database/" target="_blank" rel="noopener">MySQL Database Server</a></td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/document_store.html" target="_blank" rel="noopener">MySQL Document Store</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/connector/" target="_blank" rel="noopener">MySQL Connectors</a></td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/replication.html" target="_blank" rel="noopener">MySQL Replication</a></td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/router.html" target="_blank" rel="noopener">MySQL Router</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://dev.mysql.com/doc/refman/5.7/en/partitioning.html" target="_blank" rel="noopener">MySQL Partitioning</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Workbench</strong></td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Storage Engine: MyISAM</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Storage Engine: InnoDB</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Storage Engine: NDB</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Enterprise Monitor</strong></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>MySQL Enterprise Dashboard</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>MySQL Enterprise Advisors</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>MySQL Query Analyzer</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>MySQL Replication Monitor</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Enterprise Backup</strong></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Hot backup for InnoDB</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Full, Incremental, Partial, Optimistic Backups</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Full, Partial, Selective, Hot Selective restore</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Encryption and Compression</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Point-In-Time-Recovery</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Enterprise Security</strong></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/security.html" target="_blank" rel="noopener">MySQL Enterprise Authentication</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/tde.html" target="_blank" rel="noopener">MySQL Enterprise TDE</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/encryption.html" target="_blank" rel="noopener">MySQL Enterprise Encryption</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/masking.html" target="_blank" rel="noopener">MySQL Enterprise Masking</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/firewall.html" target="_blank" rel="noopener">MySQL Enterprise Firewall</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/enterprise/audit.html" target="_blank" rel="noopener">MySQL Enterprise Audit</a></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Enterprise Scalability</strong></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Thread Pool</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Enterprise High-Availability</strong></td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>MySQL Group Replication</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>MySQL InnoDB Cluster</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td><strong>MySQL Cluster Manager</strong></td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr>
<td>Configuration &amp; Provisioning</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr>
<td>Automatic Scaling</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr>
<td>Management &amp; Monitoring</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr>
<td><a href="https://www.mysql.com/cn/products/cluster/" target="_blank" rel="noopener">MySQL Cluster Geo-Replication</a></td>
<td></td>
<td></td>
<td>√</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 分库分表</title>
    <url>/blog/2019/07/24/mysql-split/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>当数据库的数据量非常大时，<strong>水平切分</strong>和<strong>垂直拆分</strong>是两种常见的降低数据库大小，提升性能的方法。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">user</span><br><span class="line">(</span><br><span class="line">uid bigint,</span><br><span class="line">name varchar(16),</span><br><span class="line">pass varchar(16),</span><br><span class="line">age int,</span><br><span class="line">sex tinyint,</span><br><span class="line">flag tinyint,</span><br><span class="line">sign varchar(64),</span><br><span class="line">intro varchar(256)</span><br><span class="line">…);</span><br></pre></td></tr></table></figure>

<p><strong>水平切分</strong>：以某个字段为依据（例如 <code>uid</code>），按照一定规则（例如取模），将一个库（表）上的数据拆分到多个库（表）上，以降低单库（表）大小，达到提升性能的目的的方法，水平切分后，各个库（表）的特点是：</p>
<ul>
<li>每个库（表）的<strong>结构</strong>都一样</li>
<li>每个库（表）的<strong>数据</strong>都不一样，没有交集</li>
<li>所有库（表）的并集是全量数据</li>
</ul>
<p><strong>垂直拆分</strong>：将一个属性较多，一行数据较大的表，将不同的属性拆分到不同的表中，以降低单库（表）大小，达到提升性能的目的的方法，垂直切分后，各个库（表）的特点是：</p>
<ul>
<li>每个库（表）的<strong>结构</strong>都不一样</li>
<li>一般来说，每个库（表）的<strong>属性</strong>至少有一列交集，一般是主键</li>
<li>所有库（表）的并集是全量数据</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">user_base</span><br><span class="line">(</span><br><span class="line">uid bigint,</span><br><span class="line">name varchar(16),</span><br><span class="line">pass varchar(16),</span><br><span class="line">age int,</span><br><span class="line">sex tinyint,</span><br><span class="line">flag tinyint,</span><br><span class="line">…);</span><br><span class="line"></span><br><span class="line">user_ext</span><br><span class="line">(</span><br><span class="line">uid bigint,</span><br><span class="line">sign varchar(64),</span><br><span class="line">intro varchar(256)</span><br><span class="line">…);</span><br></pre></td></tr></table></figure>

<p><strong>拆分原则</strong>：</p>
<p>①  将长度较短，访问频率较高的属性尽量放在一个表里，这个表暂且称为<strong>主表</strong>。</p>
<p>②  将字段较长，访问频率较低的属性尽量放在一个表里，这个表暂且称为<strong>扩展表。</strong></p>
<h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><ul>
<li>原则零：能不分就不分</li>
<li>原则一：数据量太大，正常的运维影响正常的业务访问</li>
<li>原则二：表设计不合理，需要对某些字段进行垂直拆分</li>
<li>原则三：某些数据表出现了无穷增长的情况</li>
<li>原则四：安全性和可用性的考虑</li>
<li>原则五：业务耦合性考虑</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>①  <strong>水平拆分</strong>和<strong>垂直拆分</strong>都是降低数据量大小，提升数据库性能的常见手段</p>
<p>②  流量大数据量大时，<strong>数据访问要有 service 层</strong>，并且 service 层不要通过 <code>join</code> 来获取主表和扩展表的属性</p>
<p>③  <strong>垂直拆分的依据</strong>，尽量把长度较短，访问频率较高的属性放在主表里</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 备份恢复</title>
    <url>/blog/2019/07/24/mysql-backup/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>物理备份：直接备份数据库的数据文件，适用于大数据量，需要快速恢复的数据库。</p>
<p>逻辑备份：备份数据库中数据结构和内容的SQL语句，适用于较小数据量或是跨版本的数据库备份恢复。</p>
<p>目前备份方式的几个纬度：</p>
<ul>
<li>全量备份 VS 增量备份</li>
<li>热备 VS 冷备</li>
<li>物理备份 VS 逻辑备份</li>
<li>延时备份</li>
<li>全量binlog备份</li>
</ul>
<p>建议方式：</p>
<ul>
<li>热备＋物理备份</li>
<li>核心业务：延时备份＋逻辑备份</li>
<li>全量binlog备份</li>
</ul>
<p>主要做的几点：</p>
<ul>
<li>备份策略集中式调度管理</li>
<li>xtrabackup热备</li>
<li>备份结果统计分析</li>
<li>备份数据一致性校验</li>
<li>采用分布式文件系统存储备份</li>
</ul>
<p>备份系统采用分布式文件系统原因：</p>
<ul>
<li>解决存储分配的问题</li>
<li>解决存储NFS备份效率低下问题</li>
<li>存储集中式管理</li>
<li>数据可靠性更好</li>
</ul>
<h2 id="备份方案"><a href="#备份方案" class="headerlink" title="备份方案"></a>备份方案</h2><ul>
<li>mysqldump</li>
<li>XtraBackup</li>
</ul>
<h2 id="恢复实践"><a href="#恢复实践" class="headerlink" title="恢复实践"></a>恢复实践</h2><p><strong>关于备份，binlog备份自然不用说了，物理备份有很多方式，有没有推荐的一种，逻辑备份在量大的时候恢复速度比较慢，一般用在什么场景？</strong></p>
<p>物理备份采用xtrabackup热备方案比较好。逻辑备份一般用在单表恢复效果会非常好。比如你删了一个2G表，但你总数据量2T，用物理备份就会要慢了，逻辑备份就非常有用了。</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 开发规范</title>
    <url>/blog/2019/07/23/mysql-rules/</url>
    <content><![CDATA[<h2 id="库表规范"><a href="#库表规范" class="headerlink" title="库表规范"></a>库表规范</h2><ul>
<li><p>存储引擎必须使用 <code>InnoDB</code></p>
</li>
<li><p>库名、表名、字段名必须用小写，采用下划线分隔</p>
</li>
<li><p>表字符集默认使用 <code>utf8</code>，必要时候使用 <code>utf8mb4</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 通用，无乱码风险，汉字<span class="number">3</span>字节，英文<span class="number">1</span>字节</span><br><span class="line">② utf8mb4是utf8的超集，存储<span class="number">4</span>字节，例如：表情符号时使用它</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁止使用存储过程、视图、触发器、事件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 对数据库性能影响较大，能让站点层和服务层干的事情，不要交到数据库层</span><br><span class="line">② 难以调试和扩展，更没有移植性</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁止在数据库中存储大文件</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 例如照片，可以将大文件存储在对象存储系统，数据库中存储路径</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁止使用 <code>text</code>、<code>blob</code> 类型</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 会浪费更多的磁盘和内存空间，非必要的大量的大字段查询会淘汰掉热数据，导致内存命中率急剧降低，影响数据库性能</span><br></pre></td></tr></table></figure>
</li>
<li><p>根据业务区分使用 <code>tinyint</code>（1 byte）、<code>smallint</code>（2 byte）、<code>int</code>（4 byte）、<code>bigint</code>（8 byte）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 合适的字符存储长度，不但节约数据库表空间，节约索引存储，更重要的是提升检索速度</span><br><span class="line">② 整数类型指定显示宽度，例如：int(M)对大多数应用是没有意义的，他不会限制值的合法范围，对于存储和计算来说，int(<span class="number">1</span>)和int(<span class="number">20</span>)是相同的</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>对象</th>
<th>年龄区间</th>
<th>类型</th>
<th>范围</th>
<th>字节</th>
</tr>
</thead>
<tbody><tr>
<td>人</td>
<td>150岁之内</td>
<td>unsigned tinyint</td>
<td>0～255</td>
<td>1</td>
</tr>
<tr>
<td>龟</td>
<td>数百岁</td>
<td>unsigned smallint</td>
<td>0～65535</td>
<td>2</td>
</tr>
<tr>
<td>恐龙化石</td>
<td>数千万岁</td>
<td>unsigned int</td>
<td>0～4294967295</td>
<td>4</td>
</tr>
<tr>
<td>太阳</td>
<td>约50亿年</td>
<td>unsigned bigint</td>
<td>0～2^64-1</td>
<td>8</td>
</tr>
</tbody></table>
</li>
<li><p>根据业务区分使用 <code>char</code>、<code>varchar</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 字段长度固定，或者长度近似的业务场景，适合使用char，能够减少碎片，查询性能高</span><br><span class="line">② 字段长度相差较大，或者更新较少的业务场景，适合使用varchar，节省磁盘空间</span><br></pre></td></tr></table></figure>
</li>
<li><p>根据业务区分使用 <code>datetime</code>、<code>timestamp</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 前者占用<span class="number">8</span>个字节，后者占用<span class="number">4</span>个字节，存储年使用YEAR，存储日期使用DATE，存储时间使用datetime</span><br></pre></td></tr></table></figure>
</li>
<li><p>小数类型使用 <code>decimal</code>，禁止使用 <code>float</code> 和 <code>double</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① float和double在存储的时候，存在精度损失的问题，很可能在值的比较时，得到不正确的结果</span><br><span class="line">② decimal(M,D)，如果M&gt;D，占用字节M+<span class="number">2</span>，否则为D+<span class="number">2</span>，M是数字最大位数，D是小数点右侧数字个数</span><br></pre></td></tr></table></figure>
</li>
<li><p>表必须有主键，推荐使用 <code>unsigned</code> 整数为主键</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 删除无主键的表，如果是row模式的主从架构，从库会挂住</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建是否概念字段，必须使用 <code>is_xxx</code> 的方式命名，数据类型是 <code>unsigned tinyint</code>（ 1表示是，0表示否）</p>
</li>
<li><p>表必备三字段：<code>id</code>，<code>gmt_create</code>，<code>gmt_modified</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① id必为主键，类型为unsigned bigint，单表时自增，步长为<span class="number">1</span></span><br><span class="line">② gmt_create, gmt_modified类型均为datetime，前者现在时表示主动创建，后者过去分词表示被动更新</span><br></pre></td></tr></table></figure>
</li>
<li><p>字段定义必须为 <code>NOT NULL</code> ，并设默认值</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① NULL列使用索引，会影响优化器选择执行计划，很难优化</span><br><span class="line">② NULL只能采用IS NULL或者IS NOT NULL，而在使用=、!=、<span class="keyword">in</span>、not <span class="keyword">in</span>时有大坑</span><br><span class="line">③ 数值默认值设置为<span class="number">0</span>，字符串默认值设置为<span class="string">''</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 <code>unsigned int</code> 存储 <code>IPv4</code>，不要用 <code>char(15)</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 节省存储空间，char(<span class="number">15</span>)占据<span class="number">16</span>个字节，unsigned int只需要<span class="number">4</span>个字节</span><br><span class="line">② int型在逻辑运算上，比char速度快</span><br><span class="line">③ ip和数字转换，函数算法：inet_aton()和inet_ntoa()</span><br><span class="line"></span><br><span class="line">mysql&gt; select inet_aton(<span class="string">'192.168.1.200'</span>);</span><br><span class="line">+----------------------------+</span><br><span class="line">| inet_aton(<span class="string">'192.168.1.200'</span>) |</span><br><span class="line">+----------------------------+</span><br><span class="line">|                 <span class="number">3232235976</span> |</span><br><span class="line">+----------------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select inet_ntoa(<span class="string">'3232235976'</span>);</span><br><span class="line">+-------------------------+</span><br><span class="line">| inet_ntoa(<span class="string">'3232235976'</span>) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| <span class="number">192.168</span>.<span class="number">1.200</span>           |</span><br><span class="line">+-------------------------+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 <code>varchar(20)</code> 存储手机号，不要使用整数</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 牵扯到国家代号，可能出现+/-/()等字符，例如+<span class="number">86</span></span><br><span class="line">② 手机号不会用来做数学运算</span><br><span class="line">③ varchar可以模糊查询，例如：like <span class="string">'138%'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>控制单表数据量，单表数据控制在<strong>千万级</strong></p>
</li>
<li><p>测试、开发、线上数据库环境必须隔离</p>
</li>
<li><p>数据表、数据字段要有中文注释</p>
</li>
</ul>
<h2 id="SQL规范"><a href="#SQL规范" class="headerlink" title="SQL规范"></a>SQL规范</h2><ul>
<li><p>禁止使用 <code>select *</code>，只获取必要字段</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① select*会增加cpu/io/内存/带宽的消耗</span><br><span class="line">② 指定字段能有效利用索引覆盖</span><br><span class="line">③ 指定字段查询，在表结构变更时，能保证对应用程序无影响</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁止在 <code>where</code> 条件列使用函数或者表达式</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 导致不能命中索引，全表扫描</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁止负向查询，以及 <code>%</code> 开头的模糊查询</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 负向查询条件：NOT、!=、&lt;&gt;、!&lt;、!&gt;、NOT <span class="keyword">IN</span>、NOT LIKE等，会导致全表扫描</span><br><span class="line">② %开头的模糊查询，会导致全表扫描</span><br></pre></td></tr></table></figure>
</li>
<li><p>不得使用外键与级联，一切外键概念必须在应用层解决</p>
</li>
<li><p><code>count(*)</code> 会统计值为 <code>null</code> 的行，而 <code>count(列名)</code> 不会统计此列为 <code>null</code> 值的行</p>
</li>
<li><p>数据订正（<code>delete</code>、<code>update</code> 操作）时，要先 <code>select</code>，避免出现误删除，确认无误才能执行更新语句</p>
</li>
<li><p>推荐使用 <code>truncate</code>，速度比 <code>delete</code> 快，且使用的系统和事务日志资源少</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① truncate table在功能上与不带where子句的delete语句相同</span><br><span class="line">② truncate无事务且不触发trigger，有可能造成事故</span><br></pre></td></tr></table></figure>
</li>
<li><p>避免 <code>in</code> 操作，若实在避免不了，需要仔细评估 <code>in</code> 后边的集合元素数量，控制在 <code>1000</code> 个之内</p>
</li>
<li><p>推荐 <code>or</code> 改写为 <code>union</code></p>
</li>
</ul>
<h2 id="索引规范"><a href="#索引规范" class="headerlink" title="索引规范"></a>索引规范</h2><ul>
<li><p>唯一索引使用 <code>uniq_[字段名]</code> 来命名，非唯一索引使用 <code>idx_[字段名]</code> 来命名</p>
</li>
<li><p>单张表索引数量建议控制在 <code>5</code> 个以内</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 高并发业务，太多索引会影响写性能</span><br><span class="line">② 生成执行计划时，如果索引太多，会降低性能，并可能导致MySQL选择不到最优索引</span><br><span class="line">③ 异常复杂的查询需求，可以选择ES等更为适合的方式存储</span><br></pre></td></tr></table></figure>
</li>
<li><p>超过三个表禁止 <code>join</code>，需要 <code>join</code> 的字段，数据类型必须绝对一致，多表关联查询时，确保被关联的字段需要有索引</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 踩过因为join字段类型不一致，而导致全表扫描的坑</span><br></pre></td></tr></table></figure>
</li>
<li><p>禁止在更新十分频繁，区分度不高的字段建立索引</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 更新会变更B+树，更新频繁的字段建立索引会大大降低数据库性能</span><br><span class="line">② 区分度：count(distinct left(列名, 索引长度))/count(*)</span><br><span class="line">③ 性别不适合建索引</span><br></pre></td></tr></table></figure>
</li>
<li><p>理解组合索引最左前缀原则，避免重复建索引，如果建了 <code>(a,b,c)</code>，相当于建了 <code>(a)</code>，<code>(a,b)</code>，<code>(a,b,c)</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① 示例：where a=? and b=? order by c; 索引：a_b_c</span><br><span class="line">② 存在非等号和等号混合判断条件时，在建索引时把等号条件的列前置。如：where a&gt;? and b=? 那么即使a的区分度更高，也必须把b放在索引的最前列</span><br></pre></td></tr></table></figure>
</li>
<li><p>避免因字段类型不同造成的隐式转换，导致索引失效</p>
</li>
<li><p>SQL性能优化的目标：至少要达到 <code>range</code> 级别，要求是 <code>ref</code> 级别，如果可以是 <code>consts</code> 最好</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">解读：</span><br><span class="line">① consts单表中最多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据</span><br><span class="line">② ref指的是使用普通的索引（normal index）</span><br><span class="line">③ range对索引进行范围检索</span><br></pre></td></tr></table></figure>

</li>
</ul>
<blockquote>
<p><strong>参考</strong></p>
</blockquote>
<p>《<a href="https://mp.weixin.qq.com/s/YfCORbcCX1hymXBCrZbAZg" target="_blank" rel="noopener"><strong>58到家 · MySQL军规</strong></a>》</p>
<p>《<a href="https://www.cntofu.com/book/78/p3c-gitbook/" target="_blank" rel="noopener"><strong>阿里巴巴 · Java开发手册</strong></a>》</p>
<p>​    </p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 基本原理</title>
    <url>/blog/2019/07/23/mysql-principle/</url>
    <content><![CDATA[<h2 id="体系架构"><a href="#体系架构" class="headerlink" title="体系架构"></a>体系架构</h2><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134135.png" alt></p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1g5te8biz9hj30ne0fj404.jpg" alt="img"></p>
<h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><code>InnoDB</code> 存储引擎可将所有数据存放于 <code>ibdata*</code> 的共享表空间，也可将每张表存放于独立的 <code>.ibd</code> 文件的独立表空间。共享表空间以及独立表空间都是针对数据的存储方式而言的。</p>
<p><strong>共享表空间:</strong>  某一个数据库的所有的表数据，索引文件全部放在一个文件中，默认这个共享表空间的文件路径在 <code>data</code> 目录下， 默认的文件名为 <code>ibdata1</code>，初始化为 <code>10M</code>。</p>
<p><strong>独立表空间:</strong>  每一个表都将会生成以独立的文件方式来进行存储，每一个表都有一个 <code>.frm</code> 表描述文件，还有一个 <code>.ibd</code> 文件。 其中这个文件包括了单独一个表的数据内容以及索引内容，默认情况下它的存储位置也是在表的位置之中。</p>
<h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p><strong>共享表空间</strong></p>
<p><strong>优点：</strong>可以将表空间分成多个文件存放到各个磁盘上（表空间文件大小不受表大小的限制，如一个表可以分布在不同的文件上），数据和文件放在一起方便管理。</p>
<p><strong>缺点</strong>：所有的数据和索引存放到一个文件中，虽然可以把一个大文件分成多个小文件，但是多个表及索引在表空间中混合存储，这样对于一个表做了大量删除操作后表空间中将会有大量的空隙，特别是对于统计分析这类应用最不适合用共享表空间。</p>
<p><strong>独立表空间</strong>：在配置文件（<code>my.cnf</code>）中设置 <code>innodb_file_per_table</code></p>
<p><strong>优点：</strong></p>
<ul>
<li>每个表都有自已独立的表空间。</li>
<li>每个表的数据和索引都会存在自已的表空间中。</li>
<li>可以实现单表在不同的数据库中移动。</li>
<li>空间可以回收（除 drop table 操作处，表空不能自已回收）。</li>
</ul>
<p><strong>缺点</strong></p>
<ul>
<li>单表增加过大，如超过100G。</li>
<li>相比较之下，使用独占表空间的效率以及性能会更高一点。</li>
</ul>
<h3 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h3><table>
<thead>
<tr>
<th>Command-Line Format</th>
<th><code>--innodb_file_per_table</code></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>System Variable</td>
<td>Name</td>
<td><code>innodb_file_per_table</code></td>
</tr>
<tr>
<td>Variable Scope</td>
<td>Global</td>
<td></td>
</tr>
<tr>
<td>Dynamic Variable</td>
<td>Yes</td>
<td></td>
</tr>
<tr>
<td><strong>Permitted Values (&lt;= 5.6.5)</strong></td>
<td>Type</td>
<td><code>boolean</code></td>
</tr>
<tr>
<td>Default</td>
<td><code>OFF</code></td>
<td></td>
</tr>
<tr>
<td><strong>Permitted Values (&gt;= 5.6.6)</strong></td>
<td>Type</td>
<td><code>boolean</code></td>
</tr>
<tr>
<td>Default</td>
<td><code>ON</code></td>
<td></td>
</tr>
</tbody></table>
<p>修改 InnoDB 数据存储方式：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; set global innodb_file_per_table =ON;  </span><br><span class="line">mysql&gt; show variables like '%per_table%';  </span><br><span class="line">+<span class="comment">-----------------------+-------+  </span></span><br><span class="line">| Variable_name         | Value |  </span><br><span class="line">+<span class="comment">-----------------------+-------+  </span></span><br><span class="line">| innodb_file_per_table | ON    |  </span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br></pre></td></tr></table></figure>

<p>想要将共享表空间转化为独立表空间有两种方法：    </p>
<ol>
<li><p>先逻辑备份，然后修改配置文件 <code>my.cnf</code> 中的参数 <code>innodb_file_per_table</code> 参数为 <code>1</code>，重启服务后将逻辑备份导入即可。    </p>
</li>
<li><p>修改配置文件 <code>my.cnf</code> 中的参数 <code>innodb_file_per_table</code> 参数为 <code>1</code>，重启服务后将需要修改的所有 <code>innodb</code> 表都执行一遍：<code>alter table table_name engine=innodb;</code> 使用第二种方式修改后，原来库中的表中的数据会继续存放于 <code>ibdata1</code> 中，新建的表才会使用独立表空间。</p>
</li>
</ol>
<h3 id="操作实战"><a href="#操作实战" class="headerlink" title="操作实战"></a>操作实战</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导出所有数据</span></span><br><span class="line">mysqldump -u &lt;user&gt; -p &lt;password&gt; --all-databases --master-data=<span class="number">2</span> --single-transaction &gt; backup.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有数据库 </span></span><br><span class="line">drop database database_N</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止MySQL服务</span></span><br><span class="line">service mysql stop  / service mariadb stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件 ibdata1, ib_logfile0, ib_logfile1</span></span><br><span class="line">rm -rf xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改MySQL配置文件/etc/my.cnf，增加或修改如下：</span></span><br><span class="line">[mysqld]</span><br><span class="line">innodb_file_per_table=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启MySQL服务</span></span><br><span class="line">service mysql start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入备份数据</span></span><br><span class="line">mysql -u &lt;user&gt; -p &lt;password&gt; &lt; backup.sql</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>浅谈数据库设计</title>
    <url>/blog/2019/07/22/db-design/</url>
    <content><![CDATA[<h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><p><strong>设计原则</strong>：在数据冗余和处理速度之间找到合适的平衡点。</p>
<ul>
<li><p>数据库表个数越少越好。</p>
</li>
<li><p>表中组合主键的字段个数越少越好。主键的作用，一是建主键索引，二是做为子表的外键，所以组合主键的字段个数少了，不仅节省了运行时间，而且节省了索引存储空间。</p>
</li>
<li><p>3）一个表中的字段个数越少越好。</p>
</li>
</ul>
<p><strong>设计模式</strong></p>
<ul>
<li><p>逻辑设计：根据数据实体之间的逻辑关系对表进行设计。</p>
</li>
<li><p>物理设计：根据所使用的数据库特点进行表结构设计。</p>
</li>
</ul>
<p><strong>范式设计</strong></p>
<ul>
<li><strong>第一范式</strong>：是对属性的原子性约束，要求属性具有原子性，不可再分解。</li>
<li><strong>第二范式</strong>：是对记录的惟一性约束，要求记录有惟一标识，即实体的惟一性。</li>
<li><strong>第三范式</strong>：是对字段冗余性的约束，即任何字段不能由其他字段派生出来，它要求字段没有冗余。</li>
</ul>
<p>基本表及其字段之间的关系，应尽量满足第三范式。但是，满足第三范式的数据库设计，往往不是最好的设计。为了提高数据库的运行效率，常常需要降低范式标准，适当增加冗余，达到以空间换时间的目的。</p>
<h3 id="逻辑设计"><a href="#逻辑设计" class="headerlink" title="逻辑设计"></a>逻辑设计</h3><p>E-R 模型图：结构清晰、关联简洁、实体个数适中、属性分配合理、没有低级冗余</p>
<h3 id="物理设计"><a href="#物理设计" class="headerlink" title="物理设计"></a>物理设计</h3><h4 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h4><table>
<thead>
<tr>
<th>数据库类型</th>
<th>成本</th>
<th>开发语言</th>
<th>支持系统</th>
<th>业务场景</th>
</tr>
</thead>
<tbody><tr>
<td>Oracle</td>
<td>商业型</td>
<td>php，java，python等</td>
<td>windows/liunx系统</td>
<td>企业级</td>
</tr>
<tr>
<td>SQLServer</td>
<td>商业型</td>
<td>.NET，C#等</td>
<td>只支持windows系统</td>
<td>企业级</td>
</tr>
<tr>
<td>MySQL</td>
<td>开源型</td>
<td>php，java，python等</td>
<td>windows/liunx系统</td>
<td>中小型</td>
</tr>
<tr>
<td>PgSQL</td>
<td>开源型</td>
<td>php，java，python等</td>
<td>windows/liunx系统</td>
<td>中小型</td>
</tr>
</tbody></table>
<h4 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h4><table>
<thead>
<tr>
<th>存储引擎</th>
<th>索引</th>
<th>事务</th>
<th>锁粒度</th>
<th>主要应用</th>
<th>忌用</th>
</tr>
</thead>
<tbody><tr>
<td>MyISAM</td>
<td>支持</td>
<td>不支持</td>
<td>支持并发插入的表级锁</td>
<td>select，insert高负载</td>
<td>读写并用</td>
</tr>
<tr>
<td>InnoDB</td>
<td>支持</td>
<td>支持</td>
<td>支持MVCC的行级锁</td>
<td>事务处理</td>
<td>无</td>
</tr>
<tr>
<td>MEMORY</td>
<td>支持</td>
<td>不支持</td>
<td>表锁</td>
<td>中间计算，静态数据</td>
<td>大型数据集，持久性存储</td>
</tr>
<tr>
<td>Archive</td>
<td>不支持</td>
<td>不支持</td>
<td>行级锁</td>
<td>日志记录，聚合分析，只支持select，insert操作</td>
<td>随机读取，删除</td>
</tr>
</tbody></table>
<h4 id="字段选择"><a href="#字段选择" class="headerlink" title="字段选择"></a>字段选择</h4><p><strong>char</strong> vs <strong>varchar</strong> </p>
<ul>
<li><p>char：适用于数据长度差不多一致，波动较小，最大数据长度小于50字节。</p>
</li>
<li><p>varchar：适用于数据长度变化较大，不能预知其具体长度的数据。</p>
</li>
</ul>
<p><strong>decimal</strong> vs <strong>float</strong> </p>
<ul>
<li><p>decimal：用于存储精确数据，精度最高，但是占用空间很大。</p>
</li>
<li><p>float：用于存储非精确数据，会丢失数据精度，占用空间比 decimal 小。</p>
</li>
</ul>
<p><strong>int</strong> vs <strong>timestamp</strong> vs <strong>datetime</strong> </p>
<table>
<thead>
<tr>
<th>字段类型</th>
<th>存储空间</th>
</tr>
</thead>
<tbody><tr>
<td>TINYINT</td>
<td>1 字节</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>2 字节</td>
</tr>
<tr>
<td>MEDIUMINY</td>
<td>3 字节</td>
</tr>
<tr>
<td>INT</td>
<td>4 字节</td>
</tr>
<tr>
<td>BINGINT</td>
<td>8 字节</td>
</tr>
<tr>
<td>DATE</td>
<td>3 字节</td>
</tr>
<tr>
<td>DATETIME</td>
<td>8 字节</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>4 字节</td>
</tr>
<tr>
<td>CHAR(M)</td>
<td>M 字节，1 &lt;= M &lt;= 255</td>
</tr>
<tr>
<td>VARCHAR(M)</td>
<td>L+1 字节，在此 L &lt;= M 和  1 &lt;=M &lt;= 255</td>
</tr>
<tr>
<td>FLOAT</td>
<td>4 字节</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>8 字节</td>
</tr>
<tr>
<td>DECIMAL</td>
<td>对 DECIMAL(M,D) ，如果 M&gt;D，为 M+2 否则为 D+2</td>
</tr>
</tbody></table>
<p>查询速度从快到慢如下：bigint &gt; date &gt; timestamp &gt; time &gt; datetime</p>
<h4 id="主键与外键"><a href="#主键与外键" class="headerlink" title="主键与外键"></a>主键与外键</h4><p>主键是实体的高度抽象，主键与外键的配对，表示实体之间的连接</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 开发</title>
    <url>/blog/2019/07/22/mysql-develop/</url>
    <content><![CDATA[<h2 id="百万级数据量"><a href="#百万级数据量" class="headerlink" title="百万级数据量"></a>百万级数据量</h2><p>这个阶段的性能问题开始显露，优化几乎是最重要的，因为到后期千万级，甚至亿级别的阶段，数据库几乎无法动弹，可调整性很低。</p>
<p><strong>字段优化</strong></p>
<ul>
<li>表字段 not null，因为 null 值很难查询优化且占用额外的索引空间，推荐默认数字 0</li>
<li>数据状态类型的字段，比如 status, type 等，尽量不要定义负数，如 -1。因为这样可以加上 UNSIGNED，数值容量就会扩大一倍</li>
<li>可以的话用 TINYINT、SMALLINT 等代替 INT，尽量不使用 BIGINT，因为占的空间更小</li>
<li>字符串类型的字段会比数字类型占的空间更大，所以尽量用整型代替字符串，很多场景是可以通过编码逻辑来实现用整型代替的</li>
<li>字符串类型长度不要随意设置，保证满足业务的前提下尽量小</li>
<li>用整型来存 IP</li>
<li>单表不要有太多字段，建议在20以内</li>
<li>为能预见的字段提前预留，因为数据量越大，修改数据结构越耗时</li>
</ul>
<p><strong>索引优化</strong></p>
<p>索引，空间换时间的优化策略，基本上根据业务需求设计好索引，足以应付百万级的数据量，养成使用 <strong>explain</strong> 的习惯。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">既不能绝大多数都相同，又不能只有极少数相同</span><br></pre></td></tr></table></figure>

<ul>
<li>一个常识：索引并不是越多越好，索引是会降低数据写入性能的。</li>
<li>索引字段长度尽量短，这样能够节省大量索引空间。</li>
<li>取消外键，可交由程序来约束，性能更好。</li>
<li>复合索引的匹配最左列规则，索引的顺序和查询条件保持一致，尽量去除没必要的单列索引。</li>
<li>值分布较少的字段（不重复的较少）不适合建索引，比如像性别这种只有两三个值的情况字段建立索引意义不大。</li>
<li>需要排序的字段建议加上索引，因为索引是会排序的，能提高查询性能。</li>
<li>字符串字段使用前缀索引，不使用全字段索引，可大幅减小索引空间。</li>
</ul>
<p><strong>sql优化</strong></p>
<ul>
<li><p>查询不使用 select *，尽量查询带索引的字段，避免回表</p>
</li>
<li><p>尽量使用 limit 对查询数量进行限制</p>
</li>
<li><p>查询字段尽量落在索引上，尤其是复合索引，顺序很重要</p>
</li>
<li><p>拆分大的 delete / insert 操作，一方面会锁表，影响其他业务操作，还有一方面是 MySQL 对 sql 长度也是有限制的</p>
</li>
<li><p>不建议使用 MySQL 的函数，计算等，可先由程序处理，从上面提的一些点会发现，能交由程序处理的尽量不要把压力转至数据库上</p>
</li>
<li><p>查询 count，性能：count(1) = count(*) &gt; count(主键) &gt; count(其他字段)</p>
</li>
<li><p>查询操作符能用 between 则不用 in，能用 in 则不用 or</p>
</li>
<li><p>避免使用 != 或＜＞、IS NULL 或 IS NOT NULL、IN ，NOT IN等这样的操作符，因为这些查询无法使用索引</p>
</li>
<li><p>sql 尽量简单，少用 join，不建议两个 join 以上。</p>
</li>
</ul>
<h2 id="千万级数据量"><a href="#千万级数据量" class="headerlink" title="千万级数据量"></a>千万级数据量</h2><p>到了这个阶段的数据量，数据本身已经有很大的价值了，数据除了满足常规业务需求外，还会有一些数据分析的需求。而这个时候数据可变动性不高，基本上不会考虑修改原有结构，一般会考虑从分区，分表，分库三方面做优化。</p>
<p><strong>分区</strong></p>
<p>分区是根据一定的规则，数据库把一个表分解成多个更小的、更容易管理的部分，是一种水平划分。对应用来说是完全透明的，不影响应用的业务逻辑，即不用修改代码。因此能存更多的数据，查询，删除也支持按分区来操作，从而达到优化的目的。如果有考虑分区，可以提前做准备，避免下列一些限制：</p>
<ul>
<li>一个表最多只能有1024个分区（mysql5.6之后支持8192个分区）。</li>
<li>如果分区字段中有主键或者唯一索引列，那么所有主键列和唯一索引列都必须包含进来，如果表中有主键或唯一索引，那么分区键必须是主键或唯一索引。</li>
<li>分区表中无法使用外键约束。</li>
<li>NULL值会使分区过滤无效。</li>
<li>目前mysql不支持空间类型和临时表类型进行分区。不支持全文索引。</li>
<li>所有分区必须使用相同的存储引擎。</li>
</ul>
<p>分区可按以下四种类型分区：</p>
<ul>
<li>RANGE表分区：范围表分区，按照一定的范围值来确定每个分区包含的数据;</li>
<li>LIST表分区：列表表分区，按照一个一个确定的值来确定每个分区包含的数据;</li>
<li>HASH表分区：哈希表分区，按照一个自定义的函数返回值来确定每个分区包含的数据;</li>
<li>KEY表分区 ：key表分区，与哈希表分区类似，只是用MySQL自己的HASH函数来确定每个分区包含的数据。</li>
</ul>
<p><strong>分表</strong></p>
<p>分表分水平分表和垂直分表。</p>
<p>水平分表即拆分成数据结构相同的各个小表，如拆分成 table<em>1, table</em>2…，从而缓解数据库读写压力。</p>
<p>垂直分表即将一些字段分出去形成一个新表，各个表数据结构不相同，可以优化高并发下锁表的情况。</p>
<p>可想而知，分表的话，程序的逻辑是需要做修改的，所以，一般是在项目初期时，预见到大数据量的情况，才会考虑分表。后期阶段不建议分表，成本很大</p>
<p><strong>分库</strong></p>
<p>分库一般是主从模式，一个数据库服务器主节点复制到一个或多个从节点多个数据库，主库负责写操作，从库负责读操作，从而达到主从分离，高可用，数据备份等优化目的。</p>
<p>当然，主从模式也会有一些缺陷，主从同步延迟，binlog 文件太大导致的问题等等，这里不细讲（笔者也学不动了）。</p>
<h2 id="亿级数据量"><a href="#亿级数据量" class="headerlink" title="亿级数据量"></a>亿级数据量</h2><p>理论上，MySQL 绝对是可以支撑这个级别数据的，但是现在大部分公司数据库性能水平完全取决于开发人员能力。当然一些公司有 DBA 把关，如没有上述的优化习惯，大多情况到这个阶段，MySQL 数据库性能已经接近崩溃临界点，甚至有些都到不了这个阶段。</p>
<p>技术选型</p>
<p>如何写优质的 SQL？</p>
<p>SQL 审核</p>
<p>索引设计</p>
<p>如何在一个大表添加索引？</p>
<p>是否需要产品化？</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 复制</title>
    <url>/blog/2019/07/18/mysql-duplicate/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MySQL 的复制功能是构建基于大规模、高性能应用的基础，同时也是高可用性、可扩展性、灾难恢复、备份以及数据仓库等工作的基础。</p>
<p><strong>复制能解决什么问题？</strong></p>
<p>复制解决的基本问题：是让一台服务器的数据与其他服务器保持同步。其他扩展功能：</p>
<ul>
<li>数据分布：复制的开销很小，通常不会对带宽造成很大的压力，可以通过远程复制来构建不同的数据中心。</li>
<li>负载均衡：通过复制可以将读操作分布到多个服务器上，读写分离。</li>
<li>备份：对备份来说，复制是一项很有意义的技术补充，但复制既不是备份也不能够取代备份。</li>
<li>高可用性和故障切换：复制能避免 MySQL 单点失败，设计良好的故障切换系统能显著地缩短宕机时间。</li>
</ul>
<h2 id="复制原理"><a href="#复制原理" class="headerlink" title="复制原理"></a>复制原理</h2><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134142.png" alt></p>
<p>（1）主库把数据更改记录到二进制日志（<em>Binary Log</em>）。</p>
<p>（2）备库将主库的日志复制到自己的中继日志（<em>Relay Log</em>）。</p>
<p>（3）备库读取中继日志中的事件，将其重放到备库数据之上。</p>
<p>这种架构有一个缺陷：在主库上并发运行的查询在备库只能串行化执行，因为只有一个 SQL 线程来重放中继日志中的事件，这是很多工作负载的性能瓶颈所在。</p>
<h3 id="复制方式"><a href="#复制方式" class="headerlink" title="复制方式"></a>复制方式</h3><p>MySQL支持两种复制方式：基于行的复制（MySQL 5.1版本支持）和基于语句的复制（MySQL 3.23版本支持），这两种复制方式都是通过在主库上记录二进制日志、在备库重放日志的方式来实现异步的数据复制。</p>
<p>MySQL 复制大部分是向后兼容的，对于小版本号的升级，通常也是兼容的。</p>
<h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><p><code>mysql-bin.index</code>：二进制日志的索引文件，开启二进制日志时就会产生，该文件记录磁盘上的二进制日志文件，每一行包含了二进制文件的文件名。MySQL 依赖这个文件，除非在这个文件里有记录，否则识别不了二进制日志文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ptdsmapp04 mysql]# cat mysql-bin.index</span><br><span class="line">/data/mysql/mysql-bin.000014</span><br><span class="line">/data/mysql/mysql-bin.000015</span><br><span class="line">/data/mysql/mysql-bin.000016</span><br></pre></td></tr></table></figure>

<p><code>relay-log.index</code>：中继日志的索引文件，和 mysql-bin.index 作用类似。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ptdsmapp04 mysql]# cat relay-log.index</span><br><span class="line">./relay-log.000016</span><br><span class="line">./relay-log.000017</span><br></pre></td></tr></table></figure>

<p><code>master.info</code>：这个文件用于保存备库连接到主库所需要的信息，格式为纯文本（每行一个值）。此文件不能删除，否则备库在重启后无法连接到主库。这个文件以文本的方式记录了复制用户的密码，所以要注意此文件的权限控制。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ptdsmapp04 mysql]# cat master.info </span><br><span class="line">25</span><br><span class="line">mysql-binlog.000234</span><br><span class="line">933317366</span><br><span class="line">10.133.0.51</span><br><span class="line">repl</span><br><span class="line">Changeme_123</span><br><span class="line">3306</span><br><span class="line">60</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line">30.000</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line">e1db90f2-fce1-11e8-86d2-005056b1d631</span><br><span class="line">86400</span><br><span class="line"></span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<p><code>relay-log.info</code>：这个文件包含了当前备库复制的二进制日志和中继日志坐标，同样也不能删除这个文件，否则在备库重启后将无法从哪个位置开始复制，可能会导致重放已经执行过的语句。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@ptdsmapp04 mysql]# cat relay-log.info </span><br><span class="line">7</span><br><span class="line">./relay-log.000017</span><br><span class="line">933317585</span><br><span class="line">mysql-binlog.000234</span><br><span class="line">933317366</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<h2 id="配置复制"><a href="#配置复制" class="headerlink" title="配置复制"></a>配置复制</h2><p>分为三步：</p>
<ul>
<li>每台服务器上创建复制用户</li>
<li>配置主库和备库</li>
<li>通知备库连接到主库并从主库复制数据</li>
</ul>
<h3 id="创建复制用户"><a href="#创建复制用户" class="headerlink" title="创建复制用户"></a>创建复制用户</h3><p>主库和备库都创建该用户：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>, <span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'repl'</span>@<span class="string">'x.x.x.%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'Changeme_123'</span>;</span><br></pre></td></tr></table></figure>

<h3 id="配置主库和备库"><a href="#配置主库和备库" class="headerlink" title="配置主库和备库"></a>配置主库和备库</h3><blockquote>
<p>主库 <code>my.cnf</code> 文件</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server_id</span>         <span class="string">=</span> <span class="number">10</span></span><br><span class="line"><span class="string">log_bin</span>           <span class="string">=</span> <span class="string">mysql-bin</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>备库 <code>my.cnf</code> 文件</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server_id</span>         <span class="string">=</span> <span class="number">20</span></span><br><span class="line"><span class="string">log_bin</span>           <span class="string">=</span> <span class="string">mysql-bin</span></span><br><span class="line"><span class="string">sync_binlog</span>       <span class="string">=</span> <span class="number">0</span></span><br><span class="line"><span class="string">relay_log</span>         <span class="string">=</span> <span class="string">relay-log</span></span><br><span class="line"><span class="string">read_only</span>         <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">log_slave_updates</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit</span> <span class="string">=</span> <span class="number">2</span></span><br><span class="line"><span class="string">skip_slave_start</span></span><br></pre></td></tr></table></figure>

<p><strong>Tips</strong>：修改配置文件，需要重启 mysqld 服务生效</p>
<h3 id="同步主备数据并启动复制"><a href="#同步主备数据并启动复制" class="headerlink" title="同步主备数据并启动复制"></a>同步主备数据并启动复制</h3><p>（1）克隆数据到备库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主库全局只读锁：</span><br><span class="line">flush tables with read lock;</span><br><span class="line"></span><br><span class="line">备份主库：</span><br><span class="line">mysqldump -uroot -pHaier@123 -A --triggers --routines --events --single-transaction --master-data=2 &gt; master.sql</span><br><span class="line"></span><br><span class="line">传到从库：</span><br><span class="line">scp master.sql haieradmin@x.x.x.x:/tmp</span><br><span class="line"></span><br><span class="line">从库导入数据：</span><br><span class="line">mysql -uroot -p&apos;xx&apos; &lt; master.sql</span><br></pre></td></tr></table></figure>

<p>（2）配置复制关系</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_HOST=&apos;10.133.0.51&apos;,</span><br><span class="line">MASTER_USER=&apos;repl&apos;,</span><br><span class="line">MASTER_PASSWORD=&apos;Changeme_123&apos;,</span><br><span class="line">MASTER_PORT=3306,</span><br><span class="line">MASTER_LOG_FILE=&apos;mysql-binlog.000232&apos;,</span><br><span class="line">MASTER_LOG_POS=3108253;</span><br></pre></td></tr></table></figure>

<p>（3）启动复制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">start slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 10.133.0.51</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-binlog.000234</span><br><span class="line">          Read_Master_Log_Pos: 744390811</span><br><span class="line">               Relay_Log_File: relay-log.000017</span><br><span class="line">                Relay_Log_Pos: 744391030</span><br><span class="line">        Relay_Master_Log_File: mysql-binlog.000234</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">                            ...</span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 744390811</span><br><span class="line">                            ...</span><br><span class="line">        Seconds_Behind_Master: 0</span><br></pre></td></tr></table></figure>

<p>（4）检查复制线程</p>
<p>主库上可以看到由备库 I/O 线程向主库发起的连接：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show processlist\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">     Id: 1257405</span><br><span class="line">   User: repl</span><br><span class="line">   Host: 10.133.0.52:46102</span><br><span class="line">     db: NULL</span><br><span class="line">Command: Binlog Dump</span><br><span class="line">   Time: 79824</span><br><span class="line">  State: Master has sent all binlog to slave; waiting for more updates</span><br><span class="line">   Info: NULL</span><br></pre></td></tr></table></figure>

<p>备库上也可以看到两个线程，一个是 I/O 线程，一个是 SQL 线程：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show processlist\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">     Id: 55</span><br><span class="line">   User: system user</span><br><span class="line">   Host: </span><br><span class="line">     db: NULL</span><br><span class="line">Command: Connect</span><br><span class="line">   Time: 79927</span><br><span class="line">  State: Waiting for master to send event</span><br><span class="line">   Info: NULL</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">     Id: 56</span><br><span class="line">   User: system user</span><br><span class="line">   Host: </span><br><span class="line">     db: NULL</span><br><span class="line">Command: Connect</span><br><span class="line">   Time: 3681</span><br><span class="line">  State: Slave has read all relay log; waiting for more updates</span><br><span class="line">   Info: NULL</span><br></pre></td></tr></table></figure>

<p>（5）主库解锁</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unlock tables;</span><br></pre></td></tr></table></figure>

<h2 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 10.133.0.51</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-binlog.000234</span><br><span class="line">          Read_Master_Log_Pos: 744390811</span><br><span class="line">               Relay_Log_File: relay-log.000017</span><br><span class="line">                Relay_Log_Pos: 744391030</span><br><span class="line">        Relay_Master_Log_File: mysql-binlog.000234</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error:</span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 744390811</span><br><span class="line">          ...</span><br><span class="line">        Seconds_Behind_Master: 0</span><br></pre></td></tr></table></figure>

<p><strong>Slave_IO_Running：Yes</strong>，从库 I/O 线程负责请求和接收主库传递的 bin-log 信息</p>
<p><strong>Slave_SQL_Running：Yes</strong>，从库 SQL 线程负责重放 relay-log 信息</p>
<ul>
<li><p><code>Master_Log_File</code>：当前主库的 bin-log 日志文件名</p>
</li>
<li><p><code>Read_Master_Log_Pos</code>：正在读取主库当前 bin-log 中 position 位置</p>
</li>
<li><p><code>Exec_Master_Log_Pos</code>：执行到主库 bin-log 中 position 位置</p>
</li>
<li><p><code>Relay_Log_File</code>：</p>
</li>
<li><p><code>Relay_Log_Pos</code>：</p>
</li>
<li><p><code>Relay_Master_Log_File</code>：</p>
</li>
<li><p><code>Seconds_Behind_Master</code>：</p>
</li>
</ul>
<p>Master_Log_File = Relay_Master_Log_File，Read_Master_Log_Pos = Exec_Master_Log_Pos：说明从库无延迟</p>
<h3 id="主从延时问题"><a href="#主从延时问题" class="headerlink" title="主从延时问题"></a>主从延时问题</h3><p>原因：一般都会做读写分离，其实从库压力反而比主库大／从库读写压力大非常容易导致延时。</p>
<p>解决方案：</p>
<ul>
<li>首先定位延时瓶颈</li>
<li>如果是IO压力，可以通过升级硬件解决，比如替换SSD等</li>
<li>如果IO和CPU都不是瓶颈，非常有可能是SQL单线程问题，解决方案可以考虑刚才提到的并行复制方案</li>
<li>如果还有问题，可以考虑sharding拆分方案</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 安装</title>
    <url>/blog/2019/07/17/mysql-install/</url>
    <content><![CDATA[<h2 id="MySQL-5-7"><a href="#MySQL-5-7" class="headerlink" title="MySQL 5.7"></a>MySQL 5.7</h2><h3 id="创建-mysql-用户"><a href="#创建-mysql-用户" class="headerlink" title="创建 mysql 用户"></a>创建 <code>mysql</code> 用户</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -g mysql mysql -s /sbin/nologin</span><br></pre></td></tr></table></figure>

<h3 id="下载二进制包"><a href="#下载二进制包" class="headerlink" title="下载二进制包"></a>下载二进制包</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wget http://devops-files.oss-cn-qingdao.aliyuncs.com/mysql-<span class="number">5.7</span>.<span class="number">23</span>-linux-glibc2.<span class="number">12</span>-x86_64.tar.gz</span><br><span class="line">tar -zxvf mysql-<span class="number">5.7</span>.<span class="number">23</span>-linux-glibc2.<span class="number">12</span>-x86_64.tar.gz -C /usr/local/</span><br><span class="line">ln -s /usr/local/mysql-<span class="number">5.7</span>.<span class="number">23</span>-linux-glibc2.<span class="number">12</span>-x86_64.tar.gz /usr/local/mysql</span><br></pre></td></tr></table></figure>

<h3 id="配置文件-my-cnf"><a href="#配置文件-my-cnf" class="headerlink" title="配置文件 my.cnf"></a>配置文件 <code>my.cnf</code></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">port</span>                      <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="string">socket</span>                    <span class="string">=</span> <span class="string">/data/mysql/mysql.sock</span></span><br><span class="line"></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">port</span>                      <span class="string">=</span> <span class="number">3306</span></span><br><span class="line"><span class="string">socket</span>                    <span class="string">=</span> <span class="string">/data/mysql/mysql.sock</span></span><br><span class="line"><span class="string">pid_file</span>                  <span class="string">=</span> <span class="string">/data/mysql/mysql.pid</span></span><br><span class="line"><span class="string">basedir</span>                   <span class="string">=</span> <span class="string">/usr/local/mysql</span></span><br><span class="line"><span class="string">datadir</span>                   <span class="string">=</span> <span class="string">/data/mysql</span></span><br><span class="line"><span class="string">character_set_server</span>      <span class="string">=</span> <span class="string">utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LOG</span></span><br><span class="line"><span class="string">slow_query_log</span>            <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">long_query_time</span>           <span class="string">=</span> <span class="number">3</span></span><br><span class="line"><span class="string">log_error</span>                 <span class="string">=</span> <span class="string">/data/mysql/error.log</span></span><br><span class="line"><span class="string">slow_query_log_file</span>       <span class="string">=</span> <span class="string">/data/mysql/slow.log</span></span><br><span class="line"><span class="string">log_queries_not_using_indexes</span>  <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">sync_binlog</span>                    <span class="string">=</span> <span class="number">0</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit</span> <span class="string">=</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># INNODB</span></span><br><span class="line"><span class="string">innodb_buffer_pool_size</span>   <span class="string">=</span> <span class="number">10240</span><span class="string">M</span></span><br><span class="line"><span class="string">innodb_buffer_pool_instances</span> <span class="string">=</span> <span class="number">4</span></span><br><span class="line"><span class="string">innodb_data_home_dir</span>      <span class="string">=</span> <span class="string">/data/mysql</span></span><br><span class="line"><span class="string">innodb_log_file_size</span>      <span class="string">=</span> <span class="number">1</span><span class="string">G</span></span><br><span class="line"><span class="string">innodb_data_file_path</span>     <span class="string">=</span> <span class="attr">ibdata1:1G:autoextend</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># OTHER</span></span><br><span class="line"><span class="string">max_connections</span>           <span class="string">=</span> <span class="number">3000</span></span><br><span class="line"><span class="string">back_log</span>                  <span class="string">=</span> <span class="number">1024</span></span><br><span class="line"><span class="string">interactive_timeout</span>       <span class="string">=</span> <span class="number">600</span></span><br><span class="line"><span class="string">wait_timeout</span>              <span class="string">=</span> <span class="number">600</span></span><br><span class="line"><span class="string">lower_case_table_names</span>    <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">log_timestamps</span>            <span class="string">=</span> <span class="string">SYSTEM</span></span><br><span class="line"><span class="string">max_allowed_packet</span>        <span class="string">=</span> <span class="number">32</span><span class="string">M</span></span><br><span class="line"><span class="string">sort_buffer_size</span>          <span class="string">=</span> <span class="number">4</span><span class="string">M</span></span><br><span class="line"><span class="string">join_buffer_size</span>          <span class="string">=</span> <span class="number">4</span><span class="string">M</span></span><br><span class="line"><span class="string">tmp_table_size</span>            <span class="string">=</span> <span class="number">32</span><span class="string">M</span></span><br><span class="line"><span class="string">explicit_defaults_for_timestamp</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">skip-ssl</span></span><br><span class="line"><span class="string">skip-name-resolve</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># REPLICATION</span></span><br><span class="line"><span class="string">server-id</span>                 <span class="string">=</span> <span class="number">3306100</span></span><br><span class="line"><span class="string">log-bin</span>                   <span class="string">=</span> <span class="string">/data/mysql/mysql-bin</span></span><br><span class="line"><span class="string">max_binlog_size</span>           <span class="string">=</span> <span class="number">1</span><span class="string">G</span></span><br><span class="line"><span class="string">binlog-format</span>             <span class="string">=</span> <span class="string">row</span></span><br><span class="line"><span class="string">expire_logs_days</span>          <span class="string">=</span> <span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="string">[mysqldump]</span></span><br><span class="line"><span class="string">quick</span></span><br><span class="line"><span class="string">max_allowed_packet</span>        <span class="string">=</span> <span class="number">32</span><span class="string">M</span></span><br></pre></td></tr></table></figure>

<h3 id="创建数据目录"><a href="#创建数据目录" class="headerlink" title="创建数据目录"></a>创建数据目录</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mkdir -p /<span class="keyword">data</span>/mysql</span><br><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br><span class="line">chown -R mysql:mysql /<span class="keyword">data</span>/mysql</span><br></pre></td></tr></table></figure>

<h3 id="初始化-amp-启动"><a href="#初始化-amp-启动" class="headerlink" title="初始化 &amp; 启动"></a>初始化 &amp; 启动</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnf --user=mysql --initialize</span><br><span class="line">/usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf --user=mysql <span class="number">2</span>&gt;&amp;<span class="number">1</span>&gt; /dev/null &amp;</span><br></pre></td></tr></table></figure>

<h3 id="开启-3306-端口"><a href="#开启-3306-端口" class="headerlink" title="开启 3306 端口"></a>开启 3306 端口</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=<span class="number">3306</span>/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<h3 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/mysql/bin</span><br><span class="line">cp mysql mysqladmin mysqlbinlog mysqld mysqld_safe mysqldump /usr/bin/</span><br><span class="line"></span><br><span class="line">vi /usr/local/mysql/support-files/mysql.server <span class="comment"># mysqld_pid_file_path=/data/mysql/mysql.pid</span></span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">chkconfig --list</span><br></pre></td></tr></table></figure>

<h3 id="设置用户"><a href="#设置用户" class="headerlink" title="设置用户"></a>设置用户</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ cat /data/mysql/error.log | grep password</span><br><span class="line"></span><br><span class="line"><span class="comment"># root账号</span></span><br><span class="line">mysql&gt; SET PASSWORD = 'xx';</span><br><span class="line">mysql&gt; ALTER USER 'root'@'localhost' PASSWORD EXPIRE NEVER;</span><br><span class="line"></span><br><span class="line"><span class="comment"># sre账号</span></span><br><span class="line">mysql&gt; CREATE USER 'sre'@'%' IDENTIFIED BY PASSWORD 'xx';</span><br><span class="line">mysql&gt; GRANT all privileges on *.* to 'sre'@'%' WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line"><span class="comment"># hdm账号</span></span><br><span class="line">mysql&gt; CREATE USER 'hdm'@'%' IDENTIFIED BY PASSWORD 'xx';</span><br><span class="line">mysql&gt; GRANT SELECT, SHOW DATABASES, PROCESS, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'hdm'@'%';</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; select user,host,authentication_string from mysql.user;</span><br></pre></td></tr></table></figure>

<h2 id="MySQL-5-6"><a href="#MySQL-5-6" class="headerlink" title="MySQL 5.6"></a>MySQL 5.6</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/usr/local/mysql/scripts/mysql_install_db --basedir=/usr/local/mysql --defaults-file=/etc/my.cnf --user=mysql</span><br></pre></td></tr></table></figure>

<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ /usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf --user=mysql <span class="number">2</span>&gt;&amp;<span class="number">1</span> &gt; /dev/null &amp;</span><br></pre></td></tr></table></figure>

<h3 id="设置用户-1"><a href="#设置用户-1" class="headerlink" title="设置用户"></a>设置用户</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql</span><br><span class="line">mysql&gt; update mysql.user set password=password('xx') where user='root';</span><br><span class="line">mysql&gt; delete from mysql.user where user!='root' or host!='localhost';</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; select user,host,password from mysql.user;</span><br></pre></td></tr></table></figure>

<h2 id="主备模式"><a href="#主备模式" class="headerlink" title="主备模式"></a>主备模式</h2><h3 id="新搭建主备"><a href="#新搭建主备" class="headerlink" title="新搭建主备"></a>新搭建主备</h3><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">REPLICATION</span> <span class="keyword">SLAVE</span>, <span class="keyword">REPLICATION</span> <span class="keyword">CLIENT</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'repl'</span>@<span class="string">'x.x.x.%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'xx'</span>;</span><br></pre></td></tr></table></figure>

<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><ul>
<li>主库 <code>my.cnf</code> 文件</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server_id</span>         <span class="string">=</span> <span class="number">3306100</span></span><br><span class="line"><span class="string">log_bin</span>           <span class="string">=</span> <span class="string">mysql-bin</span></span><br></pre></td></tr></table></figure>

<ul>
<li>备库 <code>my.cnf</code> 文件</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">server_id</span>         <span class="string">=</span> <span class="number">3306101</span></span><br><span class="line"><span class="string">log_bin</span>           <span class="string">=</span> <span class="string">mysql-bin</span></span><br><span class="line"><span class="string">relay_log</span>         <span class="string">=</span> <span class="string">relay-log</span></span><br><span class="line"><span class="string">read_only</span>         <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">log_slave_updates</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"><span class="string">innodb_flush_log_at_trx_commit</span> <span class="string">=</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>Tips</strong>：修改配置，需要重启 <code>mysqld</code> 服务生效</p>
</blockquote>
<ul>
<li>迁移主库数据至从库</li>
</ul>
<ul>
<li>启动复制</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 主库查看日志和位置</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+<span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+<span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line">| mysql-bin.000002 |     3778 |              |                  |                   |</span><br><span class="line">+<span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库开启复制</span></span><br><span class="line"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span></span><br><span class="line">MASTER_HOST=<span class="string">'x.x.x.x'</span>,</span><br><span class="line">MASTER_USER=<span class="string">'repl'</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">'xx'</span>,</span><br><span class="line">MASTER_PORT=<span class="number">3306</span>,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'mysql-bin.000002'</span>,</span><br><span class="line">MASTER_LOG_POS=<span class="number">3778</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 10.138.98.179</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000002</span><br><span class="line">          Read_Master_Log_Pos: 3778</span><br><span class="line">               Relay_Log_File: relay-log.000002</span><br><span class="line">                Relay_Log_Pos: 1621</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000002</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">            ...</span><br></pre></td></tr></table></figure>

<h3 id="单主新增备"><a href="#单主新增备" class="headerlink" title="单主新增备"></a>单主新增备</h3><ul>
<li>主从库服务器，<a href="https://huiraoo.github.io/blog/2019/06/18/mysql-xtrabackup/"><strong>安装 XtraBackup</strong></a></li>
</ul>
<ul>
<li><p><a href="https://huiraoo.github.io/blog/2019/07/08/linux-ssh/"><strong>配置主从互信</strong></a></p>
</li>
<li><p>备份主库</p>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ innobackupex --defaults-file=/etc/my.cnf --user=<span class="string">'xx'</span> --password=<span class="string">'xx'</span> --no-timestamp /<span class="keyword">data</span>/backup</span><br></pre></td></tr></table></figure>

<ul>
<li>传输到从库</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ scp -r /<span class="keyword">data</span>/backup/* root@x.x.x.x:/<span class="keyword">data</span>/backup</span><br></pre></td></tr></table></figure>

<ul>
<li>恢复数据到从库</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysqladmin -uroot -p<span class="string">'xx'</span> shutdown</span><br><span class="line">$ innobackupex --apply-log /<span class="keyword">data</span>/backup</span><br><span class="line">$ mv mysql mysql_bak</span><br><span class="line">$ mkdir mysql</span><br><span class="line">$ innobackupex --copy-back /<span class="keyword">data</span>/backup</span><br><span class="line">$ chown -R mysql:mysql mysql</span><br><span class="line">$ /usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf --user=mysql &gt;/dev/null &amp;</span><br></pre></td></tr></table></figure>

<ul>
<li>建立复制关系</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ cat xtrabackup_binlog_info</span><br><span class="line">mysql-binlog.000297	900834433</span><br><span class="line"></span><br><span class="line"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span> </span><br><span class="line">MASTER_HOST=<span class="string">'x.x.x.x'</span>,</span><br><span class="line">MASTER_USER=<span class="string">'repl'</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">'xx'</span>,</span><br><span class="line">MASTER_PORT=<span class="number">3306</span>,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'mysql-binlog.000297'</span>, </span><br><span class="line">MASTER_LOG_POS=<span class="number">900834433</span>,</span><br><span class="line">MASTER_CONNECT_RETRY=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br></pre></td></tr></table></figure>

<h2 id="启停"><a href="#启停" class="headerlink" title="启停"></a>启停</h2><h3 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h3><ul>
<li>使用 <code>init.d</code>，<code>mysqld</code> 脚本来自于 <code>/usr/local/mysql/support-files/mysql.server</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ /etc/init.d/mysqld stop</span><br></pre></td></tr></table></figure>

<ul>
<li>使用 <code>mysqladmin</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysqladmin -u<span class="string">'xx'</span> -p<span class="string">'xx'</span> shutdown</span><br></pre></td></tr></table></figure>

<ul>
<li>使用 <code>service</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ systemctl stop mysqld</span><br><span class="line">$ service mysqld stop</span><br></pre></td></tr></table></figure>

<h3 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h3><ul>
<li>使用 <code>init.d</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ /etc/init.d/mysqld start</span><br></pre></td></tr></table></figure>

<ul>
<li>使用 <code>mysqld_safe</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysqld_safe --defaults-file=/etc/my.cnf --user=mysql &amp;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用 <code>service</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ systemctl start mysqld</span><br><span class="line">$ service mysqld start</span><br></pre></td></tr></table></figure>

<h3 id="工具命令"><a href="#工具命令" class="headerlink" title="工具命令"></a>工具命令</h3><ul>
<li><p><strong>mysql</strong>：<code>MySQL</code> 客户端访问管理工具。</p>
</li>
<li><p><strong>mysqld</strong>：这个可执行文件就代表着 <code>MySQL</code> 服务器程序，运行这个可执行文件就可以直接启动一个服务器进程。</p>
</li>
<li><p><strong>mysqld</strong> 启动配置文件优先级：</p>
</li>
<li><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">/etc/my.cnf -&gt; /etc/mysql/my.cnf -&gt; /usr/etc/my.cnf -&gt; ~/.my.cnf</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>mysqld_safe</strong>：是一个启动脚本，它会间接的调用 <code>mysqld</code>，而且还顺便启动了另外一个监控进程，这个监控进程在服务器进程挂了的时候，可以帮助重启它。使用 <code>mysqld_safe</code> 启动 <code>mysqld</code> 时，<code>mysqld_safe</code> 可以使用参数选项，此时可以使用其他配置文件，相当于 <code>mysqld_safe</code> 把参数传递给 <code>mysqld</code>。</p>
</li>
<li><p><strong>mysql.server</strong>：也是一个启动脚本，主要作用就是为了方便启动和关闭 <code>mysqld</code> 服务，只能使用默认的 <code>/etc/my.cnf</code> 配置文件，<code>mysql.server</code> 调用 <code>mysqld_safe</code>，然后 <code>mysql_safe</code> 调用了 <code>mysqld</code>。</p>
</li>
</ul>
<h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><p><strong>现象</strong>：使用 <code>mysqld_safe</code> 启动失败，启动错误日志未记录 <code>error.log</code>，报错如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Starting MySQL. ERROR! The server quit without updating PID file (/usr/local/mysql/data/COSMOPlat-WMS-App01.pid)</span><br></pre></td></tr></table></figure>

<p><strong>原因</strong>：经检查发现，数据库安装时是以 <code>haieradmin</code> 用户启动，默认使用 <code>mysql</code> 用户启动，启动失败。</p>
<p><strong>解决</strong>：使用 <code>haieradmin</code> 用户启动成功。</p>
<blockquote>
<p>Tips：在操作生产环境时，需要先拷贝 <code>mysqld</code> 进程信息，以免启停失败。</p>
</blockquote>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ###########################################################################</span></span><br><span class="line"><span class="comment"># MySQL安装包名字为mysql-5.7.23-el7-x86_64.tar.gz，位置放在/usr/local/</span></span><br><span class="line"><span class="comment"># ###########################################################################</span></span><br><span class="line"></span><br><span class="line">cmd=<span class="variable">$2</span>    <span class="comment"># start or stop or status or install</span></span><br><span class="line">inst=<span class="variable">$4</span></span><br><span class="line"></span><br><span class="line">service_startup_timeout=<span class="number">30</span></span><br><span class="line"></span><br><span class="line">log_failure_msg() &#123;</span><br><span class="line">    echo <span class="string">" ERROR! $@"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">log_success_msg() &#123;</span><br><span class="line">    echo <span class="string">" SUCCESS! $@"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case `echo <span class="string">"testing\c"</span>`,`echo -n testing` <span class="keyword">in</span></span><br><span class="line">    *c*,-n*) echo_n=   echo_c=     ;;</span><br><span class="line">    *c*,*)   echo_n=-n echo_c=     ;;</span><br><span class="line">    *)       echo_n=   echo_c=<span class="string">'\c'</span> ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">wait_for_pid () &#123;</span><br><span class="line">  verb=<span class="string">"<span class="variable">$1</span>"</span>           <span class="comment"># created | removed</span></span><br><span class="line">  pid=<span class="string">"<span class="variable">$2</span>"</span>            <span class="comment"># process ID of the program operating on the pid-file</span></span><br><span class="line">  pid_file_path=<span class="string">"<span class="variable">$3</span>"</span>  <span class="comment"># path to the PID file.</span></span><br><span class="line"></span><br><span class="line">  i=<span class="number">0</span></span><br><span class="line">  avoid_race_condition=<span class="string">"by checking again"</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> test <span class="variable">$i</span> <span class="nomarkup">-ne</span> <span class="variable">$service_startup_timeout</span> ; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">    case <span class="string">"<span class="variable">$verb</span>"</span> <span class="keyword">in</span></span><br><span class="line">      <span class="string">'created'</span>)</span><br><span class="line">        <span class="comment"># wait for a PID-file to pop into existence.</span></span><br><span class="line">        test -s <span class="string">"<span class="variable">$pid_file_path</span>"</span> &amp;&amp; i=<span class="string">''</span> &amp;&amp; <span class="keyword">break</span></span><br><span class="line">        ;;</span><br><span class="line">      <span class="string">'removed'</span>)</span><br><span class="line">        <span class="comment"># wait for this PID-file to disappear</span></span><br><span class="line">        test ! -s <span class="string">"<span class="variable">$pid_file_path</span>"</span> &amp;&amp; i=<span class="string">''</span> &amp;&amp; <span class="keyword">break</span></span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo <span class="string">"wait_for_pid () usage: wait_for_pid created|removed pid pid_file_path"</span></span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> test -n <span class="string">"<span class="variable">$pid</span>"</span>; then</span><br><span class="line">      <span class="keyword">if</span> kill -<span class="number">0</span> <span class="string">"<span class="variable">$pid</span>"</span> <span class="number">2</span>&gt;/dev/null; then</span><br><span class="line">        :</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> test -n <span class="string">"<span class="variable">$avoid_race_condition</span>"</span>; then</span><br><span class="line">          avoid_race_condition=<span class="string">""</span></span><br><span class="line">          <span class="keyword">continue</span></span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">        log_failure_msg <span class="string">"The server quit without updating PID file (<span class="variable">$pid_file_path</span>)."</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">      fi</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    echo <span class="variable">$echo_n</span> <span class="string">".<span class="variable">$echo_c</span>"</span></span><br><span class="line">    i=`expr <span class="variable">$i</span> + <span class="number">1</span>`</span><br><span class="line">    sleep <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  done</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> test -z <span class="string">"<span class="variable">$i</span>"</span> ; then</span><br><span class="line">    log_success_msg</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    log_failure_msg</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ############################################################################################</span></span><br><span class="line"><span class="comment"># 支持MySQL版本：5.6/5.7，CentOS 6系统建议安装MySQL 5.6版本；CentOS 7系统建议安装MySQL 5.7版本</span></span><br><span class="line"><span class="comment"># 支持MySQL模式：单机/主从</span></span><br><span class="line"><span class="comment"># #############################################################################################</span></span><br><span class="line"></span><br><span class="line">install_mysql() &#123;</span><br><span class="line"></span><br><span class="line">    echo <span class="variable">$echo_n</span> <span class="string">"Installing MySQL..."</span></span><br><span class="line"></span><br><span class="line">    local basedir=<span class="string">"/usr/local/mysql"</span></span><br><span class="line">    local datadir=<span class="string">"/data/mysql"</span></span><br><span class="line">    local defaults_file=<span class="string">"/etc/my.cnf"</span></span><br><span class="line">    local sock_file=<span class="string">"<span class="variable">$datadir</span>/mysql.sock"</span></span><br><span class="line">    local pid_file=<span class="string">"<span class="variable">$datadir</span>/mysql.pid"</span></span><br><span class="line">    local array=($&#123;inst//@/ &#125;)</span><br><span class="line">    local port=$&#123;array[<span class="number">1</span>]&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建MySQL用户，指定MySQL所在的用户组</span></span><br><span class="line">    groupadd mysql &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    useradd -g mysql mysql -s /sbin/nologin &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解压MySQL软件包，并对mysql目录授权</span></span><br><span class="line">    cd /usr/local</span><br><span class="line">    tar -zxvf mysql-<span class="number">5.7</span>.<span class="number">23</span>-el7-x86_64.tar.gz &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    ln -s mysql-<span class="number">5.7</span>.<span class="number">23</span>-el7-x86_64 mysql</span><br><span class="line">    chown mysql:mysql -R mysql</span><br><span class="line">    chown mysql:mysql -R mysql-<span class="number">5.7</span>.<span class="number">23</span>-el7-x86_64</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建数据目录</span></span><br><span class="line">    mkdir -p <span class="variable">$datadir</span></span><br><span class="line">    chown mysql:mysql -R <span class="variable">$datadir</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化数据库</span></span><br><span class="line">    cd /usr/local/mysql/bin</span><br><span class="line">    ./mysqld --defaults-file=<span class="string">"<span class="variable">$defaults_file</span>"</span> --basedir=<span class="string">"<span class="variable">$basedir</span>"</span> --datadir=<span class="string">"<span class="variable">$datadir</span>"</span> --user=mysql --initialize-insecure &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动数据库</span></span><br><span class="line">    ./mysqld_safe --defaults-file=<span class="string">"<span class="variable">$defaults_file</span>"</span> --pid-file=<span class="string">"<span class="variable">$pid_file</span>"</span> --user=mysql &gt;/dev/null &amp;</span><br><span class="line">    wait_for_pid created <span class="string">"$!"</span> <span class="string">"<span class="variable">$pid_file</span>"</span>; return_value=$?</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打开防火墙端口</span></span><br><span class="line">    firewall-cmd --permanent --zone=public --add-port=<span class="number">3306</span>/tcp &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    firewall-cmd --reload &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    cp mysql* /usr/bin &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    <span class="comment"># mv /usr/local/mysql_tool /usr/bin &gt;/dev/null 2&gt;&amp;1</span></span><br><span class="line">    mysql -S <span class="variable">$sock_file</span> mysql -e <span class="string">"SET PASSWORD = 'xx';ALTER USER 'root'@'localhost' PASSWORD EXPIRE NEVER;flush privileges;"</span></span><br><span class="line">    mysql -S <span class="variable">$sock_file</span> mysql -e <span class="string">"SET PASSWORD = 'xx';ALTER USER 'hdm'@'%' PASSWORD EXPIRE NEVER;flush privileges;"</span></span><br><span class="line">    mysql -S <span class="variable">$sock_file</span> mysql -e <span class="string">"SET PASSWORD = 'xx';ALTER USER 'sre'@'%' PASSWORD EXPIRE NEVER;flush privileges;"</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="variable">$return_value</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case <span class="string">"<span class="variable">$cmd</span>"</span> <span class="keyword">in</span></span><br><span class="line">    <span class="string">'install'</span>) install_mysql ;;</span><br><span class="line">    <span class="string">'uninstall'</span>) mysql_uninstall ;;</span><br><span class="line">    <span class="string">'start'</span>) mysql_start ;;</span><br><span class="line">    <span class="string">'stop'</span>) mysql_stop ;;</span><br><span class="line">    <span class="string">'restart'</span>) mysql_restart ;;</span><br><span class="line">    <span class="string">'config'</span>) mysql_config ;;</span><br><span class="line">    <span class="string">'monitor'</span>) mysql_monitor ;;</span><br><span class="line">*)</span><br><span class="line">    <span class="comment"># usage</span></span><br><span class="line">    basename=`basename <span class="string">"<span class="variable">$0</span>"</span>`</span><br><span class="line">    echo <span class="string">"Usage: <span class="variable">$basename</span> -cmd &#123;start|stop|restart|install|uninstall|status|monitor&#125; -inst &#123;instance name&#125; [ MySQL tool options ]"</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 案例集锦</title>
    <url>/blog/2019/07/15/mysql-cases/</url>
    <content><![CDATA[<h2 id="系列"><a href="#系列" class="headerlink" title="系列"></a>系列</h2><ul>
<li>MySQL · 案例分析 · 主从复制中断</li>
<li>MySQL · 案例分析 · 磁盘空间不足</li>
<li>MySQL · 案例分析 · information_schema.tables 与 count(*) 查询数不一致</li>
</ul>
<h2 id="数据库连接失败"><a href="#数据库连接失败" class="headerlink" title="数据库连接失败"></a>数据库连接失败</h2><h3 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h3><p>项目经理火急火燎的反馈，说数据库连接不上了，请求排查问题原因。</p>
<h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><ul>
<li><p>测试 <code>Navicate</code> 是否能够连上数据库 ？</p>
</li>
<li><p>登录服务器，查看 <code>mysqld</code> 进程是否存在，如果进程不存在，可能是服务器断电导致进程未自启动。</p>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ ssh -p <span class="number">2222</span> <span class="number">01510886</span>@<span class="number">10.138</span>.<span class="number">16.192</span></span><br><span class="line"></span><br><span class="line">$ ps -ef | grep mysqld</span><br><span class="line">root      <span class="number">64511</span>  <span class="number">64440</span>  <span class="number">0</span> <span class="number">10</span>:<span class="number">27</span> pts/<span class="number">2</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep --color=auto mysqld</span><br><span class="line">root      <span class="number">79355</span>      <span class="number">1</span>  <span class="number">0</span> Aug31 ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> /bin/sh /usr/local/mysql/bin/mysqld_safe --datadir=/<span class="keyword">data</span>/mysql --pid-file=/<span class="keyword">data</span>/mysql/mysql.pid</span><br><span class="line">mysql     <span class="number">79981</span>  <span class="number">79355</span> <span class="number">99</span> Aug31 ?        <span class="number">2</span>-<span class="number">01</span>:<span class="number">38</span>:<span class="number">14</span> /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/<span class="keyword">data</span>/mysql --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=/<span class="keyword">data</span>/mysql/error.log --pid-file=/<span class="keyword">data</span>/mysql/mysql.pid --socket=/<span class="keyword">data</span>/mysql/mysql.sock --port=<span class="number">3306</span></span><br></pre></td></tr></table></figure>

<ul>
<li>登录 <code>mysql</code>，查看线程状态，查看是否有锁占用，或者线程大量阻塞情况。</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ mysql -S /<span class="keyword">data</span>/mysql/mysql.sock -usre -p<span class="string">'sre@@p$i'</span></span><br><span class="line">mysql&gt; show processlist;</span><br></pre></td></tr></table></figure>

<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul>
<li>如果是第一种原因，启动 <code>mysql</code> 进程</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cd /etc/init.d</span><br><span class="line">$ ./mysqld stop/start</span><br><span class="line"></span><br><span class="line">$ cd /usr/local/mysql/support-files</span><br><span class="line">$ ./mysql.server stop/start</span><br></pre></td></tr></table></figure>

<ul>
<li>如果是第二种原因，删除正在执行的锁表线程</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 杀掉ID为1的线程, 关闭连接</span><br><span class="line">kill id; </span><br><span class="line"></span><br><span class="line"># 查询出时间大于10的线程, 复制查询结果，批量执行</span><br><span class="line">select concat(&apos;kill &apos;, id, &apos;;&apos;) from information_schema.processlist where time &gt; 10;</span><br></pre></td></tr></table></figure>

<h2 id="备份失败"><a href="#备份失败" class="headerlink" title="备份失败"></a>备份失败</h2><h3 id="现象描述"><a href="#现象描述" class="headerlink" title="现象描述"></a>现象描述</h3><p>据备份供应商反映，昨天晚上 22:00 <code>XX系统</code>，从库备份失败，使用的备份工具是 <code>mysqldump</code>，请求协助定位备份失败原因。</p>
<h3 id="原因分析-1"><a href="#原因分析-1" class="headerlink" title="原因分析"></a>原因分析</h3><p>（1）检查从库两个线程 <code>Slave_IO_Running</code> 和 <code>Slave_SQL_Running</code> 均是 <strong>Yes</strong>，说明主从复制链路正常，但是 <code>Seconds_Behind_Master</code> 不断增大，且主从数据延迟有不断扩大的趋势。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 10.133.0.51</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-binlog.000232</span><br><span class="line">          Read_Master_Log_Pos: 3108253</span><br><span class="line">               Relay_Log_File: relay-log.000004</span><br><span class="line">                Relay_Log_Pos: 169851605</span><br><span class="line">        Relay_Master_Log_File: mysql-binlog.000229</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 169851386</span><br><span class="line">              Relay_Log_Space: 3270427001</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 42302</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">              ....</span><br><span class="line">       </span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>（2）检查当前数据库线程状态，未发现有明显异常。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; show processlist;</span><br><span class="line">+-------+-------------+-------------------+--------------------+---------+--------+----------------------------------+--------------------------------+</span><br><span class="line">| Id    | User        | Host              | db                 | Command | Time   | State                            | Info                           |</span><br><span class="line">+-------+-------------+-------------------+--------------------+---------+--------+----------------------------------+--------------------------------+</span><br><span class="line">|     1 | system user |                   | NULL               | Connect | 172777 | Waiting for master to send event | NULL                           |</span><br><span class="line">|     2 | system user |                   | NULL               | Connect | 678456 | Reading event from the relay log | NULL                           |</span><br><span class="line">|  4345 | cvbak       | localhost         | NULL               | Query   | 130546 | Waiting for table flush          | FLUSH /*!40101 LOCAL */ TABLES |</span><br><span class="line">| 17662 | root        | localhost         | NULL               | Query   |      0 | starting                         | show processlist               |</span><br><span class="line">| 17671 | hdm         | 10.133.0.52:37170 | information_schema | Sleep   |      1 |                                  | NULL                           |</span><br><span class="line">+-------+-------------+-------------------+--------------------+---------+--------+----------------------------------+--------------------------------+</span><br></pre></td></tr></table></figure>

<p>（3）检查当前正在使用的表：<code>show open tables where In_use=1;</code> 发现有一张表一直处于 <code>In_use</code> 状态。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show open tables where In_use=1;</span><br><span class="line">+<span class="comment">----------+---------------------------+--------+-------------+</span></span><br><span class="line">| Database | Table                     | In_use | Name_locked |</span><br><span class="line">+<span class="comment">----------+---------------------------+--------+-------------+</span></span><br><span class="line">| tdmetl   | odsepg_zrfc_zco_zzfymx_sw |      1 |           0 |</span><br><span class="line">+<span class="comment">----------+---------------------------+--------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>（4）根据 <code>Relay_Log_Pos</code> 解析 <code>relay-log.000004</code>，查看当时正在执行的操作是 <code>Delete_rows</code>，操作的表是 <code>tdmetl</code>.<code>odsepg_zrfc_zco_zzfymx_sw</code>。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysqlbinlog -vv --base64-output=decode-rows relay-log.000004 --start-position=169851605 | more</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># at 169851605</span></span><br><span class="line"><span class="comment">#190718  4:02:58 server id 3306100  end_log_pos 169851451 CRC32 0x6683bf99 	Anonymous_GTID	last_committed=1831	sequence_number=1832	rbr_</span></span><br><span class="line"><span class="string">only=yes</span></span><br><span class="line"><span class="string">/*!50718</span> <span class="string">SET</span> <span class="string">TRANSACTION</span> <span class="string">ISOLATION</span> <span class="string">LEVEL</span> <span class="string">READ</span> <span class="string">COMMITTED*//*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@SESSION.GTID_NEXT=</span> <span class="string">'ANONYMOUS'</span><span class="string">/*!*/;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># at 169851670</span></span><br><span class="line"><span class="comment">#190718  4:02:58 server id 3306100  end_log_pos 169851525 CRC32 0x9d910e5d 	Query	thread_id=1254417	exec_time=0	error_code=0</span></span><br><span class="line"><span class="string">SET</span> <span class="string">TIMESTAMP=1563393778/*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@session.pseudo_thread_id=1254417/*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@session.foreign_key_checks=1,</span> <span class="string">@@session.sql_auto_is_null=0,</span> <span class="string">@@session.unique_checks=1,</span> <span class="string">@@session.autocommit=1/*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@session.sql_mode=1436549128/*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@session.auto_increment_increment=1,</span> <span class="string">@@session.auto_increment_offset=1/*!*/;</span></span><br><span class="line"><span class="string">/*!\C</span> <span class="string">utf8</span> <span class="string">*//*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@session.character_set_client=33,@@session.collation_connection=33,@@session.collation_server=33/*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@session.lc_time_names=0/*!*/;</span></span><br><span class="line"><span class="string">SET</span> <span class="string">@@session.collation_database=DEFAULT/*!*/;</span></span><br><span class="line"><span class="string">BEGIN</span></span><br><span class="line"><span class="string">/*!*/;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># at 169851744</span></span><br><span class="line"><span class="comment">#190718  4:02:58 server id 3306100  end_log_pos 169851626 CRC32 0x6b8bbd2d 	Table_map: `tdmetl`.`odsepg_zrfc_zco_zzfymx_sw` mapped to number 170</span></span><br><span class="line"><span class="number">018</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># at 169851845</span></span><br><span class="line"><span class="comment">#190718  4:02:58 server id 3306100  end_log_pos 169859832 CRC32 0x338e105a 	Delete_rows: table id 170018</span></span><br></pre></td></tr></table></figure>

<p>（5）检查表结构，发现该表数据量很大且无主键。由此基本确定其问题根本原因：<strong>对无主键的表进行删除或者更新，导致从库夯住</strong>。该表数据量：77961221条。</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g6873jkiw5j30yf0gigpp.jpg" alt="image-20190822092437992"></p>
<h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><p>（1）表添加自增主键。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">'xxxx'</span> <span class="keyword">ADD</span> <span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">UNSIGNED</span> primary <span class="keyword">key</span> AUTO_INCREMENT;</span><br></pre></td></tr></table></figure>

<p>（2）大表删除使用 <code>truncate</code> 命令。</p>
<h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><ul>
<li>避免无 <code>where</code> 条件的 <code>delete</code> 或 <code>update</code> 操作大表，如果需要全表删除，使用 <code>truncate</code> 操作。</li>
<li>在 <code>binlog row</code> 模式下表结构最好能有主键。</li>
</ul>
<h2 id="主从复制中断"><a href="#主从复制中断" class="headerlink" title="主从复制中断"></a>主从复制中断</h2><h3 id="问题现象-1"><a href="#问题现象-1" class="headerlink" title="问题现象"></a>问题现象</h3><p>监控系统，检测到<code>xx项目</code>主从复制中断，并发送了告警</p>
<h3 id="原因分析-2"><a href="#原因分析-2" class="headerlink" title="原因分析"></a>原因分析</h3><p>1）登录所报告警数据库，查看复制状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh haieradmin@10.138.8.216</span><br><span class="line">ssh root@10.159.37.148</span><br><span class="line">ssh haieradmin@10.159.44.168</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 10.133.8.96</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.002660</span><br><span class="line">          Read_Master_Log_Pos: 343075905</span><br><span class="line">               Relay_Log_File: relay-log-bin.003429</span><br><span class="line">                Relay_Log_Pos: 555</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.001741</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: No</span><br></pre></td></tr></table></figure>

<p>经检查 <code>Slave_SQL_Running</code> 为 <strong>No</strong>，原因一般都很明显，记录在 <code>Last_Error</code>，根据报错原因选择合适地解决方法，最常用的解决办法是跳过这一条正在执行的 SQL。</p>
<h3 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h3><p>（1）登陆 <code>10.133.0.53</code></p>
<p>（2）执行下面操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">pt-slave-restart -h 'x.x.x.x' -u'xx' -p'xx' -P 3306</span><br><span class="line"></span><br><span class="line"><span class="comment">#一般是事务回滚造成的</span></span><br><span class="line"><span class="keyword">stop</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">GLOBAL</span> SQL_SLAVE_SKIP_COUNTER=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">slave</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; show slave status\G</span><br><span class="line">************************* 1. row ***************************</span><br><span class="line">               Slave_IO_State: </span><br><span class="line">                  Master_Host: 10.135.22.70</span><br><span class="line">                  Master_User: repluser</span><br><span class="line">                  Master_Port: 3308</span><br><span class="line">                Connect_Retry: 10</span><br><span class="line">              Master_Log_File: mysql-bin.001935</span><br><span class="line">          Read_Master_Log_Pos: 6587</span><br><span class="line">               Relay_Log_File: relay-log.001487</span><br><span class="line">                Relay_Log_Pos: 4</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.001935</span><br><span class="line">             Slave_IO_Running: No</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: test.%</span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 6587</span><br><span class="line">              Relay_Log_Space: 107</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: NULL</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 1236</span><br><span class="line">                Last_IO_Error: Got fatal error 1236 from master when reading data from binary log: 'Could not find first log file name in binary log index file'</span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Slave_IO_Running: No</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line">Last_IO_Error: Got fatal error 1236 from master when reading data from binary log: 'Could not find first log file name in binary log index file'</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[root@hop02 mzjh]<span class="comment"># ll | grep mysql-bin</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073742013</span> Sep <span class="number">12</span> <span class="number">14</span>:<span class="number">55</span> mysql-bin.<span class="number">001948</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073742073</span> Sep <span class="number">13</span> <span class="number">11</span>:<span class="number">53</span> mysql-bin.<span class="number">001949</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073742120</span> Sep <span class="number">14</span> <span class="number">08</span>:<span class="number">39</span> mysql-bin.<span class="number">001950</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1073859355</span> Sep <span class="number">15</span> <span class="number">06</span>:<span class="number">21</span> mysql-bin.<span class="number">001951</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1074054892</span> Sep <span class="number">16</span> <span class="number">06</span>:<span class="number">18</span> mysql-bin.<span class="number">001952</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1075243641</span> Sep <span class="number">17</span> <span class="number">06</span>:<span class="number">18</span> mysql-bin.<span class="number">001953</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1074801420</span> Sep <span class="number">18</span> <span class="number">06</span>:<span class="number">16</span> mysql-bin.<span class="number">001954</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1075257243</span> Sep <span class="number">19</span> <span class="number">06</span>:<span class="number">16</span> mysql-bin.<span class="number">001955</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql   <span class="number">619405162</span> Sep <span class="number">19</span> <span class="number">13</span>:<span class="number">32</span> mysql-bin.<span class="number">001956</span></span><br><span class="line">-rw-rw----. <span class="number">1</span> mysql mysql  <span class="number">1072898197</span> Sep <span class="number">20</span> <span class="number">09</span>:<span class="number">44</span> mysql-bin.<span class="number">001957</span></span><br><span class="line">-rw-r-----. <span class="number">1</span> mysql mysql         <span class="number">190</span> Sep <span class="number">19</span> <span class="number">13</span>:<span class="number">32</span> mysql-bin.index</span><br></pre></td></tr></table></figure>

<p>从库在主库找不到 binlog 文件</p>
<p><strong>原因</strong></p>
<p>该错误发生在从库的io进程从主库拉取日志时，发现主库的mysql_bin.index文件中第一个文件不存在。出现此类报错可能是由于你的slave 由于某种原因停止了好长一段是时间，当你重启slave 复制的时候，在主库上找不到相应的binlog ,会报此类错误。或者是由于某些设置主库上的binlog被删除了，导致从库获取不到对应的binglog file。</p>
<h2 id="主从复制延迟"><a href="#主从复制延迟" class="headerlink" title="主从复制延迟"></a>主从复制延迟</h2><h3 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h3><ul>
<li>备库复制夯住，会导致备份失败（flush tables with read lock 900s 超时）</li>
<li>以 Slave 为基准进行的备份，数据不是最新的有延迟</li>
<li>异常情况下，主从 HA 无法切换，HA 需要检查数据的一致性，延迟时主备不一致</li>
</ul>
<h3 id="场景-amp-解决方法"><a href="#场景-amp-解决方法" class="headerlink" title="场景 &amp; 解决方法"></a>场景 &amp; 解决方法</h3><ul>
<li>无主键、无索引或索引区分度不高</li>
</ul>
<p><strong>现象</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">show slave status， 显示position一直没有变</span><br><span class="line">show open tables where In_use=<span class="number">1</span>， 显示某个表一直是in_use为 <span class="number">1</span></span><br><span class="line">show create table，查看表结构可以看到无主键，或者无任何索引，或者索引区分度很差</span><br></pre></td></tr></table></figure>

<p><strong>解决方法</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 找到表区分度比较高的几个字段, 可以使用这个方法判断：</span></span><br><span class="line">select count(*) from xx;</span><br><span class="line">select count(*) from (select distinct xx from xxx) t;</span><br><span class="line">如果<span class="number">2</span>个查询count(*)的结果差不多，说明可以对这些字段加索引</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备库 stop slave;</span></span><br><span class="line">可能会执行比较久，因为需要回滚事务。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备库</span></span><br><span class="line">set sql_log_bin=<span class="number">0</span>;</span><br><span class="line">alter table xx add key xx(xx);</span><br><span class="line">alter table <span class="string">'xxxx'</span> add id int(<span class="number">10</span>) unsigned primary key AUTO_INCREMENT;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备库 start slave</span></span><br></pre></td></tr></table></figure>

<ul>
<li>主库上有大事务，导致从库延时</li>
</ul>
<p><strong>现象</strong>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">解析binlog文件，发现一直打印的是Write_rows</span></span><br></pre></td></tr></table></figure>

<p><strong>解决方法</strong>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">事前防范：与开发沟通，增加缓存，异步写入数据库,减少业务直接对db的大事务写入</span></span><br><span class="line"><span class="string">事中补救：调整数据库中io相关的参数比如innodb_flush_log_at_trx_commit和sync_binlog，或者打开并行复制功能</span></span><br></pre></td></tr></table></figure>

<ul>
<li>库写入频繁，从库压力跟不上导致延时</li>
</ul>
<p><strong>现象</strong>：</p>
<p>此类原因的主要现象是数据库的 <code>IUD</code> 操作非常多，<code>slave</code> 由于 <code>sql_thread</code> 单线程的原因追不上主库。</p>
<p><strong>解决方法</strong>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">a.</span> <span class="string">升级从库的硬件配置，比如</span> <span class="string">ssd,fio</span></span><br><span class="line"><span class="string">b.</span> <span class="string">使用@丁奇的预热工具</span> <span class="bullet">-relay</span> <span class="string">fetch</span></span><br><span class="line"><span class="string">在备库sql线程执行更新之前，预先将相应的数据加载到内存中,并不能提高sql_thread线程执行sql的能力，</span> <span class="string">也不能加快io_thread线程读取日志的速度。</span></span><br><span class="line"><span class="string">c.</span> <span class="string">使用多线程复制</span> <span class="string">阿里MySQL团队实现的方案</span> <span class="bullet">--</span> <span class="string">基于行的并行复制。</span></span><br><span class="line"><span class="string">该方案允许对同一张表进行修改的两个事务并行执行，只要这两个事务修改了表中的不同的行。</span></span><br><span class="line"><span class="string">这个方案可以达到事务间更高的并发度，但是局限是必须使用Row格式的binlog。</span></span><br><span class="line"><span class="string">因为只有使用Row格式的binlog才可以知道一个事务所修改的行的范围，而使用Statement格式的binlog只能知道修改的表对象。</span></span><br></pre></td></tr></table></figure>

<ul>
<li>大量 <code>myisam</code> 表，在备份时导致 <code>slave</code> 延时</li>
</ul>
<p><strong>现象</strong>：</p>
<p>由于 <code>xtrabackup</code> 工具备份到最后会执行 <code>flash tables with read lock</code>，对数据库进行锁表以便进行一致性备份，然后对于 <code>myisam</code> 锁表，会阻碍 <code>salve_sql_thread</code> 运行进而导致夯住。</p>
<p><strong>解决方法</strong>：</p>
<p>修改表结构为 <code>InnoDB</code> 存储引擎的表</p>
<h2 id="表碎片"><a href="#表碎片" class="headerlink" title="表碎片"></a>表碎片</h2><p>表碎片是 <code>MySQL</code> 运维过程中比较常见的问题，碎片的存在十分影响数据库的性能。</p>
<h3 id="判断方法"><a href="#判断方法" class="headerlink" title="判断方法"></a>判断方法</h3><p>MySQL 的碎片是否产生，通过查看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show table status from table_name\G;</span><br></pre></td></tr></table></figure>

<p>这个命令中 <code>Data_free</code> 字段，如果该字段不为 0，则产生了数据碎片。</p>
<h3 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h3><p><strong>1. 经常进行 delete 操作</strong></p>
<p>经常进行 <code>delete</code> 操作，产生空白空间，如果进行新的插入操作，MySQL 将尝试利用这些留空的区域，但仍然无法将其彻底占用，久而久之就产生了碎片；</p>
<p><strong>2. update 更新</strong></p>
<p><code>update</code> 更新可变长度的字段(例如：<code>varchar</code> 类型)，将长的字符串更新成短的。之前存储的内容长，后来存储是短的，即使后来插入新数据，那么有一些空白区域还是没能有效利用的。</p>
<h3 id="产生影响"><a href="#产生影响" class="headerlink" title="产生影响"></a>产生影响</h3><ol>
<li><p>由于碎片空间是不连续的，导致这些空间不能充分被利用；</p>
</li>
<li><p>由于碎片的存在，导致数据库的磁盘 <code>I/O</code> 操作变成离散随机读写，加重了磁盘 <code>I/O</code> 的负担。</p>
</li>
</ol>
<h3 id="清理办法"><a href="#清理办法" class="headerlink" title="清理办法"></a>清理办法</h3><ul>
<li><p>MyISAM：<code>optimize table</code> 表名；（OPTIMIZE 可以整理数据文件，并重排索引）</p>
</li>
<li><p>InnoDB：</p>
<p>（1）重建表存储引擎：<code>ALTER TABLE tablename ENGINE = InnoDB;</code></p>
<p>（2）进行一次数据的导入导出</p>
</li>
</ul>
<p><strong>碎片清理的性能对比：</strong></p>
<p>引用我之前一个生产库的数据，对比一下清理前后的 SQL 执行速度差异：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">select</span> <span class="string">count(*)</span> <span class="string">from</span> <span class="string">test.twitter_11;</span></span><br><span class="line"><span class="string">修改前：1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(7.37</span> <span class="string">sec)</span></span><br><span class="line"><span class="string">修改后：1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(1.28</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过对比，可以看到碎片清理前后，节省了很多空间，SQL执行效率更快。所以，<strong>在日常运维工作中，应该对表碎片进行定期清理，保证数据库有稳定的性能。</strong></p>
<h2 id="触发器创建失败"><a href="#触发器创建失败" class="headerlink" title="触发器创建失败"></a>触发器创建失败</h2><h3 id="问题现象-2"><a href="#问题现象-2" class="headerlink" title="问题现象"></a>问题现象</h3><p>创建触发器，报错提示”1419”</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ERROR</span> <span class="number">1419</span> <span class="string">(HY000):</span> <span class="string">You</span> <span class="string">do</span> <span class="string">not</span> <span class="string">have</span> <span class="string">the</span> <span class="string">SUPER</span> <span class="string">privilege</span> <span class="string">and</span></span><br><span class="line"><span class="string">binary</span> <span class="string">logging</span> <span class="string">is</span> <span class="string">enabled</span> <span class="string">(you</span> <span class="string">*might*</span> <span class="string">want</span> <span class="string">to</span> <span class="string">use</span> <span class="string">the</span> <span class="string">less</span> <span class="string">safe</span> <span class="string">log_bin_trust_routine_creators</span> <span class="string">variable)</span></span><br></pre></td></tr></table></figure>

<h3 id="原因分析-3"><a href="#原因分析-3" class="headerlink" title="原因分析"></a>原因分析</h3><p>有些操作要禁止掉对 SUPER 权限的要求，要处理可以设置 <code>log_bin_trust_routine_creators</code> 全局系统变量为 <code>1</code>，默认地，这个变量值为 <code>0</code>。</p>
<h3 id="解决方法-3"><a href="#解决方法-3" class="headerlink" title="解决方法"></a>解决方法</h3><p>直接在数据库进行修改，也可以在启动服务器之时用 <code>--log-bin-trust-routine-creators</code> 选项来设置允许这个变量。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; SET GLOBAL log_bin_trust_routine_creators = 1;</span><br></pre></td></tr></table></figure>

<h2 id="删除线程"><a href="#删除线程" class="headerlink" title="删除线程"></a>删除线程</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/sh</span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">  n=`mysqladmin processlist -h 127.0.0.1 -uroot -pHaier@123|grep -i sleep |wc -l`</span><br><span class="line">  date=`date +%Y%m%d\[%H:%M:%S]`</span><br><span class="line">  echo $n</span><br><span class="line"></span><br><span class="line">  if [ "$n" -gt 10 ]</span><br><span class="line">  then</span><br><span class="line">  for i in `mysqladmin processlist -h 127.0.0.1 -uroot -pHaier@123|grep -i Query |awk '&#123;print $2&#125;'`</span><br><span class="line">  do</span><br><span class="line">     mysqladmin -h 127.0.0.1 -uroot -pHaier@123 kill $i</span><br><span class="line">  done</span><br><span class="line">  echo "sleep is too many I killed it " &gt;&gt; /data/sleep.log</span><br><span class="line">  echo "$date : $n" &gt;&gt; /data/sleep.log</span><br><span class="line">  fi</span><br><span class="line">  sleep 1</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 构建知识体系</title>
    <url>/blog/2019/07/12/mysql-cookbook/</url>
    <content><![CDATA[<h2 id="InnoDB-存储引擎架构"><a href="#InnoDB-存储引擎架构" class="headerlink" title="InnoDB 存储引擎架构"></a>InnoDB 存储引擎架构</h2><p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1g5tdauxzpzj313i0u0qag.jpg" alt></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>国产数据库的演进历史</title>
    <url>/blog/2019/07/12/db-evolution/</url>
    <content><![CDATA[<h2 id="1949-1979"><a href="#1949-1979" class="headerlink" title="1949-1979"></a><strong>1949-1979</strong></h2><ul>
<li>1956年，周恩来总理亲自领导了“科学技术发展十二年规划”，标志着我国计算机事业的开始。</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134141.jpg" alt="中国仿制前苏联大型机"></p>
<ul>
<li>随后十年动乱，中国计算机和数据库的研究基本停滞成为空白。</li>
<li>70年代末，关系型数据库的概念刚刚兴起，1975年微软成立，1977年 Oracle 成立（70年代是美国的黄金年代）。OLTP 联机交易处理也称为面向交易的处理过程让数据库变得重要起来，也就是说计算机不但承担的是结果的纯计算，现在要实时承担交易过程和结果记录。</li>
</ul>
<h2 id="1979-1989"><a href="#1979-1989" class="headerlink" title="1979-1989"></a><strong>1979-1989</strong></h2><ul>
<li><p>1977年，中国人民大学萨师煊教授和王珊教授编著《数据库系统概论》，并召开数据库年会。</p>
</li>
<li><p>80年代，中美正式建交，中国信息技术建设开始和世界开始接轨。自动化还没上马，信息化更是难寻踪迹，在数据库的研发和投入上，靠的是零星的科研力量和资金。这个时期，产、学、研是三条平行线。</p>
</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134142.jpg" alt="主流关系型数据库家谱图"></p>
<h2 id="1989-1999"><a href="#1989-1999" class="headerlink" title="1989-1999"></a><strong>1989-1999</strong></h2><ul>
<li>80年代以研究所和大学为主的国家投入，那么在90年代产出这样几家国产数据库公司</li>
</ul>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134143.png" alt="90年代863研究计划"></p>
<h2 id="1999-2009"><a href="#1999-2009" class="headerlink" title="1999-2009"></a><strong>1999-2009</strong></h2><p>90年代，改革开放掀起的热潮，开始了外资和中国市场合作的黄金十年，外资在我国空前发展阶段，Oracle 和 DB2 横扫市场所有产品。在中国数据库公司刚刚成立想开发产品追赶 Oracle 的时候，市场的需求已经迸发出来，国产产品接不住，所以市场就是 Oracle 的天下了。这样出现了死循环：</p>
<ul>
<li>产品初期需要不断的试错和验证的机会。</li>
<li>客户没有时间和办法陪着试错和成长。</li>
<li>没有客户，生态就更差，更没有办法进行产品的投入和迭代。</li>
</ul>
<h2 id="2009-2019"><a href="#2009-2019" class="headerlink" title="2009-2019"></a>2009-2019</h2><p>互联网崛起的这十年，国内数据库厂商：</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134144.png" alt="db"></p>
<p><strong>去IOE</strong>：IBM 小型机、Oracle 数据库、EMC 存储设备</p>
<p><strong>取代品</strong>：X86 服务器、MySQL 数据库、分布式存储</p>
<blockquote>
<p>IBM大型机：IBM Z系列，目前市场无性能相当替代品，国家民生、银行电信等关键核心业务</p>
</blockquote>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134144.jpg" alt="big"></p>
<blockquote>
<p>小型机：UNIX 服务器，IBM 的 POWER 处理器 + AIX 操作系统，RAS（Reliability， Availability，Serviceability 高可靠性、高可用性、高服务性）特性。解决方案从处理器到平台、操作系统、中间件，再到应用软件，都出于自家门下。好处就是各层次之间能有一个较好的优化和配合，让用户在从采购到部署、再到应用和维护的过程中无需自己太过操心。反过来说，这种模式使得用户容易被厂商锁定，后续IT系统采购、维护和应用，全部处于被垄断后的弱势地位，采购后的维护和更新也只能被动接受。</p>
</blockquote>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134145.png" alt="small"></p>
<blockquote>
<p>x86 服务器：成本低、易扩展、易维护更新</p>
</blockquote>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134145.jpg" alt="x86"></p>
<ul>
<li>ARM 架构：广泛适用于移动端，优点是低功耗。</li>
<li>x86 架构：广泛用于 PC 端，便宜、易扩展、易集成第三方软件。</li>
</ul>
<p><strong>中国 IT 信息技术的崛起</strong></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134146.jpg" alt="it信息技术"></p>
<p><strong>国内工业级应用软件发展</strong></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134148.jpg" alt="it信息技术"></p>
<p><strong>服务器演进</strong></p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134149.jpg" alt="服务器"></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
  </entry>
  <entry>
    <title>MySQL · 性能调优</title>
    <url>/blog/2019/07/11/mysql-tuning/</url>
    <content><![CDATA[<h2 id="SQL-优化"><a href="#SQL-优化" class="headerlink" title="SQL 优化"></a>SQL 优化</h2><ul>
<li><p>定位低效率的SQL语句 - 慢查询日志。</p>
</li>
<li><p>通过<code>explain</code>了解SQL的执行计划。</p>
<ul>
<li><p><code>select_type</code>：查询类型（SIMPLE - 简单查询、PRIMARY - 主查询、UNION - 并集、SUBQUERY - 子查询）。</p>
</li>
<li><p><code>table</code>：输出结果集的表。</p>
</li>
<li><p><code>type</code>：访问类型（ALL - 全表查询性能最差、index、range、ref、eq_ref、const、NULL）。</p>
</li>
<li><p><code>possible_keys</code>：查询时可能用到的索引。</p>
</li>
<li><p><code>key</code>：实际使用的索引。</p>
</li>
<li><p><code>key_len</code>：索引字段的长度。</p>
</li>
<li><p><code>rows</code>：扫描的行数，行数越少肯定性能越好。</p>
</li>
<li><p><code>extra</code>：额外信息。</p>
</li>
</ul>
</li>
<li><p>通过 <code>show profiles</code> 和 <code>show profile for query</code> 分析SQL。</p>
</li>
<li><p>优化 CRUD 操作</p>
<ul>
<li>优化 <code>insert</code> 语句</li>
<li>优化 <code>order by</code> 语句</li>
<li>优化 <code>group by</code> 语句</li>
<li>优化 <code>join</code> 语句</li>
<li>优化 <code>or</code> 语句</li>
<li>优化分页</li>
</ul>
</li>
<li><p><strong>pt-query-digest</strong></p>
</li>
<li><p><strong>explain</strong></p>
</li>
<li><p><strong>show profiling</strong></p>
</li>
</ul>
<h2 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h2><ol>
<li>调整max_connections</li>
<li>调整back_log</li>
<li>调整table_open_cache</li>
<li>调整thread_cache_size</li>
<li>调整innodb_lock_wait_timeout</li>
<li>调整<code>innodb_buffer_pool_size</code>：InnoDB数据和索引的内存缓冲区大小，以字节为单位，这个值设置得越高，访问表数据需要进行的磁盘I/O操作就越少，如果可能甚至可以将该值设置为物理内存大小的80%。</li>
</ol>
<h2 id="架构优化"><a href="#架构优化" class="headerlink" title="架构优化"></a>架构优化</h2><ul>
<li>分库分表（水平拆分/垂直拆分）</li>
<li>读写分离</li>
</ul>
<h2 id="SQL是怎样执行的-？"><a href="#SQL是怎样执行的-？" class="headerlink" title="SQL是怎样执行的 ？"></a>SQL是怎样执行的 ？</h2><p>MySQL 是典型的 <code>C/S</code> 架构，即 <code>Client/Server</code> 架构，服务器端程序使用的 <code>mysqld</code>。整体的流程如下图所示：</p>
<p><img src="http://ww3.sinaimg.cn/large/006y8mN6ly1g6ap6gn423j30p00dc40x.jpg" alt="img"></p>
<p>MySQL 由三层组成：</p>
<p>1）连接层：客户端和服务器端建立连接，客户端发送 <code>SQL</code> 至服务器端；</p>
<p>2）SQL 层：对 <code>SQL</code> 语句进行查询处理；</p>
<p>3）存储引擎层：与数据库文件打交道，负责数据的存储和读取。</p>
<p>SQL层的结构：</p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1g64xrbwlygj30k004b0sp.jpg" alt="img"></p>
<ul>
<li><strong>连接器</strong>：客户端与 Server 建立连接，并发送 SQL 至 Server（<strong>建立连接</strong>，<strong>用户验证</strong>，<strong>管理连接</strong>）</li>
<li><strong>查询缓存</strong>：Server 如果在查询缓存中发现了这条 SQL 语句，就会直接将结果返回给客户端；如果没有，就进入到解析器阶段。需要说明的是，因为查询缓存往往效率不高，所以在 MySQL8.0 之后就抛弃了这个功能。（<strong>命中返回</strong>，<strong>未命中更新缓存</strong>）</li>
<li><strong>解析器</strong>：对 SQL 语句进行语法分析、语义分析（<strong>语法分析</strong>，<strong>语义分析</strong>）</li>
<li><strong>优化器</strong>：在优化器中会确定 SQL 语句的执行路径，比如是根据全表检索，还是根据索引来检索等（<strong>选择索引</strong>，<strong>生成执行计划</strong>）</li>
<li><strong>执行器</strong>：在执行之前需要判断该用户是否具备权限，如果具备权限就执行 SQL 查询并返回结果。（<strong>验证权限</strong>，<strong>返回结果</strong>）</li>
</ul>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79ly1g61nat9jo2j31400u0tpc.jpg" alt="img"></p>
<p>SQL 语句在 MySQL 中的流程是：SQL 语句 → 缓存查询 → 解析器 → 优化器 → 执行器</p>
<p>详细执行过程：</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79ly1g64togewmoj30m80ieq5a.jpg" alt="img"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">举例：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h3 id="连接器"><a href="#连接器" class="headerlink" title="连接器"></a>连接器</h3><p>负责与客户端建立连接、验证权限、管理连接。一条 SQL 语句从客户端传过来首先会创建一个连接，用 <code>username</code> 和 <code>password</code> 认证身份，连接完成后如果没有其他操作便处于 <code>Sleep</code> 状态，默认 <code>8h</code> 自动断开空闲连接。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">连接命令：</span><br><span class="line">mysql -h<span class="variable">$ip</span> -P<span class="variable">$port</span> -u<span class="variable">$user</span> -p</span><br><span class="line"></span><br><span class="line">环节：</span><br><span class="line"><span class="number">1</span>）TCP握手，建立连接</span><br><span class="line"><span class="number">2</span>）认证身份</span><br><span class="line"><span class="number">3</span>）获取权限</span><br></pre></td></tr></table></figure>

<p><strong>长连接</strong>：持续使用同一个连接处理请求，维持长连接需要消耗内存。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">基本步骤：建立连接 -&gt; 数据传输...（保持连接）… 数据传输 -&gt; 关闭连接</span><br><span class="line">优点：省去较多TCP建立和关闭的操作，减少浪费，节约时间</span><br><span class="line">适合场景：操作频繁，点对点的通讯，且连接数不能太多。例如：数据库的连接用长连接</span><br></pre></td></tr></table></figure>

<p><strong>短连接</strong>：一个连接仅执行几次后便断开，然后重新建立连接。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">基本步骤：建立连接 -&gt; 数据传输 -&gt; 关闭连接</span><br><span class="line">优点：管理起来比较简单，存在的连接都是有用的连接，不需要额外的控制手段</span><br><span class="line">适合场景：并发量大，但每个用户无需频繁操作情况下需用短连接好。例如：web 网站</span><br></pre></td></tr></table></figure>

<p><strong>连接池</strong>：是一些网络代理服务或应用服务器的特性，被所有连接的客户端共享使用，连接池可以加速连接，也可以减少连接，降低服务器负载。</p>
<p><strong>线程池</strong>：MySQL 每个连接都分配一个单独的线程，线程的创建和销毁都有一定的开销，当线程过多都处于活跃状态，会导致频繁的上下文切换，从而造成巨大的开销，大量短查询的业务场景推荐使用线程池。</p>
<h3 id="查询缓存"><a href="#查询缓存" class="headerlink" title="查询缓存"></a>查询缓存</h3><p>建立连接后，MySQL 在执行查询时会先对查询缓存进行查询，之前执行过的语句会以 <code>key-value</code> 形式被直接缓存在内存当中， <code>key</code> 是语句、<code>value</code> 是查询结果，查询后有 2 种结果：</p>
<ul>
<li>查询缓存命中：直接返回结果（效率很高）</li>
<li>查询缓存未命中： 继续执行，执行完成后，结果会被存入查询缓存中</li>
</ul>
<p>查询缓存默认是关闭的，由 <code>query_cache_type</code> 和 <code>query_cache_size</code> 两个参数控制：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">query_cache_type：否打开查询缓存，可以设置为OFF、ON和DEMAND，DEMAND表示只有在查询语句中明确写明SQL_CACHE的语句才会放入查询缓存</span><br><span class="line">query_cache_size：查询缓存使用的总内存空间</span><br></pre></td></tr></table></figure>

<blockquote>
<p>备注：<strong>生产环境不推荐使用查询缓存</strong>，因为只要有对表数据更新，表上的所有缓存都会清空然后重新创建缓存。查询缓存适合有大量相同查询的应用，不适合有大量数据更新的应用，MySQL 8.0 直接将查询缓存功能删掉了，可以使用 <code>select SQL_CACHE * from user where id = 1</code> 按需使用查询缓存。</p>
</blockquote>
<h3 id="分析器"><a href="#分析器" class="headerlink" title="分析器"></a>分析器</h3><p>先做词法分析，分析 SQL 语句中的关键字，生成对应的解析树，然后做语法分析，判断是否有语法错误。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">'xx'</span> <span class="keyword">FROM</span> <span class="string">'xx'</span> <span class="keyword">WHERE</span> <span class="string">'xx'</span></span><br></pre></td></tr></table></figure>

<h3 id="优化器"><a href="#优化器" class="headerlink" title="优化器"></a>优化器</h3><p>在表中有多个索引的时候，由优化器决定使用哪个索引，或者多表关联（join）的时候决定连接顺序，<strong>选择效率高、代价小的方案，生成执行计划</strong>。</p>
<p>优化器有两类：基于规则的优化器 (Rule-Based Optimizer，<strong>RBO</strong>) 和基于代价的优化器 (Cost-Based Optimizer，<strong>CBO</strong>)。基于代价的优化器，是根据优化规则对关系表达式进行转换，这里的转换是说一个关系表达式经过优化规则后会生成另外一个关系表达式，同时原有表达式也会保留，经过一系列转换后会生成多个执行计划，然后 CBO 会根据统计信息和代价模型 (Cost Model) 计算每个执行计划的 Cost，从中挑选 Cost 最小的执行计划。由上可知，CBO 中有两个依赖：统计信息和代价模型，统计信息的准确与否、代价模型的合理与否都会影响 CBO 选择最优计划。</p>
<h3 id="执行器"><a href="#执行器" class="headerlink" title="执行器"></a>执行器</h3><p>开始执行之前，先验证是否有读写权限，没有则返回权限错误，有的话调用存储引擎 API 接口获取执行结果集，返回给客户端。</p>
<h2 id="SQL-语句的执行时间分析"><a href="#SQL-语句的执行时间分析" class="headerlink" title="SQL 语句的执行时间分析"></a>SQL 语句的执行时间分析</h2><p>工具：通过 MySQL <strong>profiling</strong> 来分析资源使用情况。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; select @@profiling;</span><br></pre></td></tr></table></figure>

<p>profiling = 0 代表关闭，我们需要把 profiling 打开，即设置为 1：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; set profiling=1;</span><br></pre></td></tr></table></figure>

<p>执行任何一个查询：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from students;</span><br><span class="line">mysql&gt; show profile；</span><br><span class="line">mysql&gt; show profile for query 2;  # 查询指定的 Query ID</span><br></pre></td></tr></table></figure>

<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g6apont0v2j30y50u04lx.jpg" alt="img"></p>
<h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>在 MySQL 中，当数据量增长的特别大的时候就需要用到索引来优化 SQL 语句，使用 <code>Explain</code> 来查看 SQL 语句的执行计划，是优化 SQL 最有效地的一种手段。</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><strong>语法</strong>：<code>explain + SQL</code></p>
<p><strong>示例</strong>：<code>explain select * from customer</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select * from customer;</span><br><span class="line">+<span class="comment">----+-------------+----------+------+---------------+------+---------+------+--------+</span></span><br><span class="line">| id | select_type | table    | type | possible_keys | key  | key_len | ref  | rows   | </span><br><span class="line">+<span class="comment">----+-------------+----------+------+---------------+------+---------+------+--------+</span></span><br><span class="line">|  1 | SIMPLE      | customer | ALL  | NULL          | NULL | NULL    | NULL | 936161 |       </span><br><span class="line">+<span class="comment">----+-------------+----------+------+---------------+------+---------+------+--------+</span></span><br><span class="line">1 row in <span class="keyword">set</span></span><br></pre></td></tr></table></figure>

<h3 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h3><h4 id="id"><a href="#id" class="headerlink" title="id"></a>id</h4><p><strong>含义</strong>：SELECT 标识符，SQL 执行顺序的标识。</p>
<p><strong>三种情况</strong>：</p>
<ul>
<li><p><code>id</code> 相同，执行顺序由上至下。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select t2.* from t1,t2,t3 where t1.id = t2.id and t1.id = t3.id and t1.other_column = '';</span><br><span class="line">+<span class="comment">----+-------------+-------+--------+---------------+---------+---------+---------------+------+-------------+</span></span><br><span class="line">| id | select_type | table | type   | possible_keys | key     | key_len | ref           | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+--------+---------------+---------+---------+---------------+------+-------------+</span></span><br><span class="line">| 1  | SIMPLE      | t1    | ALL    | PRIMARY       | NULL    | NULL    | NULL          | 5    | Using where |</span><br><span class="line">| 1  | SIMPLE      | t2    | eq_ref | PRIMARY       | PRIMARY | 4       | test_db.t1.id | 1    |             |</span><br><span class="line">| 1  | SIMPLE      | t3    | eq_ref | PRIMARY       | PRIMARY | 4       | test_db.t1.id | 1    | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+--------+---------------+---------+---------+---------------+------+-------------+</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>id</code> 不同，如果是子查询，<code>id</code> 的序号会递增，<code>id</code> 值越大优先级越高，越先被执行。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select t2.* from t2 where id = (select id from t1 where id = (select t3.id from t3 where t3.other_column = ''));</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+-------+------+-------------+</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key     | key_len | ref   | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+-------+------+-------------+</span></span><br><span class="line">| 1  | PRIMARY     | t2    | const | PRIMARY       | PRIMARY | 4       | const | 1    |             |</span><br><span class="line">| 2  | SUBQUERY    | t1    | const | PRIMARY       | PRIMARY | 4       |       | 1    | Using index |</span><br><span class="line">| 3  | SUBQUERY    | t3    | ALL   | NULL          | NULL    | NULL    | NULL  | 5    | Using where |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+-------+------+-------------+</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>id</code> 有相同也有不同，<code>id</code> 值越大，优先级越高，越先执行；<code>id</code> 相同，则认为是一组，从上往下顺序执行。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select t2.* from t2 where id = (select id from t1 where id = (select t3.id from t3 where t3.other_column = ''));</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+-------+------+-------------+</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key     | key_len | ref   | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+-------+------+-------------+</span></span><br><span class="line">| 1  | PRIMARY     | t2    | const | PRIMARY       | PRIMARY | 4       | const | 1    |             |</span><br><span class="line">| 2  | SUBQUERY    | t1    | const | PRIMARY       | PRIMARY | 4       |       | 1    | Using index |</span><br><span class="line">| 3  | SUBQUERY    | t3    | ALL   | NULL          | NULL    | NULL    | NULL  | 5    | Using where |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+-------+------+-------------+</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="select-type"><a href="#select-type" class="headerlink" title="select_type"></a>select_type</h4><p><strong>含义</strong>：查询类型，主要用于区别普通查询、联合查询、子查询等复杂查询。</p>
<p><strong>六种类型</strong>：</p>
<ul>
<li><strong>SIMPLE</strong>：简单的 <code>select</code> 查询，查询中不包含子查询或者 <code>union</code> 联合查询。</li>
<li><strong>PRIMARY</strong>：查询中若包含任何复杂的子部分，最外层查询则被标记为 <code>PRIMARY</code>。</li>
<li><strong>SUBQUERY</strong>：在 <code>select</code>或 <code>where</code> 列表中包含了子查询。</li>
<li><strong>DERIVED</strong>：在 <code>from</code> 列表中包含的子查询被标记为 <code>DERIVED</code>（衍生），MySQL 会递归执行这些子查询，把结果放在临时表里。</li>
<li><strong>UNION</strong>：若第二个 <code>select</code> 出现在 <code>union</code> 之后，则被标记为 <code>union</code>；若 <code>union</code> 包含在 <code>from</code> 字句的查询中，外层 <code>select</code> 将被标记为 <code>DERIVED</code>。</li>
<li><strong>UNION RESULT</strong>：两种 <code>union</code> 语句的合并。</li>
</ul>
<h4 id="table"><a href="#table" class="headerlink" title="table"></a>table</h4><p><strong>含义</strong>：查询涉及的表或者衍生表。</p>
<h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p><strong>含义</strong>：显示连接使用的类型。常见的有7种，从最好到最差排序：<strong>system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; all</strong>（<strong>全表扫描</strong>），一般来说 <strong>至少达到 range 级别，最好达到 ref</strong>。</p>
<p><strong>七种类型</strong>：</p>
<ul>
<li><p><strong>system</strong>：表只有一行记录，这是 <code>const</code> 类型的特例，只能用于 <code>myisam</code> 和 <code>memory</code> 表，可以忽略不计。</p>
</li>
<li><p><strong>const</strong>：表示通过索引一次就找到了，<code>const</code> 用于 <code>primary key</code> 或者 <code>unique</code> 索引，因为只匹配一行数据，所以很快，如将主键置于 <code>where</code> 列表中，MySQL 就能将该查询转换为一个常量。</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select * from (select * from t1 where id =1) d1;</span><br><span class="line">+<span class="comment">----+-------------+------------+--------+---------------+---------+---------+------+----</span></span><br><span class="line">| id | select_type | table      | type   | possible_keys | key     | key_len | ref  | rows | Extra |</span><br><span class="line">+<span class="comment">----+-------------+------------+--------+---------------+---------+---------+------+----</span></span><br><span class="line">|  1 | PRIMARY     | &lt;derived2&gt; | system | NULL          | NULL    | NULL    | NULL |    1 |       |</span><br><span class="line">|  2 | DERIVED     | t1         | const  | PRIMARY       | PRIMARY | 4       |      |    1 |       |</span><br><span class="line">+<span class="comment">----+-------------+------------+--------+---------------+---------+---------+------+----</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>eq_ref</strong>：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配，常见于主键或唯一索引扫描。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select * from t1,t2 where t1.id = t2.id;</span><br><span class="line">+<span class="comment">----+-------------+-------+--------+---------------+---------+---------+---------------</span></span><br><span class="line">| id | select_type | table | type   | possible_keys | key     | key_len | ref           | rows | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-------+--------+---------------+---------+---------+---------------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | ALL    | PRIMARY       | NULL    | NULL    | NULL          |    5 |       |</span><br><span class="line">|  1 | SIMPLE      | t2    | eq_ref | PRIMARY       | PRIMARY | 4       | test_db.t1.id |    1 |       |</span><br><span class="line">+<span class="comment">----+-------------+-------+--------+---------------+---------+---------+---------------</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>ref</strong>：非唯一索引或者主键扫描，或者使用了<strong>最左前缀规则</strong>索引的查询，它返回匹配某个单独值的所有行，然而它可能会找到多个符合条件的行，所以它应该属于查找和扫描的混合体。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; create index idx_name on t1(name);</span><br><span class="line">mysql&gt; explain select * from t1 where name ='Tim';</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+-------+------+------</span></span><br><span class="line">| id | select_type | table | type | possible_keys | key  | key_len | ref   | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+-------+------+------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | ref  | idx_name          | idx_name  | 92      | const |    1 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+-------+------+------</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>range</strong>：只检索给定范围的行，使用一个索引来选择行。<code>key</code>列显示使用了哪个索引，一般就是在你的 <code>where</code>语句中出现了 <code>between</code>、<code>&lt;&gt;</code>、<code>in</code> 等查询。这种范围扫描索引比全表扫描要好，因为它只需要开始于索引的某一点，而结束于另一点，不用扫描全部索引。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select * from t1 where id between 2 and 5;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+------+---</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key     | key_len | ref  | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+------+---</span></span><br><span class="line">|  1 | SIMPLE      | t1    | range | PRIMARY       | PRIMARY | 4       | NULL |    3 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+------+---</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>index</strong>：表示全索引扫描 (full index scan)，<code>index</code> 与 <code>all</code> 区别为 <code>index</code> 类型只扫描所有的索引不扫描数据，通常比 <code>all</code> 快，因为索引文件通常比数据文件小。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select id from t1;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+------+---</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key     | key_len | ref  | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+------+---</span></span><br><span class="line">|  1 | SIMPLE      | t1    | index | NULL          | PRIMARY | 4       | NULL |    6 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+------+---</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>all</strong>：表示全表扫描，这个类型的查询是性能最差的查询之一。通常来说，查询不应该出现 <code>all</code> 类型的查询, 因为这样的查询在数据量大的情况下，对数据库的性能是巨大的灾难。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select * from t2 where other_column = '';</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+------+------+-------</span></span><br><span class="line">| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+------+------+-------</span></span><br><span class="line">|  1 | SIMPLE      | t2    | ALL  | NULL          | NULL | NULL    | NULL |    5 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+------+------+-------</span></span><br></pre></td></tr></table></figure>

<h4 id="possible-keys"><a href="#possible-keys" class="headerlink" title="possible_keys"></a>possible_keys</h4><p><strong>含义</strong>：显示可能应用在这张表中的索引。查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询实际使用。</p>
<h4 id="key"><a href="#key" class="headerlink" title="key"></a>key</h4><p><strong>含义</strong>：实际使用的索引。如果为 <code>NULL</code>，则没有使用索引，<code>key</code> 参数可以作为使用了索引的判断标准。</p>
<h4 id="key-len"><a href="#key-len" class="headerlink" title="key_len"></a>key_len</h4><p><strong>含义</strong>：使用的索引的长度。<code>key_len</code> 显示的值为索引字段的最大可能长度，并非实际使用长度。在不损失精确性的情况下，长度越短越好。</p>
<h4 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h4><p><strong>含义</strong>：显示索引的哪一列被使用了，如果可能的话是一个常数，哪些列或常量被用于查找索引列上的值。</p>
<h4 id="rows"><a href="#rows" class="headerlink" title="rows"></a>rows</h4><p><strong>含义</strong>：根据表统计信息及索引选用情况，大致估算出找到所需的记录所需要读取的行数，当然越小越好。</p>
<blockquote>
<p>Tips：explain 结果中，join 的查询代价可以用依次连乘 rows 估算。</p>
</blockquote>
<h4 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h4><p><strong>含义</strong>：附加信息，提供了与操作有关联的信息。</p>
<p><strong>三种类型</strong>：</p>
<ul>
<li><strong>Using filesort</strong>：比较危险。说明 MySQL 会对数据使用一个外部的索引排序，而不是按照表内的索引顺序进行读取。MySQL 中无法利用索引完成的排序操作称之为文件排序，需要进行额外的步骤来发现如何对返回的行排序。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select other_column from t1 where other_column = 'A' order by other_column3;</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+-------+------+---------</span></span><br><span class="line">| id | select_type | table | type | possible_keys | key  | key_len | ref   | rows | Extra                       |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+-------+------+---------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | ref  | idx           | idx  | 92      | const |    1 | Using where; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+------+---------+-------+------+---------</span></span><br></pre></td></tr></table></figure>

<p>优化案例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; create index u_idx2 on t1(other_column,other_column2,other_column3);</span><br><span class="line">mysql&gt; explain select other_column from t1 where other_column = 'A' order by other_column2,other_column3;</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+--------+---------+-------+------+-------</span></span><br><span class="line">| id | select_type | table | type | possible_keys | key    | key_len | ref   | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+--------+---------+-------+------+-------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | ref  | idx,u_idx2    | u_idx2 | 92      | const |    1 | Using where |</span><br><span class="line">+<span class="comment">----+-------------+-------+------+---------------+--------+---------+-------+------+-------</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>Using temporary</strong>：比较危险，使用了临时表保存中间结果。这通常发生在对不同的列集进行 <code>ORDER BY</code> 上和 <code>GROUP BY</code> 上，拖慢了查询速度。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select other_column from t1 where other_column in ('A','B','C') group by other_column3;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key    | key_len | ref  | rows | Extra                                                     |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | range | idx,u_idx2    | u_idx2 | 92      | NULL |    3 | Using where; Using index; Using temporary; Using filesort |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br></pre></td></tr></table></figure>

<p>优化案例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select other_column from t1 where other_column in ('A','B','C') group by other_column,other_column2;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key    | key_len | ref  | rows | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | range | idx,u_idx2    | u_idx2 | 92      | NULL |    3 | Using where; Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>Using index</strong>：表示相应的 <code>select</code> 操作中使用了覆盖索引，避免访问了表的数据行，效率不错。如果同时出现 <code>using where</code>，表明索引被用来执行索引键值的查找；如果没有同时出现 <code>using where</code>，表明索引用来读取数据而非执行查找动作。</p>
<p><strong>覆盖索引</strong>： 就是 <code>select</code> 的数据列只用从索引中就能够取得，不必读取数据行，MySQL 可以利用索引返回 <code>select</code> 列表中的字段，而不必根据索引再次读取数据文件，换句话说查询列要被所建的索引覆盖。注意的是，如果要使用覆盖索引，一定要注意 <code>select</code> 列表中只读取出需要的列，而不是 <code>select *</code>，因为如果将所有字段一起做索引会导致索引文件过大，降低查询性能。</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select other_column from t1 where other_column in ('A','B','C') group by other_column,other_column2;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key    | key_len | ref  | rows | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | range | idx,u_idx2    | u_idx2 | 92      | NULL |    3 | Using where; Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; explain select other_column,other_column2,other_column3 from t1;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key    | key_len | ref  | rows | Extra       |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br><span class="line">|  1 | SIMPLE      | t1    | index | NULL          | u_idx2 | 276     | NULL |    6 | Using index |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+--------+---------+------+------+-------</span></span><br></pre></td></tr></table></figure>

<p>Tips: 在 show table status 结果中看到的 Rows 用于表示表的当前行数。对于 MyISAM 表这是一个精确值，但对InnoDB 这是个估算值。</p>
<h2 id="SQL调优"><a href="#SQL调优" class="headerlink" title="SQL调优"></a>SQL调优</h2><p>INSERT 性能：MySQL 用单条 INSERT 语句处理多个插入比使用多条 INSERT 语句快。</p>
<p>从表中删除所有行，不要使用 DELETE ，建议使用 TRUNCATE TABLE 语句。TRUNCATE 实际是删除原来的表并重新创建一个表，而不是逐行删除表中的数据。</p>
<h2 id="索引调优"><a href="#索引调优" class="headerlink" title="索引调优"></a>索引调优</h2><p><strong>测试环境</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t1`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t1`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`other_column`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`other_column2`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`other_column3`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx`</span> (<span class="string">`other_column`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`u_idx`</span> (<span class="string">`other_column2`</span>,<span class="string">`other_column3`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`u_idx2`</span> (<span class="string">`other_column`</span>,<span class="string">`other_column2`</span>,<span class="string">`other_column3`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=MyISAM AUTO_INCREMENT=<span class="number">7</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"><span class="comment">-- Records of t1</span></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t1`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'L'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t1`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'B'</span>, <span class="string">'E'</span>, <span class="string">'M'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t1`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'C'</span>, <span class="string">''</span>, <span class="string">'N'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t1`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">''</span>, <span class="string">'F'</span>, <span class="string">''</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t1`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'O'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t1`</span> <span class="keyword">VALUES</span> (<span class="string">'6'</span>, <span class="string">'A'</span>, <span class="string">'H'</span>, <span class="string">'P'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"><span class="comment">-- Table structure for t2</span></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t2`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t2`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`other_column`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx`</span> (<span class="string">`other_column`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=MyISAM AUTO_INCREMENT=<span class="number">6</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"><span class="comment">-- Records of t2</span></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t2`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'C'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t2`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'D'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t2`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'E'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t2`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">''</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t2`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'G'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"><span class="comment">-- Table structure for t3</span></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`t3`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t3`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`other_column`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=MyISAM AUTO_INCREMENT=<span class="number">6</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"><span class="comment">-- Records of t3</span></span><br><span class="line"><span class="comment">------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t3`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'F'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t3`</span> <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'G'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t3`</span> <span class="keyword">VALUES</span> (<span class="string">'3'</span>, <span class="string">'H'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t3`</span> <span class="keyword">VALUES</span> (<span class="string">'4'</span>, <span class="string">''</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`t3`</span> <span class="keyword">VALUES</span> (<span class="string">'5'</span>, <span class="string">'I'</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title>前端学习笔记</title>
    <url>/blog/2019/07/10/front/</url>
    <content><![CDATA[<h2 id="学习路径"><a href="#学习路径" class="headerlink" title="学习路径"></a>学习路径</h2><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134136.png" alt="前端技能图谱"></p>
<h2 id="如何搭建-一个-vue-项目？"><a href="#如何搭建-一个-vue-项目？" class="headerlink" title="如何搭建 一个 vue 项目？"></a>如何搭建 一个 vue 项目？</h2><h3 id="安装-node-环境"><a href="#安装-node-环境" class="headerlink" title="安装 node 环境"></a>安装 node 环境</h3><blockquote>
<p>下载 <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span> node -v</span><br><span class="line">v10.15.3</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> npm -v</span><br><span class="line">6.10.0</span><br></pre></td></tr></table></figure>

<blockquote>
<p>安装淘宝镜像，提高效率</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span> npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">C:\Users\01510886\AppData\Roaming\npm\cnpm -&gt; C:\Users\01510886\AppData\Roaming\npm\node_modules\cnpm\bin\cnpm</span><br><span class="line">+cnpm@6.1.0</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span> cnpm -v</span><br><span class="line">cnpm@6.1.0 (C:\Users\01510886\AppData\Roaming\npm\node_modules\cnpm\lib\parse_argv.js)</span><br><span class="line">npm@6.10.0 (C:\Users\01510886\AppData\Roaming\npm\node_modules\cnpm\node_modules\npm\lib\npm.js)</span><br><span class="line">node@10.15.3 (D:\software\nodejs\node.exe)</span><br><span class="line">npminstall@3.22.1 (C:\Users\01510886\AppData\Roaming\npm\node_modules\cnpm\node_modules\npminstall\lib\index.js)</span><br><span class="line">prefix=C:\Users\01510886\AppData\Roaming\npm</span><br><span class="line">win32 x64 6.1.7601</span><br><span class="line">registry=https://r.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h3 id="搭建-vue-项目环境"><a href="#搭建-vue-项目环境" class="headerlink" title="搭建 vue 项目环境"></a>搭建 vue 项目环境</h3><blockquote>
<p>安装 vue-cli</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span> npm install --global vue-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> vue list</span><br><span class="line">  Available official templates:</span><br><span class="line">  ★  browserify - A full-featured Browserify + vueify setup with hot-reload, linting &amp; unit testing.</span><br><span class="line">  ★  browserify-simple - A simple Browserify + vueify setup for quick prototyping.</span><br><span class="line">  ★  pwa - PWA template for vue-cli based on the webpack template</span><br><span class="line">  ★  simple - The simplest possible Vue setup in a single HTML file</span><br><span class="line">  ★  webpack - A full-featured Webpack + vue-loader setup with hot reload, linting, testing &amp; css extraction.</span><br><span class="line">  ★  webpack-simple - A simple Webpack + vue-loader setup for quick prototyping.</span><br></pre></td></tr></table></figure>

<blockquote>
<p>创建一个基于 webpack 模板的新项目</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ vue init webpack vue-test</span><br><span class="line"></span><br><span class="line">? Project name (vue-test)</span><br><span class="line">? Project name vue-test</span><br><span class="line">? Project description (A Vue.js project)</span><br><span class="line">? Project description A Vue.js project</span><br><span class="line">? Author (raohui &lt;raohui@haier.com&gt;)</span><br><span class="line">? Author raohui &lt;raohui@haier.com&gt;</span><br><span class="line">? Vue build standalone</span><br><span class="line">? Install vue-router? (Y/n) Y</span><br><span class="line">? Install vue-router? Yes</span><br><span class="line">? Use ESLint to lint your code? (Y/n) n</span><br><span class="line">? Use ESLint to lint your code? No</span><br><span class="line">? Set up unit tests (Y/n) n</span><br><span class="line">? Set up unit tests No</span><br><span class="line">? Setup e2e tests with Nightwatch? (Y/n) n</span><br><span class="line">? Setup e2e tests with Nightwatch? No</span><br><span class="line">? Should we run `npm install` <span class="keyword">for</span> you after the project has been created? (recom</span><br><span class="line">? Should we run `npm install` <span class="keyword">for</span> you after the project has been created? (recom</span><br><span class="line">mended) npm</span><br><span class="line"></span><br><span class="line">   vue-cli · Generated <span class="string">"vue-test"</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Installing project dependencies ...</span></span><br><span class="line"><span class="comment"># ========================</span></span><br><span class="line"></span><br><span class="line">npm WARN deprecated extract-text-webpack-plugin@<span class="number">3.0</span>.<span class="number">2</span>: Deprecated. Please use https://github.com/webpack-contrib/mini-css-extract-plugin</span><br><span class="line">npm WARN deprecated browserslist@<span class="number">2.11</span>.<span class="number">3</span>: Browserslist <span class="number">2</span> could fail on reading Browserslist &gt;<span class="number">3.0</span> config used <span class="keyword">in</span> other tools.</span><br><span class="line">npm WARN deprecated bfj-node4@<span class="number">5.3</span>.<span class="number">1</span>: <span class="keyword">Switch</span> to the `bfj` package <span class="keyword">for</span> fixes and new features!</span><br><span class="line">npm WARN deprecated flatten@<span class="number">1.0</span>.<span class="number">2</span>: I wrote this module a very long time ago; you should use something else.</span><br><span class="line">npm WARN deprecated browserslist@<span class="number">1.7</span>.<span class="number">7</span>: Browserslist <span class="number">2</span> could fail on reading Browserslist &gt;<span class="number">3.0</span> config used <span class="keyword">in</span> other tools.</span><br><span class="line"></span><br><span class="line">&gt; core-js@<span class="number">2.6</span>.<span class="number">9</span> postinstall D:\vue\vue-test\node_modules\core-js</span><br><span class="line">&gt; node scripts/postinstall || echo <span class="string">"ignore"</span></span><br><span class="line"></span><br><span class="line">Thank you <span class="keyword">for</span> using core-js ( https://github.com/zloirock/core-js ) <span class="keyword">for</span> polyfilling JavaScript standard library!</span><br><span class="line"></span><br><span class="line">The project needs your help! Please consider supporting of core-js on Open Collective or Patreon:</span><br><span class="line">&gt; https://opencollective.com/core-js</span><br><span class="line">&gt; https://www.patreon.com/zloirock</span><br><span class="line"></span><br><span class="line">Also, the author of core-js ( https://github.com/zloirock ) is looking <span class="keyword">for</span> a good job -)</span><br><span class="line"></span><br><span class="line">&gt; uglifyjs-webpack-plugin@<span class="number">0.4</span>.<span class="number">6</span> postinstall D:\vue\vue-test\node_modules\webpack\node_modules\uglifyjs-webpack-plugin</span><br><span class="line">&gt; node lib/post_install.js</span><br><span class="line"></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN ajv-keywords@<span class="number">3.4</span>.<span class="number">1</span> requires a peer of ajv@^<span class="number">6.9</span>.<span class="number">1</span> but none is installed. You must install peer dependencies yourself.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@<span class="number">1.2</span>.<span class="number">9</span> (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@<span class="number">1.2</span>.<span class="number">9</span>: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line"></span><br><span class="line">added <span class="number">1208</span> packages from <span class="number">669</span> contributors and audited <span class="number">11766</span> packages <span class="keyword">in</span> <span class="number">196.113</span>s</span><br><span class="line">found <span class="number">10</span> vulnerabilities (<span class="number">6</span> moderate, <span class="number">4</span> high)</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line"><span class="comment"># Project initialization finished!</span></span><br><span class="line"><span class="comment"># ========================</span></span><br><span class="line"></span><br><span class="line">To get started:</span><br><span class="line"></span><br><span class="line">  cd vue-test</span><br><span class="line">  npm run dev</span><br><span class="line"></span><br><span class="line">Documentation can be found at https://vuejs-templates.github.io/webpack</span><br><span class="line"></span><br><span class="line">tips:</span><br><span class="line">npm install -g npm （升级npm至最新版本）</span><br><span class="line">npm cache clean --force  (出现报错可清除缓存)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动项目</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cd vue-test</span><br><span class="line">$ npm run dev</span><br><span class="line"></span><br><span class="line">&gt; vue-test@<span class="number">1.0</span>.<span class="number">0</span> dev D:\vue\vue-test</span><br><span class="line">&gt; webpack-dev-server --inline --progress --config build/webpack.dev.conf.js</span><br><span class="line"></span><br><span class="line"> <span class="number">13</span>% building modules <span class="number">26</span>/<span class="number">33</span> modules <span class="number">7</span> active ...ue-test\src\components\HelloWorld.vue&#123; parser: <span class="string">"babylon"</span> &#125; is deprecated; we now treat it as &#123; parser: <span class="string">"babel"</span> &#125;.</span><br><span class="line"> <span class="number">95</span>% emitting DONE  Compiled successfully <span class="keyword">in</span> <span class="number">11954</span>ms14:<span class="number">06</span>:<span class="number">01</span></span><br><span class="line"></span><br><span class="line"> I  Your application is running here: http://localhost:<span class="number">8080</span></span><br></pre></td></tr></table></figure>

<h3 id="vue-项目目录解析"><a href="#vue-项目目录解析" class="headerlink" title="vue 项目目录解析"></a>vue 项目目录解析</h3><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-134137.png" alt="vue"></p>
<ul>
<li><p><strong>build</strong>：构建脚本目录</p>
</li>
<li><p><strong>config</strong>：项目配置目录</p>
</li>
<li><p><strong>node_modules</strong>：npm 加载的项目依赖目录</p>
</li>
<li><p><strong>src</strong>：开发目录，基本上要做的事情都集中在这个目录，里面包含几个目录和文件：</p>
<ul>
<li><p>assets：资源目录，放置一些图片或者公共 js、公共 css，这里的资源会被 webpack 构建</p>
</li>
<li><p>components：组件目录，我们写的组件就放在这个目录里面</p>
</li>
<li><p>router：前端路由，我们需要配置的路由路径写在 index.js 里面</p>
</li>
<li><p>App.vue：根组件</p>
</li>
<li><p>main.js：入口 js 文件</p>
</li>
</ul>
</li>
<li><p><strong>static</strong>：静态资源目录，如图片、字体等，不会被 webpack 构建</p>
</li>
<li><p><strong>index.html</strong>：首页入口文件，可以添加一些 meta 信息等</p>
</li>
<li><p><strong>package.json</strong>：npm 包配置文件，定义了项目的 npm 脚本，依赖包等信息</p>
</li>
</ul>
<h3 id="开发-Frist-vue-项目"><a href="#开发-Frist-vue-项目" class="headerlink" title="开发 Frist.vue 项目"></a>开发 Frist.vue 项目</h3><ul>
<li>components 目录下新建一个 views 目录，并新建组件 First.vue</li>
<li>router 目录下的 index.js 配置路由路径</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span></span><br><span class="line"><span class="keyword">import</span> First <span class="keyword">from</span> <span class="string">'@/components/views/First'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line"></span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">      component: HelloWorld</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      path: <span class="string">'/first'</span>,</span><br><span class="line">      name: <span class="string">'First'</span>,</span><br><span class="line">      component: First</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>First.vue 文件 template 写 html，script 写 js，style 写 css</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;first-app&quot;&gt;</span><br><span class="line">        &#123;&#123;msg&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &quot;First&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg: &quot;Welcome to FirstApp&quot;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="http://localhost:8080/#/first，查看页面效果" target="_blank" rel="noopener">http://localhost:8080/#/first，查看页面效果</a></li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Vue</tag>
        <tag>Element</tag>
      </tags>
  </entry>
  <entry>
    <title>SSH</title>
    <url>/blog/2019/07/08/linux-ssh/</url>
    <content><![CDATA[<h2 id="SSH-协议"><a href="#SSH-协议" class="headerlink" title="SSH 协议"></a>SSH 协议</h2><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><p><a href="https://www.ssh.com/" target="_blank" rel="noopener"><strong>SSH</strong></a>（Secure Shell Protocol，安全外壳协议），是建立在应用层和传输层基础上的 <strong>一种加密的网络安全传输协议</strong>。</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g679gryzmvj30i609ftc4.jpg" alt="img"></p>
<h3 id="OpenSSH"><a href="#OpenSSH" class="headerlink" title="OpenSSH"></a>OpenSSH</h3><p><a href="http://www.openssh.com/" target="_blank" rel="noopener"><strong>OpenSSH</strong></a>：是基于 <a href="https://baike.baidu.com/item/SSH" target="_blank" rel="noopener">SSH</a> 协议实现使用最广泛的 <strong>免费开源软件</strong>。</p>
<p><strong>优点</strong>：</p>
<ul>
<li>安全可靠</li>
<li>便捷</li>
</ul>
<p><strong><a href="http://www.openssh.com/" target="_blank" rel="noopener">OpenSSH</a> 套件工具</strong>：</p>
<p><strong>ssh</strong>：远程登录</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">语法：ssh</span> <span class="string">[-l</span> <span class="string">login_name]</span> <span class="string">[-p</span> <span class="string">port]</span> <span class="string">[user@host]</span></span><br><span class="line"></span><br><span class="line"><span class="string">示例：</span></span><br><span class="line"><span class="string">ssh</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.11</span>                       <span class="comment"># 不指定用户，默认使用当前宿主用户的用户名登录</span></span><br><span class="line"><span class="string">ssh</span> <span class="string">root@192.168.0.11</span>                  <span class="comment"># 指定用户登录</span></span><br><span class="line"><span class="string">ssh</span> <span class="string">root@192.168.0.11</span> <span class="bullet">-p</span> <span class="number">2222</span>          <span class="comment"># 指定端口，默认端口22</span></span><br><span class="line"><span class="string">ssh</span> <span class="string">root@192.168.0.11</span> <span class="string">"ls /usr/local"</span>  <span class="comment"># 远程登录后执行某命令</span></span><br><span class="line"></span><br><span class="line"><span class="string">备注：配置文件/etc/ssh/sshd_config，修改ssh登录端口和禁止root登录，可以防止被端口扫描</span></span><br></pre></td></tr></table></figure>

<p><strong>sshd</strong>：服务端进程服务</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">服务端修改文件配置：vim</span> <span class="string">/etc/ssh/sshd_config</span> </span><br><span class="line"><span class="string">配置完成之后要重启服务：systemctl</span> <span class="string">restart</span> <span class="string">sshd.service</span></span><br></pre></td></tr></table></figure>

<p><strong>scp</strong>：Secure Copy，远程安全拷贝文件和目录（加密）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">语法：scp</span> <span class="string">[-P</span> <span class="string">port]</span> <span class="string">[file|folder]</span> <span class="string">[user@host]:[remote_folder]</span></span><br><span class="line"></span><br><span class="line"><span class="string">示例：</span></span><br><span class="line"><span class="string">scp</span> <span class="string">mysql.sh</span> <span class="string">user@host:/tmp</span>      <span class="comment"># 本地文件拷贝到远程目录</span></span><br><span class="line"><span class="string">scp</span> <span class="bullet">-r</span> <span class="string">mysqldata</span> <span class="string">user@host:/tmp</span>  <span class="comment"># 本地目录拷贝到远程目录</span></span><br><span class="line"><span class="string">scp</span> <span class="string">root@host:/tmp</span> <span class="string">file</span>          <span class="comment"># 文件下载</span></span><br><span class="line"><span class="string">scp</span> <span class="bullet">-P</span> <span class="number">10022</span> <span class="string">/usr/local/src/mysql-5.7.23-el7-x86_64.tar.gz</span> <span class="string">root@10.200.62.4:/tmp</span></span><br></pre></td></tr></table></figure>

<p><strong>sftp</strong>：Secure File Transfer Protocol，安全文件传输命令行工具，使用方式和 <code>ftp</code> 类似，但它使用 <code>SSH</code> 作为底层传输协议，安全性比 <code>ftp</code> 好很多。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">语法：sftp</span> <span class="bullet">-oPort=&lt;port&gt;</span> <span class="string">&lt;user&gt;@&lt;host&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">常用命令：</span></span><br><span class="line"><span class="string">help/?：打印帮助信息。</span></span><br><span class="line"><span class="string">pwd：查看远程服务器当前目录</span></span><br><span class="line"><span class="string">cd</span> <span class="string">&lt;dir&gt;：将远程服务器的当前目录更改为&lt;dir&gt;</span></span><br><span class="line"><span class="string">ls：显示远程服务器上当前目录的文件名</span></span><br><span class="line"><span class="string">ls</span> <span class="bullet">-l：显示远程服务器上当前目录的文件详细列表</span></span><br><span class="line"><span class="string">get</span> <span class="string">&lt;file&gt;：下载指定文件</span> <span class="string">&lt;file&gt;</span></span><br><span class="line"><span class="string">put</span> <span class="string">&lt;file&gt;：上传指定文件&lt;file&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">示例：</span></span><br><span class="line"><span class="string">[iteblog@www.iteblog.com</span> <span class="string">~]$</span> <span class="string">sftp</span> <span class="bullet">-oPort=22</span> <span class="string">iteblog@sftp.iteblog.com</span></span><br><span class="line"><span class="string">Connecting</span> <span class="string">to</span> <span class="string">sftp.iteblog.com...</span></span><br><span class="line"><span class="string">iteblog@sftp.iteblog.com's</span> <span class="attr">password:</span> </span><br><span class="line"><span class="string">sftp&gt;</span> <span class="string">ls</span> <span class="string">/</span></span><br><span class="line"><span class="string">/iteblog.txt</span>  </span><br><span class="line"><span class="string">sftp&gt;</span> <span class="string">ls</span> <span class="bullet">-l</span> <span class="string">/iteblog.txt</span></span><br><span class="line"><span class="bullet">-</span><span class="string">rw-r--r--</span>    <span class="number">2</span> <span class="number">50049</span>    <span class="number">50049</span>        <span class="number">4096</span> <span class="string">Jun</span> <span class="number">21</span> <span class="number">03</span><span class="string">:23</span> <span class="string">/iteblog.txt</span></span><br><span class="line"><span class="string">sftp&gt;</span></span><br></pre></td></tr></table></figure>

<p>也可以使用 <code>FileZilla</code> 连接 <code>SFTP</code> 服务器：主机 IP 地址、用户名、密码、端口，端口默认为 <code>22</code>。</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g6797j8u3kj30ng0l9400.jpg" alt="img"></p>
<p><strong>ssh-keygen</strong>：生成密钥的工具</p>
<ul>
<li><code>-t</code>：指定生成密钥类型（<code>rsa</code>、<code>dsa</code> 等）</li>
<li><code>-P</code>：指定 密语，用于确保私钥的安全</li>
<li><code>-f</code>：指定存放密钥的文件（公钥文件默认和私钥同目录下，不同的是存放公钥的文件名需要加上后缀 .pub）</li>
<li><code>-C</code> 用来添加注释</li>
</ul>
<p><code>~/.ssh</code> 目录下有四个文件：</p>
<ul>
<li><code>id_rsa</code>：私钥文件</li>
<li><code>id_rsa.pub</code>：公钥文件</li>
<li><code>authorized_keys</code>：保存已授权的客户端公钥</li>
<li><code>known_hosts</code>：保存已认证的远程主机 ID</li>
</ul>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g67aallbz9j30ip0d4gm2.jpg" alt="img"></p>
<blockquote>
<p>需要注意的是：一台主机可能既是 Client，也是 Server。所以会同时拥有 authorized_keys 和 known_hosts。</p>
</blockquote>
<h2 id="SSH-工作原理"><a href="#SSH-工作原理" class="headerlink" title="SSH 工作原理"></a>SSH 工作原理</h2><h3 id="对称加密与非对称加密"><a href="#对称加密与非对称加密" class="headerlink" title="对称加密与非对称加密"></a>对称加密与非对称加密</h3><h4 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h4><p><strong>含义</strong>：加密与解密使用同一套秘钥。</p>
<p><strong>问题</strong>：考虑到数量庞大的 Client 端，很难保证密钥不被泄露，如何安全的保存密钥 ？</p>
<p><img src="http://ww3.sinaimg.cn/large/006y8mN6ly1g679ssfaapj30l805agls.jpg" alt="img"></p>
<p><img src="http://ww1.sinaimg.cn/large/006y8mN6ly1g679t6uz1wj30l805bdfr.jpg" alt="img"></p>
<h4 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h4><p><strong>含义</strong>：加密与解决密码不同，存在两个密钥，<strong>“公钥”</strong> 和 <strong>“私钥”</strong>。</p>
<blockquote>
<p>两个密钥的特性：公钥加密后的密文，只能通过对应的私钥进行解密，而通过公钥推理出私钥的可能性微乎其微。</p>
</blockquote>
<p><img src="http://ww4.sinaimg.cn/large/006y8mN6ly1g679yam73pj30ft0f2t9b.jpg" alt="img"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">远程</span> <span class="string">Server</span> <span class="string">收到</span> <span class="string">Client</span> <span class="string">端用户</span> <span class="string">TopGun</span> <span class="string">的登录请求，Server</span> <span class="string">把自己的公钥发给用户。</span></span><br><span class="line"><span class="string">Client</span> <span class="string">使用这个公钥，将密码进行加密。</span></span><br><span class="line"><span class="string">Client</span> <span class="string">将加密的密码发送给</span> <span class="string">Server端。</span></span><br><span class="line"><span class="string">远程</span> <span class="string">Server</span> <span class="string">用自己的私钥，解密登录密码，然后验证其合法性。</span></span><br><span class="line"><span class="string">若验证结果，给</span> <span class="string">Client</span> <span class="string">相应的响应。</span></span><br></pre></td></tr></table></figure>

<h3 id="图解公钥与私钥"><a href="#图解公钥与私钥" class="headerlink" title="图解公钥与私钥"></a>图解公钥与私钥</h3><p><strong>公钥</strong>：可以通过网络传输，别人可以随意截获的密钥。</p>
<p><strong>私钥</strong>：不能通过网络进行传输，也防止别人截获的密钥。</p>
<p><strong>交互过程</strong>：</p>
<p>（1）鲍勃有两把钥匙，一把是公钥，另一把是私钥。</p>
<p><img src="http://ww3.sinaimg.cn/large/006y8mN6ly1g67d4qd12bj30fa08n0ss.jpg" alt="PubKey1"></p>
<p>（2）鲍勃把公钥送给他的朋友们 – 帕蒂、道格、苏珊每人一把</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g67d7hmtayj30go07pq35.jpg" alt="PubKey2"></p>
<p>（3）苏珊要给鲍勃写一封保密的信，她写完后用鲍勃的公钥加密，就可以达到保密的效果。</p>
<p><img src="http://ww1.sinaimg.cn/large/006y8mN6ly1g67d7j9fh9j30go06vglp.jpg" alt="PubKey3"></p>
<p>（4）鲍勃收信后，用私钥解密，就看到了信件内容。这里要强调的是，只要鲍勃的私钥不泄露，这封信就是安全的，即使落在别人手里，也无法解密。</p>
<p><img src="http://ww4.sinaimg.cn/large/006y8mN6ly1g67d8c1zbkj30go07o0su.jpg" alt="PubKey4"></p>
<p>（5）鲍勃给苏珊回信，决定采用”数字签名”。他写完后先用 <code>Hash</code> 函数，生成信件的摘要（digest）。 </p>
<p><img src="http://ww4.sinaimg.cn/large/006y8mN6ly1g67d8o5r1gj30fa083q32.jpg" alt="PubKey5"></p>
<p>（6）然后，鲍勃使用私钥，对这个摘要加密，生成”数字签名”（signature）。</p>
<p><img src="http://ww3.sinaimg.cn/large/006y8mN6ly1g67d8zicuyj30fa06t3yd.jpg" alt="PubKey6"></p>
<p>（7）鲍勃将这个签名，附在信件下面，一起发给苏珊。</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g67d9eeclrj30fa08g0sv.jpg" alt="PubKey7"></p>
<p>（8）苏珊收信后，取下数字签名，用鲍勃的公钥解密，得到信件的摘要。由此证明，这封信确实是鲍勃发出的。</p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g67daaqp9rj30fa04qt8k.jpg" alt="PubKey8"> </p>
<p>（9）苏珊再对信件本身使用 <code>Hash</code> 函数，将得到的结果，与上一步得到的摘要进行对比。如果两者一致，就证明这封信未被修改过。 </p>
<p><img src="http://ww1.sinaimg.cn/large/006y8mN6ly1g67datch4wj30fa088aa9.jpg" alt="PubKey9"></p>
<p>（10）复杂的情况出现了，道格想欺骗苏珊，他偷偷使用了苏珊的电脑，用自己的公钥换走了鲍勃的公钥。此时，苏珊实际拥有的是道格的公钥，但是还以为这是鲍勃的公钥。因此，道格就可以冒充鲍勃，用自己的私钥做成”数字签名”，写信给苏珊，让苏珊用假的鲍勃公钥进行解密。</p>
<p><img src="http://ww1.sinaimg.cn/large/006y8mN6ly1g67dbdl39tj30fa07kaa4.jpg" alt="PubKey10"></p>
<p>（11）后来，苏珊感觉不对劲，发现自己无法确定公钥是否真的属于鲍勃。她想到了一个办法，要求鲍勃去找”证书中心”（Certificate Authority，简称 CA），为公钥做认证。证书中心用自己的私钥，对鲍勃的公钥和一些相关信息一起加密，生成”数字证书”（Digital Certificate）。</p>
<p><img src="http://ww1.sinaimg.cn/large/006y8mN6ly1g67dbuly0kj30i20bvt8u.jpg" alt="PubKey11"></p>
<p>（12）鲍勃拿到数字证书以后，就可以放心了。以后再给苏珊写信，只要在签名的同时，再附上数字证书就行了。 </p>
<p><img src="http://ww4.sinaimg.cn/large/006y8mN6ly1g67dcfjhntj30f90bywex.jpg" alt="PubKey12"></p>
<p>（13）苏珊收信后，用 CA 的公钥解开数字证书，就可以拿到鲍勃真实的公钥了，然后就能证明”数字签名”是否真的是鲍勃签的。 </p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6ly1g67dcphc58j30fa09wdfv.jpg" alt="PubKey13"></p>
<h3 id="两种安全验证方式"><a href="#两种安全验证方式" class="headerlink" title="两种安全验证方式"></a>两种安全验证方式</h3><h4 id="基于口令的安全验证（用户名-密码）"><a href="#基于口令的安全验证（用户名-密码）" class="headerlink" title="基于口令的安全验证（用户名/密码）"></a>基于口令的安全验证（用户名/密码）</h4><ul>
<li>客户端发送登录请求 <code>ssh user@host</code>；</li>
<li>服务器接受请求，将服务器的公钥 <code>id_rsa.pub</code> 发送给客户端；</li>
<li>客户端输入密码，密码使用 <code>id_rsa.pub</code> 加密后发送给服务器（敏感信息安全传输）；</li>
<li>服务器接受加密后的密码，使用服务器私钥 <code>id_rsa</code> 解密，匹配认证密码是否合法（如果合法！登录成功）；</li>
<li>客户端生成会话数据加密 <code>sess_key</code>，使用 <code>id_rsa.pub</code> 加密后传输给服务器（会话密钥）；</li>
<li>服务器获取到后使用 <code>id_rsa</code> 解密，得到 <code>sess_key</code>；</li>
<li>客户端和服务器通过 <code>sess_key</code> 进行会话数据安全传输。</li>
</ul>
<h4 id="基于密钥的安全验证"><a href="#基于密钥的安全验证" class="headerlink" title="基于密钥的安全验证"></a>基于密钥的安全验证</h4><p>简单地说，就是客户端自己生成公钥私钥（通常采用 <code>ssh-keygen</code> 程序生成），然后将公钥以某种方式（通常是手动添加）保存到服务器 <code>~/.ssh/authorized_keys</code> 文件中，以后服务器都会接受客户端传过来的经过会话密钥加密过的公钥，然后解密得到公钥之后和本地 <code>authorized_keys</code> 配置的公钥是否相等，如果是则允许登陆。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul>
<li><code>SSH</code> 是安全的加密协议，用于远程连接 <code>Linux</code> 服务器；</li>
<li><code>SSH</code> 的默认端口是 <code>22</code>，安全协议版本是 <code>SSH2</code>；</li>
<li><code>SSH</code> 服务器端主要包含2个服务功能 <code>SSH</code> 连接和 <code>SFTP</code> 服务器；</li>
<li><code>SSH</code> 客户端包含 <code>ssh</code> 连接命令和远程拷贝 <code>scp</code> 命令等。</li>
</ul>
<h2 id="SSH-实践"><a href="#SSH-实践" class="headerlink" title="SSH 实践"></a>SSH 实践</h2><h3 id="设置免密登录"><a href="#设置免密登录" class="headerlink" title="设置免密登录"></a>设置免密登录</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p><img src="http://ww3.sinaimg.cn/large/006y8mN6ly1g67a12hm04j30rs0jcjtl.jpg" alt="img"></p>
<p><strong>认证流程</strong>：</p>
<ul>
<li><code>Client</code> 将自己的公钥存放在 <code>Server</code> 上，追加在文件 <code>authorized_keys</code> 中。</li>
<li><code>Server</code> 端接收到 <code>Client</code> 的连接请求后，会在 <code>authorized_keys</code> 中匹配到 <code>Client</code> 的公钥 <code>pubKey</code>，并生成随机数 <code>R</code>，用 <code>Client</code> 的公钥对该随机数进行加密得到 <code>pubKey(R)</code>，然后将加密后信息发送给 <code>Client</code>。</li>
<li><code>Client</code> 端通过私钥进行解密得到随机数 <code>R</code>，然后对随机数 <code>R</code> 和本次会话的 <code>SessionKey</code> 利用 <code>MD5</code> 生成摘要 <code>Digest1</code>，发送给 <code>Server</code> 端。</li>
<li><code>Server</code> 端会也会对 <code>R</code> 和 <code>SessionKey</code> 利用同样摘要算法生成 <code>Digest2</code>。</li>
<li><code>Server</code> 端会最后比较 <code>Digest1</code> 和 <code>Digest2</code> 是否相同，完成认证过程。</li>
</ul>
<h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><p>（1）获取客户端公钥：<code>~/.ssh/id_rsa.pub</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat ~/.ssh/id_rsa.pub</span></span><br><span class="line"><span class="string">ssh-rsa</span> <span class="string">AAAAB3NzaC1yc2EAAAADAQABAAABAQCp7KnYj1baMhQn4FPfV6YiMogWw5cu57kfGoZYMdp8KNyJ5zmqz7UZUfmURYeoiMQB7v8oY3zVq13X8Gmmw/rzROS/vR/mqSbbnSruHh+x42oVtjZz67/UtFLTO1DT/+YmT+XkrkuI2Cx6CxWFQgThLXMNStYif3Rl0+aKC7Gb0hlPwoNT+UPHMLAW7Y2x+R7I8Tdvt75jSI4TANq8QzG+/Iy9tZiG80VC2KbgGdTkDLDZrIoftfVWihm4Ec29uJocpbxMRNpMTb7yn12ySWbY7mJ2fpqGAh+s1toF94ASPfg4Hlv6Y6lx2QumePKKIGQh1bWEOirxKljUbVfqD6NF</span> <span class="string">root@hlhtapp29</span></span><br></pre></td></tr></table></figure>

<p>（2）将公钥部署到服务端： <code>~/.ssh/authorized_keys</code> </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi ~/.ssh/authorized_keys</span></span><br><span class="line"><span class="string">ssh-rsa</span> <span class="string">AAAAB3NzaC1yc2EAAAADAQABAAABAQCp7KnYj1baMhQn4FPfV6YiMogWw5cu57kfGoZYMdp8KNyJ5zmqz7UZUfmURYeoiMQB7v8oY3zVq13X8Gmmw/rzROS/vR/mqSbbnSruHh+x42oVtjZz67/UtFLTO1DT/+YmT+XkrkuI2Cx6CxWFQgThLXMNStYif3Rl0+aKC7Gb0hlPwoNT+UPHMLAW7Y2x+R7I8Tdvt75jSI4TANq8QzG+/Iy9tZiG80VC2KbgGdTkDLDZrIoftfVWihm4Ec29uJocpbxMRNpMTb7yn12ySWbY7mJ2fpqGAh+s1toF94ASPfg4Hlv6Y6lx2QumePKKIGQh1bWEOirxKljUbVfqD6NF</span> <span class="string">root@hlhtapp29</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>备注：若服务端不存在 <code>authorized_keys</code> 文件，执行 ssh-keygen 命令，生成公匙和私匙，没有特殊需要的话，输完这个命令后直接连按回车，就会自动把文件生成到 ~/.ssh/ 文件夹中了。</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> which to save the key (/root/.ssh/id_rsa): </span><br><span class="line">/root/.ssh/id_rsa already exists.</span><br><span class="line">Overwrite (y/n)? y</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:<span class="number">4</span>qHMkrfb8bchDuoYV1DjGFy3JYzegeCidBa5yRvmBAU root@CSB-service-<span class="number">2</span></span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">| Eo++o++o .      |</span></span><br><span class="line"><span class="string">| . oo=ooo+       |</span></span><br><span class="line"><span class="string">| .+o*.....       |</span></span><br><span class="line"><span class="string">|..oO .. .        |</span></span><br><span class="line"><span class="string">|. + o + S        |</span></span><br><span class="line"><span class="string">|   * + o         |</span></span><br><span class="line"><span class="string">|  + * + . .      |</span></span><br><span class="line"><span class="string">|   * + = ...     |</span></span><br><span class="line"><span class="string">|  ..=.. o...     |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br><span class="line"><span class="string">You have mail in /var/spool/mail/root</span></span><br></pre></td></tr></table></figure>

<h3 id="服务器初始化"><a href="#服务器初始化" class="headerlink" title="服务器初始化"></a>服务器初始化</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $(id -u) != <span class="string">"0"</span> ]; then</span><br><span class="line">errorLog <span class="string">"错误：请用root账户运行此脚本"</span></span><br><span class="line"><span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line">echo <span class="string">"提升权限..."</span></span><br><span class="line"><span class="keyword">if</span> [[ ! `cat /etc/sudoers | grep -v grep | grep haieradmin` ]] ; then</span><br><span class="line">    echo <span class="string">"需要提升权限。。。"</span></span><br><span class="line">    sed -i <span class="string">'/## Allow root to run any commands anywhere / a\haieradmin ALL=(ALL) NOPASSWD:ALL'</span> /etc/sudoers</span><br><span class="line">    <span class="keyword">if</span> [[ ! `cat /etc/sudoers | grep -v grep | grep haieradmin` ]] ; then</span><br><span class="line">        echo <span class="string">"权限提升失败..."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        echo <span class="string">"权限提升成功..."</span></span><br><span class="line">    fi</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    echo <span class="string">"haieradmin已经是sudoers"</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo <span class="string">"开启22端口访问..."</span></span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=<span class="number">22</span>/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">echo <span class="string">"删除hosts.deny..."</span></span><br><span class="line">sed -i <span class="string">'s/sshd:all/ /g'</span> /etc/hosts.deny</span><br><span class="line"></span><br><span class="line">echo <span class="string">"追加hosts.allow..."</span></span><br><span class="line"><span class="keyword">if</span> [[ `cat /etc/hosts.allow | grep -v <span class="number">10.138</span>.*.*` ]]; then</span><br><span class="line">    echo <span class="string">"追加10.138.*.*"</span></span><br><span class="line">    echo <span class="string">"sshd:10.138.*.*"</span> &gt;&gt; /etc/hosts.allow</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<h3 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h3><p><strong>问题</strong>：CentOS 7.3 配置 SSH 免密码登录后仍要输入密码的解决方法？</p>
<p><strong>原因分析</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span> tail /var/log/secure -n 20</span><br><span class="line">Authentication refused: bad ownership or modes for directory /home/haieradmin</span><br></pre></td></tr></table></figure>

<p>sshd 为了安全，对属主的目录和文件权限有所要求，如果权限不对，则ssh的免密码登陆不生效。</p>
<ul>
<li>.ssh 目录权限为 700</li>
<li>rsa_id.pub 及 authorized_keys 权限一般为 644</li>
<li>rsa_id 权限必须为 600</li>
</ul>
<p><strong>解决方法</strong>：检测目录权限，把不符合要求的按要求设置权限即可。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL · SQL</title>
    <url>/blog/2019/07/05/mysql-sql/</url>
    <content><![CDATA[<h3 id="库"><a href="#库" class="headerlink" title="库"></a>库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">'dbname'</span> <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据库</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="string">'dbname'</span></span><br></pre></td></tr></table></figure>

<h3 id="表"><a href="#表" class="headerlink" title="表"></a>表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 插入表</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tabname(field1,field2) <span class="keyword">values</span>(value1,value2)</span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="keyword">name</span>,age) <span class="keyword">values</span>(<span class="string">'raohui'</span>,<span class="number">29</span>);</span><br><span class="line">mysql&gt; insert into test(name,age) values('yangnan',22);</span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line">+<span class="comment">----+---------+-----+---------------------+---------------------+</span></span><br><span class="line">| id | name    | age | gmt_create          | gmt_modified        |</span><br><span class="line">+<span class="comment">----+---------+-----+---------------------+---------------------+</span></span><br><span class="line">|  1 | raohui  |  29 | 2019-09-24 16:19:13 | 2019-09-24 16:29:16 |</span><br><span class="line">|  2 | yangnan |  22 | 2019-09-24 16:19:24 | 2019-09-24 16:19:24 |</span><br><span class="line">+<span class="comment">----+---------+-----+---------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表名</span></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> <span class="string">'oldname'</span> <span class="keyword">to</span> <span class="string">'newname'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`testdemo`</span> (</span><br><span class="line">	<span class="string">`id`</span> <span class="built_in">bigint</span> <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">	<span class="string">`name`</span> <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`address`</span> <span class="built_in">varchar</span>(<span class="number">50</span>),</span><br><span class="line">	<span class="string">`age`</span> <span class="built_in">tinyint</span> <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">	<span class="string">`gmt_create`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">	<span class="string">`gmt_modified`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看表结构</span></span><br><span class="line">desc test;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span>\G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">'newname'</span> <span class="keyword">LIKE</span> <span class="string">'oldname'</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">'newname'</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">'oldname'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表存储引擎</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">'table_name'</span> <span class="keyword">engine</span>=myisam;</span><br></pre></td></tr></table></figure>

<h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除索引</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">index</span> idx_name <span class="keyword">on</span> <span class="string">'table_name'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加自增主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">'table_name'</span> <span class="keyword">ADD</span> <span class="keyword">id</span> <span class="built_in">bigint</span>(<span class="number">10</span>) PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看表索引</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">INDEX</span> <span class="keyword">FROM</span> <span class="string">'table_name'</span>；</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">'table_name'</span> <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span> (<span class="keyword">column</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">'table_name'</span> <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (<span class="keyword">column</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">'table_name'</span> <span class="keyword">ADD</span> <span class="string">'index_name'</span>(<span class="keyword">column</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建聚合索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">'table_name'</span> <span class="keyword">ADD</span> <span class="keyword">INDEX</span> <span class="string">'index_name'</span> (column1, column2, column3)</span><br></pre></td></tr></table></figure>

<h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询视图</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> information_schema.views;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建视图</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> <span class="string">'viewname'</span> <span class="keyword">as</span> <span class="string">'sql'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除视图</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> <span class="string">'viewname'</span></span><br></pre></td></tr></table></figure>

<h3 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h3><h4 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a>LIKE</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">'table'</span> <span class="keyword">where</span> <span class="keyword">field</span> <span class="keyword">like</span> <span class="string">'%value%'</span></span><br></pre></td></tr></table></figure>

<h4 id="UNION-amp-UNION-ALL"><a href="#UNION-amp-UNION-ALL" class="headerlink" title="UNION &amp; UNION ALL"></a>UNION &amp; UNION ALL</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br><span class="line"></span><br><span class="line">注意：默认地，<span class="keyword">UNION</span> 操作符选取不同的值，如果允许重复的值，请使用 <span class="keyword">UNION</span> <span class="keyword">ALL</span>。</span><br></pre></td></tr></table></figure>

<h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> a,b,c <span class="keyword">from</span> a <span class="keyword">where</span> d <span class="keyword">IN</span> (<span class="keyword">select</span> d <span class="keyword">from</span> b )</span><br></pre></td></tr></table></figure>

<h4 id="BETWEEN-AND"><a href="#BETWEEN-AND" class="headerlink" title="BETWEEN AND"></a>BETWEEN AND</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="built_in">time</span> <span class="keyword">between</span> time1 <span class="keyword">and</span> time2</span><br></pre></td></tr></table></figure>

<h4 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1 <span class="keyword">where</span> a [<span class="keyword">not</span>] <span class="keyword">in</span> (‘值<span class="number">1</span>’,’值<span class="number">2</span>’,’值<span class="number">4</span>’,’值<span class="number">6</span>’)</span><br></pre></td></tr></table></figure>

<h4 id="Group-By"><a href="#Group-By" class="headerlink" title="Group By"></a>Group By</h4><h4 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h4><p><strong>语法：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN <span class="keyword">FROM</span> table_name1, table_name2...</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> field1, [field2...] [<span class="keyword">ASC</span> [<span class="keyword">DESC</span>]]</span><br></pre></td></tr></table></figure>

<ul>
<li>你可以使用 ASC 或 DESC 关键字来设置查询结果是按升序或降序排列，默认情况下，按升序排列。</li>
<li>你可以添加 WHERE…LIKE 子句来设置条件。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">'tabname'</span> <span class="keyword">order</span> <span class="keyword">by</span> field1,field2 [<span class="keyword">desc</span>]</span><br></pre></td></tr></table></figure>

<h4 id="JOIN"><a href="#JOIN" class="headerlink" title="JOIN"></a>JOIN</h4><h3 id="统计信息"><a href="#统计信息" class="headerlink" title="统计信息"></a>统计信息</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询所有库数据量并排序</span></span><br><span class="line"><span class="keyword">SELECT</span> table_schema, <span class="keyword">CONCAT</span>(</span><br><span class="line"><span class="keyword">TRUNCATE</span>(<span class="keyword">SUM</span>(data_length)/<span class="number">1024</span>/<span class="number">1024</span>,<span class="number">2</span>),<span class="string">'MB'</span>) <span class="keyword">AS</span> data_size, <span class="keyword">CONCAT</span>(</span><br><span class="line"><span class="keyword">TRUNCATE</span>(<span class="keyword">SUM</span>(index_length)/<span class="number">1024</span>/<span class="number">1024</span>,<span class="number">2</span>),<span class="string">'MB'</span>) <span class="keyword">AS</span> index_size</span><br><span class="line"><span class="keyword">FROM</span> information_schema.tables</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> table_schema</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">SUM</span>(data_length) <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">+<span class="comment">--------------------+------------+------------+</span></span><br><span class="line">| table_schema       | data_size  | index_size |</span><br><span class="line">+<span class="comment">--------------------+------------+------------+</span></span><br><span class="line">| csomo-barcode      | 51872.64MB | 49203.56MB |</span><br><span class="line">| cosmodb            | 30257.57MB | 13855.68MB |</span><br><span class="line">| cosmo_im_1001      | 19769.54MB | 6251.67MB  |</span><br><span class="line">| cosmoimbase        | 17594.54MB | 18239.81MB |</span><br><span class="line">| cosmo_im_1004      | 3141.99MB  | 4099.13MB  |</span><br><span class="line">| cosmo_im_1012      | 1524.87MB  | 1592.03MB  |</span><br><span class="line">| cosmo_im_1010      | 1464.20MB  | 2176.00MB  |</span><br><span class="line">| cosmo_im_1016      | 1092.29MB  | 1543.65MB  |</span><br><span class="line">| cosmo_im_1009      | 793.96MB   | 1612.11MB  |</span><br><span class="line">| cosmo_im_1003      | 662.42MB   | 1417.97MB  |</span><br><span class="line">| cosmo_im_1006      | 200.44MB   | 288.24MB   |</span><br><span class="line">| cosmo_im_1047      | 184.14MB   | 90.46MB    |</span><br><span class="line">| cosmo_im_1038      | 32.15MB    | 46.03MB    |</span><br><span class="line">| mysql              | 22.60MB    | 0.14MB     |</span><br><span class="line">| test               | 7.06MB     | 0.03MB     |</span><br><span class="line">| information_schema | 0.00MB     | 0.00MB     |</span><br><span class="line">| performance_schema | 0.00MB     | 0.00MB     |</span><br><span class="line">+<span class="comment">--------------------+------------+------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询单个表数据量</span></span><br><span class="line"><span class="keyword">select</span> table_name,table_rows,<span class="keyword">CONCAT</span>(</span><br><span class="line"><span class="keyword">TRUNCATE</span>(<span class="keyword">SUM</span>(data_length)/<span class="number">1024</span>/<span class="number">1024</span>,<span class="number">2</span>),<span class="string">'MB'</span>) <span class="keyword">AS</span> data_size, <span class="keyword">CONCAT</span>(</span><br><span class="line"><span class="keyword">TRUNCATE</span>(<span class="keyword">SUM</span>(index_length)/<span class="number">1024</span>/<span class="number">1024</span>,<span class="number">2</span>),<span class="string">'MB'</span>) <span class="keyword">AS</span> index_size <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> TABLE_SCHEMA = <span class="string">'mqm'</span> <span class="keyword">and</span> table_name=<span class="string">'t_batch'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询单个库中表数据排序</span></span><br><span class="line"><span class="keyword">select</span> table_name,table_rows <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> TABLE_SCHEMA= <span class="string">'employees'</span> <span class="keyword">order</span> <span class="keyword">by</span> table_rows <span class="keyword">desc</span>;</span><br><span class="line">+<span class="comment">----------------------+------------+</span></span><br><span class="line">| table_name           | table_rows |</span><br><span class="line">+<span class="comment">----------------------+------------+</span></span><br><span class="line">| salaries             |    2838426 |</span><br><span class="line">| titles               |     441772 |</span><br><span class="line">| dept_emp             |     331570 |</span><br><span class="line">| employees            |     299600 |</span><br><span class="line">| dept_manager         |         24 |</span><br><span class="line">| departments          |          9 |</span><br><span class="line">| current_dept_emp     |       NULL |</span><br><span class="line">| dept_emp_latest_date |       NULL |</span><br><span class="line">+<span class="comment">----------------------+------------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询单个库中表排序</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(table_schema,<span class="string">'.'</span>,table_name) <span class="keyword">AS</span> <span class="string">'Table Name'</span>, table_rows <span class="keyword">AS</span> <span class="string">'Rows'</span>, <span class="keyword">CONCAT</span>(<span class="keyword">ROUND</span>(data_length/(<span class="number">1024</span>*<span class="number">1024</span>),<span class="number">2</span>),<span class="string">'M'</span>) <span class="keyword">AS</span> <span class="string">'Data Size'</span>,<span class="keyword">CONCAT</span>(<span class="keyword">ROUND</span>(index_length/(<span class="number">1024</span>*<span class="number">1024</span>),<span class="number">2</span>),<span class="string">'M'</span>) <span class="keyword">AS</span> <span class="string">'Index Size'</span>, <span class="keyword">CONCAT</span>(<span class="keyword">ROUND</span>((data_length+index_length)/(<span class="number">1024</span>*<span class="number">1024</span>),<span class="number">2</span>),<span class="string">'M'</span>) <span class="keyword">AS</span><span class="string">'Total'</span><span class="keyword">FROM</span> information_schema.TABLES <span class="keyword">WHERE</span> TABLE_SCHEMA= <span class="string">'employees'</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="comment">--total DESC;</span></span><br><span class="line">+<span class="comment">--------------------------------+---------+-----------+------------+--------+</span></span><br><span class="line">| <span class="keyword">Table</span> <span class="keyword">Name</span>                     | <span class="keyword">Rows</span>    | <span class="keyword">Data</span> <span class="keyword">Size</span> | <span class="keyword">Index</span> <span class="keyword">Size</span> | Total  |</span><br><span class="line">+<span class="comment">--------------------------------+---------+-----------+------------+--------+</span></span><br><span class="line">| employees.salaries             | <span class="number">2838426</span> | <span class="number">95.63</span>M    | <span class="number">0.00</span>M      | <span class="number">95.63</span>M |</span><br><span class="line">| employees.titles               |  <span class="number">441772</span> | <span class="number">19.56</span>M    | <span class="number">0.00</span>M      | <span class="number">19.56</span>M |</span><br><span class="line">| employees.dept_emp             |  <span class="number">331570</span> | <span class="number">11.52</span>M    | <span class="number">5.52</span>M      | <span class="number">17.03</span>M |</span><br><span class="line">| employees.employees            |  <span class="number">299600</span> | <span class="number">14.52</span>M    | <span class="number">0.00</span>M      | <span class="number">14.52</span>M |</span><br><span class="line">| employees.dept_manager         |      <span class="number">24</span> | <span class="number">0.02</span>M     | <span class="number">0.02</span>M      | <span class="number">0.03</span>M  |</span><br><span class="line">| employees.departments          |       <span class="number">9</span> | <span class="number">0.02</span>M     | <span class="number">0.02</span>M      | <span class="number">0.03</span>M  |</span><br><span class="line">| employees.current_dept_emp     |    <span class="literal">NULL</span> | <span class="literal">NULL</span>      | <span class="literal">NULL</span>       | <span class="literal">NULL</span>   |</span><br><span class="line">| employees.dept_emp_latest_date |    <span class="literal">NULL</span> | <span class="literal">NULL</span>      | <span class="literal">NULL</span>       | <span class="literal">NULL</span>   |</span><br><span class="line">+<span class="comment">--------------------------------+---------+-----------+------------+--------+</span></span><br></pre></td></tr></table></figure>

<h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取消复制</span></span><br><span class="line"><span class="keyword">stop</span> <span class="keyword">slave</span>;</span><br><span class="line"><span class="keyword">reset</span> <span class="keyword">slave</span> <span class="keyword">all</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立复制</span></span><br><span class="line"><span class="keyword">CHANGE</span> <span class="keyword">MASTER</span> <span class="keyword">TO</span> </span><br><span class="line">MASTER_HOST=<span class="string">'10.133.7.18'</span>,</span><br><span class="line">MASTER_USER=<span class="string">'repl'</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">'Changeme_123'</span>,</span><br><span class="line">MASTER_PORT=<span class="number">3306</span>,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'mysql-binlog.000297'</span>, </span><br><span class="line">MASTER_LOG_POS=<span class="number">900834433</span>,</span><br><span class="line">MASTER_CONNECT_RETRY=<span class="number">10</span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Percona Toolkit · 简介安装</title>
    <url>/blog/2019/07/05/mysql-toolkit/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://github.com/percona/percona-toolkit" target="_blank" rel="noopener"><strong>Percona Toolkit</strong></a> 简称 <code>pt</code>，专用于 <code>MySQL</code> 运维管理的工具箱，几乎能满足 <code>MySQL</code> 日常运维的所有需求，使用 <code>Perl</code> 编写。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>①  安装</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ wget http://devops-files.oss-cn-qingdao.aliyuncs.com/percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-el7-x86_64-bundle.tar</span><br><span class="line">$ tar xvf percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-el7-x86_64-bundle.tar</span><br><span class="line">$ rpm -ivh percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">warning: percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64.rpm: Header V4 RSA/SHA256 Signature, key ID <span class="number">8507</span>efa5: NOKEY</span><br><span class="line">error: Failed dependencies:</span><br><span class="line">	perl(DBD::mysql) &gt;= <span class="number">1.0</span> is needed by percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">	perl(IO::Socket::SSL) is needed by percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">	perl(Digest::MD5) is needed by percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">	perl(Time::HiRes) is needed by percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">	perl(Term::ReadKey) is needed by percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>②  解决依赖</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum -y install perl-DBD-MySQL</span><br><span class="line">$ yum -y install perl-Digest-MD5</span><br><span class="line">$ yum -y install perl-IO-Socket-SSL</span><br><span class="line">$ yum -y install perl-TermReadKey</span><br><span class="line">$ yum -y install perl-Time-HiRes</span><br><span class="line">$ rpm -ivh percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">$ pt-archiver --help</span><br><span class="line">Usage: pt-archiver [OPTIONS] --source DSN --where WHERE</span><br></pre></td></tr></table></figure>

<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>pt-align</td>
<td>对齐其他工具的输出</td>
</tr>
<tr>
<td>pt-archiver</td>
<td>将表数据归档到另一个表或文件中</td>
</tr>
<tr>
<td>pt-config-diff</td>
<td>比较配置文件和参数</td>
</tr>
<tr>
<td>pt-deadlock-logger</td>
<td>提取和记录 <code>mysql</code> 死锁信息</td>
</tr>
<tr>
<td>pt-diskstats</td>
<td>查看系统磁盘状态</td>
</tr>
<tr>
<td>pt-duplicate-key-checker</td>
<td>列出并删除重复的索引和外键</td>
</tr>
<tr>
<td>pt-fifo-split</td>
<td>模拟切割文件并输出</td>
</tr>
<tr>
<td>pt-find</td>
<td>查找表并执行命令</td>
</tr>
<tr>
<td>pt-fingerprint</td>
<td>将查询转成密文</td>
</tr>
<tr>
<td>pt-fk-error-logger</td>
<td>提取和记录外键信息</td>
</tr>
<tr>
<td>pt-heartbeat</td>
<td>监控复制延迟</td>
</tr>
<tr>
<td>pt-index-usage</td>
<td>分析日志中索引使用情况，并出报告</td>
</tr>
<tr>
<td>pt-ioprofile</td>
<td>查询进程 <code>IO</code> 并打印活动表</td>
</tr>
<tr>
<td>pt-kill</td>
<td><code>kill</code> 掉符合条件的 <code>sql</code></td>
</tr>
<tr>
<td>pt-mext</td>
<td>并行查看 <code>status</code> 样本信息</td>
</tr>
<tr>
<td>pt-mysql-summary</td>
<td>对 <code>mysql</code> 配置和 <code>status</code> 进行汇总</td>
</tr>
<tr>
<td>pt-online-schema-change</td>
<td>在线修改表结构</td>
</tr>
<tr>
<td>pt-pmp</td>
<td>为查询结果跟踪，并汇总跟踪结果</td>
</tr>
<tr>
<td>pt-query-digest</td>
<td>分析查询日志，并产生报告</td>
</tr>
<tr>
<td>pt-secure-collect</td>
<td>收集、打包、加密数据</td>
</tr>
<tr>
<td>pt-show-grants</td>
<td>规范化和打印权限</td>
</tr>
<tr>
<td>pt-sift</td>
<td>浏览由 <code>pt-stalk</code> 创建的文件</td>
</tr>
<tr>
<td>pt-slave-delay</td>
<td>设定从落后主的时间</td>
</tr>
<tr>
<td>pt-slave-find</td>
<td>查找和打印所有复制层级关系</td>
</tr>
<tr>
<td>pt-slave-restart</td>
<td>监控 <code>salve</code> 错误，并尝试重启 <code>salve</code></td>
</tr>
<tr>
<td>pt-stalk</td>
<td>出现问题时，收集诊断数据</td>
</tr>
<tr>
<td>pt-summary</td>
<td>收集和显示系统概况</td>
</tr>
<tr>
<td>pt-table-checksum</td>
<td>校验主从复制一致性</td>
</tr>
<tr>
<td>pt-table-sync</td>
<td>高效同步表数据</td>
</tr>
<tr>
<td>pt-table-usage</td>
<td>分析日志中查询并分析表使用情况</td>
</tr>
<tr>
<td>pt-upgrade</td>
<td>在多个服务器上执行查询，并比较不同</td>
</tr>
<tr>
<td>pt-variable-advisor</td>
<td>分析参数，并提出建议</td>
</tr>
<tr>
<td>pt-visual-explain</td>
<td>格式化执行计划</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>Toolkit</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL · 配置参数 · innodb_buffer_pool_size</title>
    <url>/blog/2019/06/18/mysql-innodb_buffer_pool_size/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>缓存</strong>是计算机系统非常重要的组成部分，因为访问硬盘相比缓存可能会慢 <code>100</code> 到 <code>100000</code> 倍，取决于访问的数据量。<code>MySQL</code> 作为一个存储系统，同样具有<strong>缓冲池</strong>（<code>Buffer Pool</code>）机制，以避免每次查询数据都进行磁盘 <code>IO</code>，不同存储引擎缓存方式有所区别：</p>
<ul>
<li><p><a href="https://baike.baidu.com/item/myisam" target="_blank" rel="noopener"><strong>MyISAM</strong></a> 使用的是操作系统的文件系统缓存，来缓存那些经常被查询的数据。</p>
</li>
<li><p><a href="https://baike.baidu.com/item/innodb" target="_blank" rel="noopener"><strong>InnoDB</strong></a> 不依赖操作系统的缓存，自己在 <a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-buffer-pool-resize.html" target="_blank" rel="noopener"><strong>InnoDB Buffer Pool</strong></a> 处理缓存。</p>
</li>
</ul>
<p><strong>①  InnoDB Buffer Pool 主要作用？</strong></p>
<p>缓存表数据与索引数据，把磁盘上的数据加载到缓冲池，避免每次访问都进行磁盘 <code>IO</code>，起到加速访问的作用。</p>
<p><strong>②  为什么不把所有数据都放到缓冲池里？</strong></p>
<p>凡事都具备两面性，抛开数据易失性不说，访问快速的反面是存储容量小：</p>
<ul>
<li>缓存访问快，但容量小，数据库存储了 <code>200G</code> 数据，缓存容量可能只有 <code>64G</code>；</li>
<li>内存访问快，但容量小，买一台笔记本磁盘有 <code>2T</code>，内存可能只有 <code>16G</code>；</li>
</ul>
<p>因此，<strong>只能把“最热”的数据放到“最近”的地方，以“最大限度” 的降低磁盘访问</strong>。</p>
<p><strong>③  如何管理与淘汰缓冲池，使得性能最大化呢？</strong></p>
<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p><strong>参数</strong>：innodb_buffer_pool_size</p>
<p><strong>介绍</strong>：配置缓冲池的大小，在内存允许的情况下，DBA 往往会建议调大这个参数，越多数据和索引放到内存里，数据库的性能会越好。</p>
<p><strong>参数</strong>：innodb_old_blocks_pct</p>
<p><strong>介绍</strong>：老生代占整个 <code>LRU</code> 链长度的比例，默认是 <code>37</code>，即整个 <code>LRU</code> 中新生代与老生代长度比例是 <code>63:37</code>。</p>
<p><strong>参数</strong>：innodb_old_blocks_time</p>
<p><strong>介绍</strong>：老生代停留时间窗口，单位是毫秒，默认是 <code>1000</code>，即同时满足“被访问”与“在老生代停留时间超过 <code>1</code> 秒两个条件，才会被插入到新生代头部。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; select @@innodb_buffer_pool_size/1024/1024;</span><br><span class="line">+<span class="comment">-----------------------------------	--+</span></span><br><span class="line">| @@innodb_buffer_pool_size/1024/1024 |</span><br><span class="line">+<span class="comment">-------------------------------------+</span></span><br><span class="line">|                       1024.00000000 |</span><br><span class="line">+<span class="comment">-------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'innodb_old%'</span>;</span><br><span class="line">+<span class="comment">------------------------+-------+</span></span><br><span class="line">| Variable_name          | Value |</span><br><span class="line">+<span class="comment">------------------------+-------+</span></span><br><span class="line">| innodb_old_blocks_pct  | 37    |</span><br><span class="line">| innodb_old_blocks_time | 1000  |</span><br><span class="line">+<span class="comment">------------------------+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<p>InnoDB Buffer Pool 缓存命中率计算：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">脏页率计算公式：innodb_buffer_pool_pages_dirty / innodb_buffer_pool_pages_data * <span class="number">100</span>%</span><br><span class="line">使用率计算公式：innodb_buffer_pool_pages_data / ( innodb_buffer_pool_pages_data + innodb_buffer_pool_pages_free ) * <span class="number">100</span>%</span><br></pre></td></tr></table></figure>

<p>将缓冲池划分为多个单独的实例，通过减少不同线程读取和写入缓存的争用来提高并发性。<code>Buffer Pool</code> 可以存放多个 <code>Instance</code>，每个 <code>Instance</code> 由多个 <code>Chunk</code> 组成。<code>Instance</code> 的数量范围和 <code>Chunk</code> 的总数量范围分别为 <code>1-64</code>，<code>1-1000</code>。</p>
<p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-09-26-093000.png" alt="img"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认值</span></span><br><span class="line">innodb_buffer_pool_size 默认值为<span class="number">128</span>M</span><br><span class="line">innodb_buffer_pool_instances 默认值为<span class="number">1</span></span><br><span class="line">innodb_buffer_pool_chunk_size 默认值为<span class="number">128</span>M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算公式</span></span><br><span class="line">innodb_buffer_pool_size = innodb_buffer_pool_chunk_size * innodb_buffer_pool_instances * N</span><br><span class="line"></span><br><span class="line"><span class="comment"># 总缓存大小</span></span><br><span class="line">select @@innodb_buffer_pool_size/<span class="number">1024</span>/<span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缓存池数量</span></span><br><span class="line">select @@innodb_buffer_pool_instances;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个缓存池的大小</span></span><br><span class="line">select @@innodb_buffer_pool_chunk_size/<span class="number">1024</span>/<span class="number">1024</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Tips：当设置的 <code>Buffer Pool</code> 不等于 <code>Chunk</code> * <code>Instance</code> 倍数时，MySQL 会自动调整 <code>Buffer Pool</code> 的大小 ( 向上取值到最近的一次倍数 )。</p>
</blockquote>
<p><strong>小结</strong>：</p>
<ul>
<li><p>缓冲池（buffer pool）是一种常见的<strong>降低磁盘访问的机制</strong></p>
</li>
<li><p>缓冲池通常以<strong>页（page）</strong>为单位缓存数据</p>
</li>
<li><p>缓冲池的常见管理算法是 <strong>LRU</strong>，memcache，OS，InnoDB 都使用了这种算法</p>
</li>
<li><p>InnoDB 对普通 LRU 进行了优化：（1）将缓冲池分为老生代和新生代，入缓冲池的页，优先进入老生代，页被访问才进入新生代，以解决预读失效的问题；（2）页被访问，且在老生代停留时间超过配置阈值的，才进入新生代，以解决批量数据访问，大量热数据淘汰的问题。</p>
</li>
</ul>
<h2 id="设置-InnoDB-Buffer-Pool"><a href="#设置-InnoDB-Buffer-Pool" class="headerlink" title="设置 InnoDB Buffer Pool"></a>设置 InnoDB Buffer Pool</h2><p>InnoDB Buffer Pool 缓存了表数据和二级索引在内存中，设置 <code>innodb_buffer_pool_size</code> 合理数值对实例性能影响很大。</p>
<ul>
<li>设置偏小，会导致数据库大量直接对磁盘的访问，查询效率低。</li>
<li>设置过大，会导致数据库进程占用内存太多，发生 <code>OOM</code>。</li>
</ul>
<p><strong>独立服务器</strong></p>
<p>如果仅 <code>MySQL</code> 服务独享服务器资源，推荐设置 <code>innodb_buffer_pool_size</code> 为服务器总可用内存的 <code>80%</code>，具体设置多少，需要根据服务器内存大小和消耗进行调整。</p>
<p>设置 <code>80%</code> 的原因，是因为其它也需要内存：</p>
<ul>
<li>单次查询至少需要几K（甚至几M）的内存</li>
<li>其他各种内部的 <code>MySQL</code> 结构和缓存</li>
<li>有一些 <code>MySQL</code> 文件是在 <code>OS</code> 缓存里（<code>binary</code> 日志，<code>relay</code> 日志，事务日志等）</li>
<li>操作系统消耗内存</li>
</ul>
<h2 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h2><ul>
<li><code>MySQL 5.7</code> 版本之后，可以在线修改</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">set global innodb_buffer_pool_size = size_in_bytes;</span><br><span class="line">select @@innodb_buffer_pool_size/<span class="number">1024</span>/<span class="number">1024</span>;</span><br><span class="line">+-------------------------------------+</span><br><span class="line">| @@innodb_buffer_pool_size/<span class="number">1024</span>/<span class="number">1024</span> |</span><br><span class="line">+-------------------------------------+</span><br><span class="line">|                        <span class="number">128.00000000</span> |</span><br><span class="line">+-------------------------------------+</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Tips:</span><br><span class="line">① innodb_buffer_pool_size 在线修改时，用户的请求将会阻塞，需要在业务低峰期和没有大事务操作时候进行</span><br><span class="line">② 同时要修改配置文件 my.cnf，防止重启后恢复到原来的值</span><br></pre></td></tr></table></figure>

<ul>
<li><code>MySQL 5.7</code> 版本之前，需要修改 <code>my.cnf</code> 配置文件，然后重启 <code>MySQL</code> 服务</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">innodb_buffer_pool_size  = <span class="number">20480</span>M</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>参考</strong></p>
</blockquote>
<p><a href="http://mysql.taobao.org/monthly/2018/03/06/" target="_blank" rel="noopener"><strong>数据库内核月报</strong></a></p>
<p><a href="https://www.centos.bz/2016/11/innodb_buffer_pool_size-set-the-right-size/" target="_blank" rel="noopener"><strong>INNODB_BUFFER_POOL_SIZE：设置最佳内存值</strong></a></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>my.cnf</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL · 备份工具 · Percona XtraBackup</title>
    <url>/blog/2019/06/18/mysql-xtrabackup/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://github.com/percona/percona-xtrabackup" target="_blank" rel="noopener"><strong>Percona XtraBackup</strong></a> 是 <code>Percona</code> 公司基于 <code>C++</code> 开发的一个用于 <code>MySQL</code> 数据库 <strong>物理热备</strong> 的 <strong>免费开源</strong> 的备份工具。</p>
<p><strong>XtraBackup 优势</strong></p>
<ul>
<li>支持 <code>InnoDB</code> 热备和增量备份</li>
<li>支持流压缩传输到其它服务器</li>
<li>备份速度快，比较容易地创建主从同步</li>
<li>备份时不会增加服务器负载</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1、下载 <code>Percona-XtraBackup</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ wget http://devops-files.oss-cn-qingdao.aliyuncs.com/percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>2、<code>rpm</code> 方式安装</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ rpm -ivh percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p><strong>报错信息</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">warning: percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID cd2efd2a: NOKEY</span><br><span class="line">error: Failed dependencies:</span><br><span class="line">	libev.so.<span class="number">4</span>()(<span class="number">64</span>bit) is needed by percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">	perl(DBD::mysql) is needed by percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">	perl(Digest::MD5) is needed by percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64</span><br></pre></td></tr></table></figure>

<p><strong>解决方法</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ wget http://devops-files.oss-cn-qingdao.aliyuncs.com/libev-<span class="number">4.15</span>-<span class="number">1</span>.el6.x86_64.rpm</span><br><span class="line">$ yum -y install perl-DBD-MySQL</span><br><span class="line">$ yum -y install perl-Digest-MD5</span><br><span class="line">$ rpm -ivh libev-<span class="number">4.15</span>-<span class="number">1</span>.el6.x86_64.rpm</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ rpm -ivh percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line">Preparing...                           <span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line">   <span class="number">1</span>:percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br><span class="line">$ xtrabackup --version </span><br><span class="line">xtrabackup version <span class="number">2.4</span>.<span class="number">12</span> based on MySQL server <span class="number">5.7</span>.<span class="number">19</span> Linux (x86_64)</span><br></pre></td></tr></table></figure>

<p><strong>报错信息</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[root@hop02 src]<span class="comment"># rpm -ivh percona-xtrabackup-24-2.4.12-1.el7.x86_64.rpm</span></span><br><span class="line">warning: percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID cd2efd2a: NOKEY</span><br><span class="line">error: Failed dependencies:</span><br><span class="line">​	libc.so.<span class="number">6</span>(GLIBC_2.<span class="number">14</span>)(<span class="number">64</span>bit) is needed by percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64</span><br><span class="line">​	libstdc++.so.<span class="number">6</span>(GLIBCXX_3.<span class="number">4.15</span>)(<span class="number">64</span>bit) is needed by percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el7.x86_64</span><br></pre></td></tr></table></figure>

<p><strong>解决方法</strong>：</p>
<p>查看操作系统版本，<code>CentOS 6</code> 下载 <code>el6</code> 的安装包即可。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cat /etc/redhat-release</span><br><span class="line">CentOS release <span class="number">6.5</span> (Final)</span><br><span class="line"></span><br><span class="line">$ wget http://devops-files.oss-cn-qingdao.aliyuncs.com/percona-xtrabackup-<span class="number">24</span>-<span class="number">2.4</span>.<span class="number">12</span>-<span class="number">1</span>.el6.x86_64.rpm</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Tips：不要轻易在真实生产环境中直接安装，因为升级的过程中比较容易出现系统出错。</p>
</blockquote>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><strong>备份原理</strong></p>
<p><code>innobackupex</code> 在后台线程不断追踪 <code>InnoDB</code> 的日志文件，然后复制 <code>InnoDB</code> 的数据文件。数据文件复制完成之后，日志的复制线程也会结束。这样就得到了不在同一时间点的数据副本和开始备份以后的事务日志。完成上面的步骤之后，就可以使用 <code>InnoDB</code> 崩溃恢复代码执行事务日志（<code>redo log</code>），以达到数据的一致性。备份分为两个过程：</p>
<ul>
<li><strong>backup</strong>，备份阶段，追踪事务日志和复制数据文件（物理备份）。</li>
<li><strong>preparing</strong>，重放事务日志，使所有的数据处于同一个时间点，达到一致性状态。</li>
</ul>
<p><strong>备份过程</strong></p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1g5r4dhuzpvj30hi0srwtk.jpg" alt="PXB"></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）复制已有的redo log，然后监听redo log变化并持续复制</span><br><span class="line"><span class="number">2</span>）复制事务引擎数据文件</span><br><span class="line"><span class="number">3</span>）等到数据文件复制完成</span><br><span class="line"><span class="number">4</span>）加锁：全局读锁</span><br><span class="line"><span class="number">5</span>）备份非事务引擎数据文件及其他文件</span><br><span class="line"><span class="number">6</span>）获取binlog点位信息等元数据</span><br><span class="line"><span class="number">7</span>）停止复制redo log</span><br><span class="line"><span class="number">8</span>）解锁：全局读锁</span><br><span class="line"><span class="number">9</span>）复制buffer pool dump</span><br><span class="line"><span class="number">10</span>）备份完成</span><br></pre></td></tr></table></figure>

<p><code>XtraBackup</code> 基于 <code>InnoDB</code> 的 <code>crash recovery</code> 机制，在备份还原时利用 <code>redo log</code> 得到完整的数据文件，并通过全局读锁，保证 <code>InnoDB</code> 数据与非 <code>InnoDB</code> 数据的一致性，最终完成备份还原的功能。</p>
<p><strong>恢复过程</strong></p>
<p>apply-log</p>
<ul>
<li>模拟 <code>MySQL</code> 进行 <code>recover</code>，将 <code>redo log</code> 回放到数据文件中。</li>
<li>等到 <code>recover</code> 完成 。</li>
<li>重建 <code>redo log</code>，为启动数据库做准备。</li>
</ul>
<p>copy-back</p>
<ul>
<li>将数据文件复制回 <code>MySQL</code> 数据目录。</li>
<li>还原完成。</li>
</ul>
<p><code>InnoDB</code> 数据会被恢复至备份结束时（全局读锁时）的状态，而非 <code>InnoDB</code> 数据本身即是在全局读锁时被复制出来，它们的数据一致。</p>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p><strong>全量备份</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#############################################################################</span></span><br><span class="line"><span class="comment"># Full Backup Using XtraBackup For MySQL</span></span><br><span class="line"><span class="comment">#############################################################################</span></span><br><span class="line"></span><br><span class="line">mode=<span class="variable">$1</span></span><br><span class="line">backupdir=<span class="string">'/data/backup'</span>   <span class="comment"># backup dir</span></span><br><span class="line"></span><br><span class="line">backup() &#123;</span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$backupdir</span> ]; then</span><br><span class="line">    mkdir -p <span class="variable">$backupdir</span> </span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份主库：</span></span><br><span class="line">innobackupex --defaults-file=/etc/my.cnf --user=root --password=Haier@<span class="number">123</span> --no-timestamp /<span class="variable">$backupdir</span>/full-`date +%Y%m%d%H%M`-bak</span><br><span class="line">find <span class="variable">$backupdir</span> -mtime +<span class="number">2</span> -name <span class="string">'full-*-bak'</span> -exec rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 传输到从库：</span></span><br><span class="line"><span class="comment"># scp -r /data/backup/* root@10.133.7.19:/data/backup</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case <span class="string">"<span class="variable">$mode</span>"</span> <span class="keyword">in</span></span><br><span class="line">    <span class="string">'full'</span>) backup ;;</span><br><span class="line">*)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># usage</span></span><br><span class="line">    basename=`basename <span class="string">"<span class="variable">$0</span>"</span>`</span><br><span class="line">    echo <span class="string">"Usage: <span class="variable">$basename</span> &#123;full&#125;"</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每天中午12:00执行全量备份，保留前1天数据</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="number">0</span> <span class="number">12</span> * * <span class="number">0</span> sh /<span class="keyword">data</span>/backup.sh full</span><br></pre></td></tr></table></figure>

<p><strong>备份报错</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">190812</span> <span class="number">13</span>:<span class="number">39</span>:<span class="number">54</span> &gt;&gt; log scanned up to (<span class="number">491275222500</span>)</span><br><span class="line">xtrabackup: Generating a list of tablespaces</span><br><span class="line">InnoDB: Allocated tablespace ID <span class="number">2</span> <span class="keyword">for</span> mysql/plugin, old maximum was <span class="number">0</span></span><br><span class="line">InnoDB: Operating system error number <span class="number">24</span> <span class="keyword">in</span> a file operation.</span><br><span class="line">InnoDB: Error number <span class="number">24</span> means <span class="string">'Too many open files'</span></span><br><span class="line">InnoDB: Some operating system error numbers are described at http://dev.mysql.com/doc/refman/<span class="number">5.7</span>/en/operating-system-error-codes.html</span><br><span class="line">InnoDB: File ./cosmo_im_1023/bns_io_sapsourcinglist.ibd: <span class="string">'open'</span> returned OS error <span class="number">124</span>. Cannot <span class="keyword">continue</span> operation</span><br><span class="line">InnoDB: Cannot <span class="keyword">continue</span> operation.</span><br></pre></td></tr></table></figure>

<p><strong>解决方案</strong>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）shell&gt; ulimit -n <span class="number">65535</span></span><br><span class="line"><span class="number">2</span>）修改 my.cnf 配置文件的参数</span><br><span class="line">innodb_open_files = <span class="number">10240</span></span><br><span class="line">open_files_limit = <span class="number">10240</span></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>优先使用高版本 <code>XtraBackup</code> 。</li>
<li>尽量不要使用 <code>XtraBackup</code> 自带的增量 备份，因为后期使用或者恢复不太方便。</li>
<li>备份结束时，请立即 <code>apply-log</code> ，这样能够知道备份集是否可用。</li>
</ul>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>XtraBackup</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL · 监控告警 · PMM</title>
    <url>/blog/2019/06/12/mysql-pmm/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>Percona Monitoring and Management (PMM)</strong>：是一款 <code>Percona</code> 发布的用于管理和监控 <code>Linux</code>、<code>MySQL</code>、<code>MongoDB</code>、<code>PostgreSQL</code>、<code>ProxySQL</code>  的开源平台，通过 <code>PMM</code> 客户端收集到的监控数据，通过第三方软件 <code>Grafana</code> 展示出来。</p>
<blockquote>
<p><strong>PMM功能</strong></p>
</blockquote>
<ul>
<li>支持对主机的硬盘、网络、CPU、内存的监控。</li>
<li>支持对 <code>MyISAM</code>、<code>InnoDB</code>、<code>TokuDB</code> 和 <code>PXC/Glarera</code> 的监控。</li>
<li>支持 <code>Query Analytics</code> 的功能，可以检视执行了哪些 <code>SQL</code> 指令，并对执行性能较差的 <code>SQL</code> 进行优化。</li>
<li>支持了 <code>MySQL</code> 复制拓扑图结构构造。</li>
</ul>
<blockquote>
<p>官网 <a href="http://pmmdemo.percona.com" target="_blank" rel="noopener"><strong>Demo</strong></a> </p>
</blockquote>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p><img src="http://bolg-picture.oss-cn-qingdao.aliyuncs.com/blog/2019-08-28-070801.jpg" alt="PMM架构"></p>
<h3 id="PMM-Client"><a href="#PMM-Client" class="headerlink" title="PMM Client"></a>PMM Client</h3><ul>
<li><p><strong>pmm-mysql-queries-0</strong>：是一个管理 <code>qan</code> 代理的服务，它从 <code>MySQL</code> 收集性能数据，然后通过 <code>QAN API</code> 发送到 <code>PMM Server</code>。</p>
</li>
<li><p><strong>pmm-mongodb-queries-0</strong>：是一个管理 <code>qan</code> 代理的服务，它从 <code>mongodb</code> 收集性能数据，然后通过 <code>QAN API</code> 发送到 <code>PMM Server</code>。</p>
</li>
<li><p><a href="https://github.com/percona/pmm-admin" target="_blank" rel="noopener"><strong>pmm-admin</strong></a>：用于管理 <code>PMM Client</code> 的命令行工具，例如：添加、删除要监视的数据库实例。</p>
</li>
<li><p><a href="https://github.com/prometheus/node_exporter" target="_blank" rel="noopener"><strong>node_exporter</strong></a>：采集主机监控指标。</p>
</li>
<li><p><a href="https://github.com/prometheus/mysqld_exporter" target="_blank" rel="noopener"><strong>mysqld_exporter</strong></a>：采集 <code>MySQL</code> 监控指标。</p>
</li>
<li><p><a href="https://github.com/percona/mongodb_exporter" target="_blank" rel="noopener"><strong>mongodb_exporter</strong></a>：采集 <code>MongoDB</code> 监控指标。</p>
</li>
<li><p><a href="https://github.com/percona/proxysql_exporter" target="_blank" rel="noopener"><strong>proxysql_exporter</strong></a>：采集 <code>ProxySQL</code> 监控指标。</p>
</li>
</ul>
<h3 id="PMM-Server"><a href="#PMM-Server" class="headerlink" title="PMM Server"></a>PMM Server</h3><p><strong>Query Analytics（QAN）</strong>：主要用来搜集指令并作性能分析。</p>
<ul>
<li><strong>QAN API</strong>：作为后端储存和读取 <code>Query</code> 资料用。</li>
<li><strong>QAN APP</strong>：提供图形化分析界面。</li>
</ul>
<p><strong>Metrics Monitor（MM）</strong>：主要提供 <code>MySQL</code> 和 <code>MongoDB</code> 历史监控信息。组件说明如下：</p>
<ul>
<li><a href="https://prometheus.io/" target="_blank" rel="noopener"><strong>Prometheus</strong></a>：一个开源的服务监控系统和时间序列数据库，它连接到 <code>PMM Client</code> 上的 <code>exporter</code> 聚集的监控数据。</li>
<li><a href="https://www.consul.io/" target="_blank" rel="noopener"><strong>Consul</strong></a>：提供 <code>API</code> 让 <code>PMM Client</code> 可以远端替 <code>Prometheus</code> 新增、移除 <code>Hosts</code>，同时它也储存了监控的<code>metadata</code>。</li>
<li><a href="http://grafana.org/" target="_blank" rel="noopener"><strong>Grafana</strong></a>： 这是一个第三方 <code>Dashboard</code> 和图形构建器，用于可视化 <code>Prometheus</code> 中聚合的数据，以 <code>Web</code> 方式呈现。</li>
<li><a href="https://github.com/percona/grafana-dashboards" target="_blank" rel="noopener"><strong>Percona Dashboards</strong></a>：是由 <code>Percona</code> 开发的一组用于 <code>Grafana</code> 的仪表板。上述的 <code>Web</code> 页面都能从 <code>PMM Landing Page</code>直接连接。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="PMM-Server-1"><a href="#PMM-Server-1" class="headerlink" title="PMM Server"></a>PMM Server</h3><p>（1）<strong>安装 docker</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum -y install docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 docker</span></span><br><span class="line">$ yum remove docker</span><br></pre></td></tr></table></figure>

<p>（2）<strong>运行 docker</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ systemctl start docker</span><br><span class="line">$ systemctl enable docker</span><br><span class="line">$ systemctl stop docker</span><br></pre></td></tr></table></figure>

<p>（3）<strong>下载容器镜像</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ docker pull percona/pmm-server:latest</span><br></pre></td></tr></table></figure>

<p>（4）<strong>创建数据卷容器</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ docker create \</span><br><span class="line">-v /opt/prometheus/<span class="keyword">data</span> \</span><br><span class="line">-v /opt/consul-data \</span><br><span class="line">-v /var/lib/mysql \</span><br><span class="line">-v /var/lib/grafana \</span><br><span class="line">--name pmm-data \</span><br><span class="line">percona/pmm-server:latest /bin/true</span><br></pre></td></tr></table></figure>

<p>（5）<strong>运行 PMM Server</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ docker run -d \</span><br><span class="line">-p <span class="number">8090</span>:<span class="number">80</span> \</span><br><span class="line">--volumes-from pmm-data \</span><br><span class="line">--name pmm-server \</span><br><span class="line">--restart always \</span><br><span class="line">percona/pmm-server:latest</span><br></pre></td></tr></table></figure>

<p>（6）<strong>验证</strong>，通过 <a href="http://pmm.ilearning.fun" target="_blank" rel="noopener"><strong>登录</strong></a> 查看是否正常显示，也可以通过如下方式：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ curl http://<span class="number">10.133</span>.<span class="number">0.53</span>/ping</span><br><span class="line">&#123;<span class="string">'version'</span>: <span class="string">'1.8.0'</span>&#125;</span><br></pre></td></tr></table></figure>

<p>其他命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ docker exec -it <span class="string">'xx'</span> /bin/bash</span><br><span class="line">$ docker ps -a</span><br><span class="line">$ docker stop pmm-server &amp;&amp; docker rm pmm-server (停止 pmm-server)</span><br></pre></td></tr></table></figure>

<h3 id="PMM-Client-1"><a href="#PMM-Client-1" class="headerlink" title="PMM Client"></a>PMM Client</h3><p>1）确保 <code>PMM Server</code> 主机可访问</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ ping <span class="number">10.133</span>.<span class="number">0.52</span></span><br></pre></td></tr></table></figure>

<p>2）安装 <code>Client</code> 包</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm</span><br><span class="line">$ yum install -y pmm-client</span><br><span class="line"></span><br><span class="line">$ scp pmm-client-<span class="number">1.17</span>.<span class="number">1</span>-<span class="number">1</span>.el7.x86_64.rpm haieradmin@<span class="number">10.133</span>.<span class="number">0.52</span>:/tmp</span><br><span class="line">$ wget http://<span class="number">10.190</span>.<span class="number">179.84</span>:<span class="number">8085</span>/pmm-client-<span class="number">1.17</span>.<span class="number">1</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line">$ rpm -ivh pmm-client-<span class="number">1.17</span>.<span class="number">1</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 pmm-client</span></span><br><span class="line">$ yum remove pmm-client</span><br></pre></td></tr></table></figure>

<p>3）连接 <code>PMM Client</code> 到 <code>PMM Server</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pmm-admin config --server <span class="number">10.133</span>.<span class="number">0.52</span></span><br><span class="line">OK, PMM server is alive.</span><br><span class="line">PMM Server      | <span class="number">10.133</span>.<span class="number">0.52</span> </span><br><span class="line">Client Name     | cmp15</span><br><span class="line">Client Address  | <span class="number">10.138</span>.<span class="number">228.236</span></span><br><span class="line"></span><br><span class="line">$ pmm-admin config --server <span class="number">10.133</span>.<span class="number">0.52</span>:<span class="number">8080</span> （适用于非<span class="number">80</span>端口）</span><br></pre></td></tr></table></figure>

<h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><h3 id="主机"><a href="#主机" class="headerlink" title="主机"></a>主机</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加监控</span></span><br><span class="line">$ pmm-admin add linux:metrics</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消监控</span></span><br><span class="line">$ pmm-admin remove linux:metrics</span><br></pre></td></tr></table></figure>

<h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加监控</span></span><br><span class="line">$ pmm-admin add mysql --socket /<span class="keyword">data</span>/mysql3306/mysql.sock --user root --password Haier@<span class="number">123</span></span><br><span class="line">$ pmm-admin list</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ wget http://<span class="number">10.190</span>.<span class="number">179.84</span>:<span class="number">8085</span>/pmm-client-<span class="number">1.17</span>.<span class="number">1</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line">$ rpm -ivh pmm-client-<span class="number">1.17</span>.<span class="number">1</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">$ pmm-admin config --server <span class="number">10.133</span>.<span class="number">0.52</span>:<span class="number">8080</span></span><br><span class="line">OK, PMM server is alive.</span><br><span class="line">PMM Server      | <span class="number">10.133</span>.<span class="number">0.52</span>:<span class="number">8080</span> </span><br><span class="line">Client Name     | GPCMS-DB-P</span><br><span class="line">Client Address  | <span class="number">10.133</span>.<span class="number">7.19</span></span><br><span class="line"></span><br><span class="line">$ pmm-admin add linux:metrics</span><br><span class="line">OK, now monitoring this system.</span><br><span class="line"></span><br><span class="line">$ pmm-admin add mysql --user hdm --password Hdm@<span class="number">123</span>!</span><br><span class="line">[linux:metrics] OK, already monitoring this system.</span><br><span class="line">[mysql:metrics] OK, now monitoring MySQL metrics using DSN hdm:***@unix(/<span class="keyword">data</span>/mysql3306/mysql.sock)</span><br><span class="line">[mysql:queries] OK, now monitoring MySQL queries from slowlog using DSN hdm:***@unix(/<span class="keyword">data</span>/mysql3306/mysql.sock)</span><br><span class="line"></span><br><span class="line">$ pmm-admin check-network</span><br><span class="line">PMM Network Status</span><br><span class="line"></span><br><span class="line">Server Address | <span class="number">10.133</span>.<span class="number">0.52</span>:<span class="number">8080</span></span><br><span class="line">Client Address | <span class="number">10.133</span>.<span class="number">7.19</span> </span><br><span class="line"></span><br><span class="line">* System Time</span><br><span class="line">NTP Server (<span class="number">0</span>.pool.ntp.org)         | <span class="number">2019</span>-<span class="number">07</span>-<span class="number">26</span> <span class="number">10</span>:<span class="number">18</span>:<span class="number">20</span> +<span class="number">0000</span> UTC</span><br><span class="line">PMM Server                          | <span class="number">2019</span>-<span class="number">07</span>-<span class="number">26</span> <span class="number">10</span>:<span class="number">18</span>:<span class="number">20</span> +<span class="number">0000</span> GMT</span><br><span class="line">PMM Client                          | <span class="number">2019</span>-<span class="number">07</span>-<span class="number">26</span> <span class="number">18</span>:<span class="number">18</span>:<span class="number">20</span> +<span class="number">0800</span> CST</span><br><span class="line">PMM Server Time Drift               | OK</span><br><span class="line">PMM Client Time Drift               | OK</span><br><span class="line">PMM Client to PMM Server Time Drift | OK</span><br><span class="line"></span><br><span class="line">* Connection: Client --&gt; Server</span><br><span class="line">-------------------- -------      </span><br><span class="line">SERVER SERVICE       STATUS       </span><br><span class="line">-------------------- -------      </span><br><span class="line">Consul API           OK</span><br><span class="line">Prometheus API       OK</span><br><span class="line">Query Analytics API  OK</span><br><span class="line"></span><br><span class="line">Connection duration | <span class="number">702.217</span>µs</span><br><span class="line">Request duration    | <span class="number">4.66389</span>ms</span><br><span class="line">Full round trip     | <span class="number">5.366107</span>ms</span><br><span class="line"></span><br><span class="line">* Connection: Client &lt;-- Server</span><br><span class="line">-------------- ----------- ------------------ ------- ---------- ---------</span><br><span class="line">SERVICE TYPE   NAME        REMOTE ENDPOINT    STATUS  HTTPS/TLS  PASSWORD </span><br><span class="line">-------------- ----------- ------------------ ------- ---------- ---------</span><br><span class="line">linux:metrics  GPCMS-DB-P  <span class="number">10.133</span>.<span class="number">7.19</span>:<span class="number">42000</span>  OK      YES        -        </span><br><span class="line">mysql:metrics  GPCMS-DB-P  <span class="number">10.133</span>.<span class="number">7.19</span>:<span class="number">42002</span>  OK      YES        -</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启防火墙端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=<span class="number">42000</span>/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=<span class="number">42002</span>/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改存储类型为MySQL</span></span><br><span class="line">docker exec -i -t pmm-server /bin/bash</span><br><span class="line">vi /etc/grafana/grafana.ini</span><br><span class="line"></span><br><span class="line">查/sqlite改为MYSQL存储</span><br><span class="line">type=mysql</span><br><span class="line">host=<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">3306</span></span><br><span class="line">name=grafana</span><br><span class="line">user=root</span><br><span class="line">password =</span><br></pre></td></tr></table></figure>

<p>在容器进入 mysql 客户端,创建数据库 grafana</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ create database grafana;</span><br><span class="line">$ docker restart pmm-server</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pmm-admin --help</span><br><span class="line">Usage:</span><br><span class="line">pmm-admin [flags]</span><br><span class="line">pmm-admin [command]</span><br><span class="line">Available Commands:</span><br><span class="line">config         Configure PMM Client. <span class="comment"># 配置PMM客户端</span></span><br><span class="line">add            Add service to monitoring. <span class="comment"># 增加监控</span></span><br><span class="line">remove         Remove service from monitoring. <span class="comment"># 删除监控服务</span></span><br><span class="line">list           List monitoring services <span class="keyword">for</span> this system. <span class="comment"># 列出监控服务</span></span><br><span class="line">info           Display PMM Client information (works offline). <span class="comment"># 打印PMM客户端信息</span></span><br><span class="line">check-network  Check network connectivity between client and server. <span class="comment"># 检查网络</span></span><br><span class="line">ping           Check <span class="keyword">if</span> PMM server is alive. </span><br><span class="line">start          Start monitoring service. <span class="comment"># 开启服务</span></span><br><span class="line">stop           Stop monitoring service. <span class="comment"># 停止服务</span></span><br><span class="line">restart        Restart monitoring service. <span class="comment"># 重启服务</span></span><br><span class="line">show-passwords Show PMM Client password information (works offline). <span class="comment"># 显示客户端密码</span></span><br><span class="line">purge          Purge metrics <span class="keyword">data</span> on PMM server. <span class="comment"># 删除PMM server端监控信息</span></span><br><span class="line">repair         Repair installation. <span class="comment"># 重新安装</span></span><br><span class="line">uninstall      Removes all monitoring services with the best effort. <span class="comment"># 删除所有服务</span></span><br><span class="line">help           Help about any command</span><br><span class="line">Flags:</span><br><span class="line">-c, --config-file string   PMM config file (default <span class="string">"/usr/local/percona/pmm-client/pmm.yml"</span>)</span><br><span class="line">-h, --help                 help <span class="keyword">for</span> pmm-admin</span><br><span class="line">    --verbose              verbose output</span><br><span class="line">-v, --version              show version</span><br><span class="line">Use <span class="string">"pmm-admin [command] --help"</span> <span class="keyword">for</span> more information about a command.</span><br></pre></td></tr></table></figure>

<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p><strong>安装 pmm-client</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ scp /usr/local/src/pmm-client-<span class="number">1.17</span>.<span class="number">1</span>-<span class="number">1</span>.el7.x86_64.rpm haieradmin@x.x.x.x:/tmp</span><br><span class="line">$ rpm -ivh pmm-client-<span class="number">1.17</span>.<span class="number">1</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p><strong>监控主机</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将client_name修改为服务器ip</span></span><br><span class="line">$ vi /usr/local/percona/pmm-client/pmm.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启pmm-client</span></span><br><span class="line">$ pmm-admin restart --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加监控</span></span><br><span class="line">$ pmm-admin add linux:metrics</span><br></pre></td></tr></table></figure>

<p><strong>监控MySQL</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ pmm-admin add mysql --user hdm --password Hdm@<span class="number">123</span>! x.x.x.x:port</span><br><span class="line">$ pmm-admin list</span><br></pre></td></tr></table></figure>

<p><strong>配置告警</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入docker</span></span><br><span class="line">$ docker exec -it pmm-server /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编缉 grafana.ini</span></span><br><span class="line">vim /etc/grafana/grafana.ini</span><br><span class="line"></span><br><span class="line">[smtp]</span><br><span class="line">enabled = true</span><br><span class="line">host = [smtp.healthmall.cn](http://smtp.healthmall.cn/):<span class="number">25</span></span><br><span class="line">user = liuqian@healthmall.cn</span><br><span class="line">password = <span class="number">123456</span></span><br><span class="line">from_address = liuqian@healthmall.cn</span><br><span class="line">from_name = Grafana</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启pmm-server容器</span></span><br><span class="line">$ docker restart pmm-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 钉钉报警配置</span></span><br><span class="line">http://docs.grafana.org/alerting/notifications/</span><br></pre></td></tr></table></figure>

<p><strong>升级</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ docker pull percona/pmm-server:latest</span><br><span class="line">$ docker stop pmm-server &amp;&amp; docker rm pmm-server</span><br><span class="line">$ docker run -d -p <span class="number">80</span>:<span class="number">80</span> -p <span class="number">9090</span>:<span class="number">9090</span> --volumes-from pmm-data --name pmm-server -e SERVER_USER=pmm -e SERVER_PASSWORD=ngiISI0Q4g9gfqWz89folKJSi --restart always --init percona/pmm-server:latest</span><br></pre></td></tr></table></figure>

<h2 id="FA-amp-Q"><a href="#FA-amp-Q" class="headerlink" title="FA&amp;Q"></a>FA&amp;Q</h2><p>（1）<code>docker</code> 默认目录 <code>/var/lib/docker</code> 修改为 <code>/data/dockerfile</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ docker info</span><br><span class="line">Kernel Version: <span class="number">3.10</span>.<span class="number">0</span>-<span class="number">693</span>.el7.x86_64</span><br><span class="line">Operating System: CentOS Linux <span class="number">7</span> (Core)</span><br><span class="line">OSType: linux</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Number of Docker Hooks: <span class="number">3</span></span><br><span class="line">CPUs: <span class="number">6</span></span><br><span class="line">Total Memory: <span class="number">15.66</span> GiB</span><br><span class="line">Name: console</span><br><span class="line">ID: <span class="number">7</span>MYD:NQPC:<span class="number">4</span>TNL:IT3W:<span class="number">6</span>KZS:TY6L:CORW:L432:UE3M:<span class="number">4</span>LBJ:OFUU:HSMB</span><br><span class="line">Docker Root Dir: /var/lib/docker</span><br><span class="line">Debug Mode (client): false</span><br><span class="line">Debug Mode (server): false</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 停止docker服务</span></span><br><span class="line">$ systemctl stop docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将docker文件迁移到指定目录</span></span><br><span class="line">$ mkdir /<span class="keyword">data</span>/dockerfile</span><br><span class="line">$ mv /var/lib/docker/* /<span class="keyword">data</span>/dockerfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除原目录</span></span><br><span class="line">$ rm -rf /var/lib/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建软连接</span></span><br><span class="line">$ ln -s/<span class="keyword">data</span>/dockerfile/ /var/lib/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker服务</span></span><br><span class="line">$ systemctl start docker</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ docker info</span><br><span class="line">Kernel Version: <span class="number">3.10</span>.<span class="number">0</span>-<span class="number">693</span>.el7.x86_64</span><br><span class="line">Operating System: CentOS Linux <span class="number">7</span> (Core)</span><br><span class="line">OSType: linux</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Number of Docker Hooks: <span class="number">3</span></span><br><span class="line">CPUs: <span class="number">6</span></span><br><span class="line">Total Memory: <span class="number">15.66</span> GiB</span><br><span class="line">Name: console</span><br><span class="line">ID: <span class="number">7</span>MYD:NQPC:<span class="number">4</span>TNL:IT3W:<span class="number">6</span>KZS:TY6L:CORW:L432:UE3M:<span class="number">4</span>LBJ:OFUU:HSMB</span><br><span class="line">Docker Root Dir: /<span class="keyword">data</span>/dockerfile</span><br><span class="line">Debug Mode (client): false</span><br><span class="line">Debug Mode (server): false</span><br></pre></td></tr></table></figure>

<p>（2）<code>PMM</code> 修改主机名作为唯一标识，修改为 <code>ip</code>、<code>port</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[root@ptdsmapp03 pmm-client]<span class="comment"># pmm-admin check-network</span></span><br><span class="line">PMM Network Status</span><br><span class="line"></span><br><span class="line">Server Address | <span class="number">10.133</span>.<span class="number">0.53</span>:<span class="number">8090</span></span><br><span class="line">Client Address | <span class="number">10.133</span>.<span class="number">0.51</span> </span><br><span class="line"></span><br><span class="line">*** System Time**</span><br><span class="line">NTP Server (<span class="number">0</span>.pool.ntp.org)         | <span class="number">2019</span>-<span class="number">09</span>-<span class="number">02</span> <span class="number">08</span>:<span class="number">59</span>:<span class="number">28</span> +<span class="number">0000</span> UTC</span><br><span class="line">PMM Server                          | <span class="number">2019</span>-<span class="number">09</span>-<span class="number">02</span> <span class="number">08</span>:<span class="number">59</span>:<span class="number">28</span> +<span class="number">0000</span> GMT</span><br><span class="line">PMM Client                          | <span class="number">2019</span>-<span class="number">09</span>-<span class="number">02</span> <span class="number">16</span>:<span class="number">59</span>:<span class="number">28</span> +<span class="number">0800</span> CST</span><br><span class="line">PMM Server Time Drift               | **OK**</span><br><span class="line">PMM Client Time Drift               | **OK**</span><br><span class="line">PMM Client to PMM Server Time Drift | **OK**</span><br><span class="line"></span><br><span class="line">*** Connection: Client --&gt; Server**</span><br><span class="line">-------------------- -------      </span><br><span class="line">SERVER SERVICE       STATUS       </span><br><span class="line">-------------------- -------      </span><br><span class="line">Consul API           **OK**</span><br><span class="line">Prometheus API       **OK**</span><br><span class="line">Query Analytics API  **OK**</span><br><span class="line"></span><br><span class="line">Connection duration | <span class="number">433.939</span>µs</span><br><span class="line">Request duration    | <span class="number">3.335106</span>ms</span><br><span class="line">Full round trip     | <span class="number">3.769045</span>ms</span><br><span class="line"></span><br><span class="line">*** Connection: Client &lt;-- Server**</span><br><span class="line">-------------- ----------------- ------------------ ------- ---------- ---------</span><br><span class="line">SERVICE TYPE   NAME              REMOTE ENDPOINT    STATUS  HTTPS/TLS  PASSWORD </span><br><span class="line">-------------- ----------------- ------------------ ------- ---------- ---------</span><br><span class="line">linux:metrics  <span class="number">10.133</span>.<span class="number">0.51</span>       <span class="number">10.133</span>.<span class="number">0.51</span>:<span class="number">42000</span>  **OK**      **YES**        -        </span><br><span class="line">mysql:metrics  <span class="number">10.133</span>.<span class="number">0.51</span>:<span class="number">3306</span>  <span class="number">10.133</span>.<span class="number">0.51</span>:<span class="number">42002</span>  **OK**      **YES**        -</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
        <tag>Grafana</tag>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Page + Hexo + Next 搭建个人博客</title>
    <url>/blog/2019/04/29/new-blog/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1g5os777yb2j30m80dcaba.jpg" alt></p>
<blockquote>
<p><a href="https://pages.github.com/" target="_blank" rel="noopener">Github Page</a>：是 <a href="https://github.com/" target="_blank" rel="noopener">Github</a> 提供的一种免费的静态网页托管服务，可以用来托管博客、项目官网等静态网页。支持 <a href="http://www.jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>、<a href="https://gohugo.io/" target="_blank" rel="noopener">Hugo</a>、<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 等编译静态资源。</p>
</blockquote>
<blockquote>
<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>：是基于 <a href="http://nodejs.cn/" target="_blank" rel="noopener">Node.js</a> 驱动的一款快速、简洁且高效的博客框架，有多个 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a> 可选。通过 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 你可以轻松地使用 <a href="http://markdownpad.com/" target="_blank" rel="noopener">Markdown</a> 编写文章，除了 <a href="http://markdownpad.com/" target="_blank" rel="noopener">Markdown</a> 本身的语法之外，还可以使用 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 提供的 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="noopener">标签插件</a> 来快速的插入特定形式的内容。</p>
</blockquote>
<blockquote>
<p><a href="http://theme-next.iissnan.com" target="_blank" rel="noopener">Next</a>：是一款高质量的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 主题。</p>
</blockquote>
<h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载地址</a></p>
<blockquote>
<p>注意：在安装时，勾选 <strong><u>Add to PATH</u></strong> 选项</p>
</blockquote>
<h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><p><a href="https://git-scm.com" target="_blank" rel="noopener">下载地址</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ git version</span><br><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure>

<h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>文件夹目录说明：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml            <span class="comment"># 站点配置文件 </span></span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds              <span class="comment"># 模版文件夹</span></span><br><span class="line">├── source                 <span class="comment"># 资源文件夹</span></span><br><span class="line">|   ├── _drafts            <span class="comment"># 草稿文件</span></span><br><span class="line">|   └── _posts             <span class="comment"># *.md文件 </span></span><br><span class="line">└── themes                 <span class="comment"># 主题文件夹</span></span><br></pre></td></tr></table></figure>

<p>如果上面的命令都没报错的话，运行 <code>hexo s</code> 命令，在浏览器中输入 <code>http://localhost:4000</code> 可以看到 <code>Hello World</code>，说明安装成功了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p><code>hexo</code> 命令说明：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ hexo generate            <span class="comment"># 生成静态文件至public目录</span></span><br><span class="line">$ hexo deploy              <span class="comment"># 将.deploy目录部署到github</span></span><br><span class="line">$ hexo new <span class="string">"postName"</span>      <span class="comment"># 新建文章</span></span><br><span class="line">$ hexo new page <span class="string">"pageName"</span> <span class="comment"># 新建页面</span></span><br><span class="line">$ hexo server              <span class="comment"># 启动服务</span></span><br><span class="line">$ hexo clean               <span class="comment"># 清除部署緩存</span></span><br><span class="line">$ hexo g -d                <span class="comment"># 生成加部署</span></span><br><span class="line">$ hexo g -s                <span class="comment"># 生成加预览</span></span><br></pre></td></tr></table></figure>

<h3 id="设置主题-Next"><a href="#设置主题-Next" class="headerlink" title="设置主题 Next"></a>设置主题 Next</h3><blockquote>
<p><strong>站点配置文件</strong>：<code>E:\Rao&#39;s Blog\hexo\_config.yml</code></p>
</blockquote>
<blockquote>
<p><strong>主题配置文件</strong>：<code>E:\Rao&#39;s Blog\hexo\themes\next\_config.yml</code></p>
</blockquote>
<p>安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 <code>themes</code> 目录下， 然后修改下配置文件即可。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ cd hexo</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>当下载完成后，打开站点配置文件， 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>最好使用 <code>hexo clean</code> 来清除 <code>Hexo</code> 的缓存，然后即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79ly1g5osgyn3e9j30wc0h2405.jpg" alt></p>
<p>至此，你本地的博客就已经搭建成功，也可以对主题进行<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">个性化设定</a>，接下来就是部署到 <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Page</a> 了。</p>
<h3 id="设置-Github-Page"><a href="#设置-Github-Page" class="headerlink" title="设置 Github Page"></a>设置 Github Page</h3><p>首先如果你还没有 <code>Github</code> 账号的先<a href="https://github.com/" target="_blank" rel="noopener">注册</a> 一个，点击 <code>Start project</code> 或者下面的 <code>new repository</code> 创建一个新的仓库 <code>blog</code>，<code>GitHub Pages</code> 选择 <code>master</code> 分支，出现地址 <code>https://huiraoo.github.io/blog/</code> 就是你的个人博客。</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79ly1g5osf29m0aj30kc0ea3yx.jpg" alt></p>
<h3 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置SSH key</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line">git config --global user.name <span class="string">"用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"邮箱地址"</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">'上面的邮箱'</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1g5osh133vgj30sb0c9wj3.jpg" alt></p>
<p>修改站点配置文件，把仓库的 <code>git</code> 地址添加进去就行了</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:huiraoo/blog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>执行部署命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>

<h3 id="配置图床"><a href="#配置图床" class="headerlink" title="配置图床"></a>配置图床</h3><p><a href="https://toolinbox.net/iPic/AddAliOSS.html" target="_blank" rel="noopener">阿里云OSS</a></p>
<h3 id="配置搜索"><a href="#配置搜索" class="headerlink" title="配置搜索"></a>配置搜索</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载插件</span></span><br><span class="line">cd /Users/raohui/Blog/hexo</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点配置</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: <span class="number">10000</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 主题配置</span></span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h2 id="FA-amp-Q"><a href="#FA-amp-Q" class="headerlink" title="FA&amp;Q"></a>FA&amp;Q</h2><p><strong>问题描述</strong>：<code>Hexo</code> 主题无法加载到 <code>Github Page</code>，访问 <code>https://huiraoo.github.io/blog</code> 显示乱码</p>
<p><strong>解决办法</strong>：修改站点配置文件，填写 <code>url</code> 和 <code>root</code></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: https://huiraoo.github.io/blog</span><br><span class="line">root: /blog/</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>Github Page</tag>
      </tags>
  </entry>
</search>
